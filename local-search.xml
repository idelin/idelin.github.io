<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据平台产品全功能流程图</title>
    <link href="/2022/08/26/%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%BA%A7%E5%93%81%E5%85%A8%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    <url>/2022/08/26/%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%BA%A7%E5%93%81%E5%85%A8%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<iframe id="embed_dom" name="embed_dom" frameborder="0" style="display:block;width:800px; height:400px;" src="https://www.processon.com/embed/61a43fee63768975f8547859"></iframe><p><strong>详细流程表述了数据平台类型的产品的全功能流程图</strong></p><p><strong>适用于 安全分析、资产管理、风控、数据分析 等产品。</strong></p>]]></content>
    
    
    <categories>
      
      <category>架构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>流程图</tag>
      
      <tag>架构图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何维护更新日志</title>
    <link href="/2022/08/25/%E5%A6%82%E4%BD%95%E7%BB%B4%E6%8A%A4%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"/>
    <url>/2022/08/25/%E5%A6%82%E4%BD%95%E7%BB%B4%E6%8A%A4%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<h3 id="更新日志是什么？"><a href="#更新日志是什么？" class="headerlink" title="更新日志是什么？"></a>更新日志是什么？</h3><p>更新日志（Change Log）是一个由人工编辑，以时间为倒序的列表， 以记录一个项目中所有版本的显著变动。</p><h3 id="为何要提供更新日志？"><a href="#为何要提供更新日志？" class="headerlink" title="为何要提供更新日志？"></a>为何要提供更新日志？</h3><p>为了让用户和开发人员更简单明确的知晓项目在不同版本之间有哪些显著变动。</p><h3 id="哪些人需要更新日志？"><a href="#哪些人需要更新日志？" class="headerlink" title="哪些人需要更新日志？"></a>哪些人需要更新日志？</h3><p>人人需要更新日志。无论是消费者还是开发者，软件的最终用户都关心软件所包含什么。 当软件有所变动时，大家希望知道改动是为何、以及如何进行的。</p><h3 id="指导原则"><a href="#指导原则" class="headerlink" title="指导原则"></a>指导原则</h3><ul><li>记住日志是写给<em>人</em>的，而非机器。</li><li>每个版本都应该有独立的入口。</li><li>同类改动应该分组放置。</li><li>版本与章节应该相互对应。</li><li>新版本在前，旧版本在后。</li><li>应包括每个版本的发布日期。</li></ul><h3 id="变动类型"><a href="#变动类型" class="headerlink" title="变动类型"></a>变动类型</h3><ul><li><code>Added</code> 新添加的功能。</li><li><code>Changed</code> 对现有功能的变更。</li><li><code>Deprecated</code> 已经不建议使用，准备很快移除的功能。</li><li><code>Removed</code> 已经移除的功能。</li><li><code>Fixed</code> 对bug的修复</li><li><code>Security</code> 对安全的改进</li></ul><h3 id="如何减少维护更新日志的精力？"><a href="#如何减少维护更新日志的精力？" class="headerlink" title="如何减少维护更新日志的精力？"></a>如何减少维护更新日志的精力？</h3><p>在文档最上方提供 <code>Unreleased</code> 区块以记录即将发布的更新内容。</p><p>这样有两大意义：</p><ul><li>大家可以知道在未来版本中可能会有哪些变更</li><li>在发布新版本时，可以直接将<code>Unreleased</code>区块中的内容移动至新发 布版本的描述区块就可以了</li></ul><p>当然有，下面就是一些糟糕的方式。</p><h3 id="使用git日志"><a href="#使用git日志" class="headerlink" title="使用git日志"></a>使用git日志</h3><p>使用git日志作为更新日志是个非常不好的方式：git日志充满各种无意义的信息， 如合并提交、语焉不详的提交标题、文档更新等。</p><p>提交的目的是记录源码的演化。 一些项目会清理提交记录，一些则不会。</p><p>更新日志的目的则是记录重要的变更以供最终受众阅读，而记录范围通常涵盖多次提交。</p><p>但这是个重要的参考，特别是规范的 git 日志。</p><h3 id="无视即将弃用功能"><a href="#无视即将弃用功能" class="headerlink" title="无视即将弃用功能"></a>无视即将弃用功能</h3><p>当从一个版本升级至另一个时，人们应清楚（尽管痛苦）的知道哪些部分将出现问题。 应该允许先升级至一个列出哪些功能将会被弃用的版本，待去掉那些不再支持的部分后， 再升级至把那些弃用功能真正移除的版本。</p><p>即使其他什么都不做，也要在更新日志中列出derecations，removals以及其他重大变动。</p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>更新日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jks证书转crt&amp;key</title>
    <link href="/2022/08/24/Jks%E8%AF%81%E4%B9%A6%E8%BD%ACcrt-key/"/>
    <url>/2022/08/24/Jks%E8%AF%81%E4%B9%A6%E8%BD%ACcrt-key/</url>
    
    <content type="html"><![CDATA[<ol><li>jks -&gt; p12<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keytool -importkeystore -srckeystore server.key -srcstoretype JKS -deststoretype PKCS12 -destkeystore server.p12<br></code></pre></td></tr></table></figure></li></ol> <span id="more"></span><ol start="2"><li><p>p12 -&gt; pem</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openssl pkcs12 -in server.p12 -out server.pem <br></code></pre></td></tr></table></figure></li><li><p>p12 -&gt; key、crt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openssl pkcs12 -in server.p12 -nocerts -out server.key<br>openssl pkcs12 -in server.p12 -nokeys -clcerts -out server.crt<br></code></pre></td></tr></table></figure></li><li><p>去除生成key文件时的口令，避免每次使用都要输入：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp server.key server.key.org<br>openssl rsa -in server.key.org -out server.key<br></code></pre></td></tr></table></figure><ol start="5"><li>配置nginx.conf，在server块下面添加以下配置：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssl</span> <span class="hljs-literal">on</span>;<br><span class="hljs-attribute">ssl_certificate</span> /usr/local/nginx/conf/server.crt; //证书<br><span class="hljs-attribute">ssl_certificate_key</span> /usr/local/nginx/conf/server.key; //私钥<br></code></pre></td></tr></table></figure><ol start="6"><li>重新加载配置: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/nginx/sbin/nginx -s reload<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>https</category>
      
    </categories>
    
    
    <tags>
      
      <tag>https</tag>
      
      <tag>证书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>垃圾回收器G1</title>
    <link href="/2022/08/09/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8G1/"/>
    <url>/2022/08/09/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8G1/</url>
    
    <content type="html"><![CDATA[<p>G1运作步骤：</p><ol><li>初始标记(stop the world事件CPU停顿只处理垃圾)；</li><li>并发标记(与用户线程并发执行)；</li><li>最终标记(stop the world事件，CPU停顿处理垃圾)；</li><li>筛选回收(stop the world事件根据用户期望的GC停顿时间回收)(注意：CMS在这一步不需要stop the world)（阿里问为何停顿时间可以设置，参考：<a href="https://www.cnblogs.com/aspirant/p/8663872.html">G1 垃圾收集器架构和如何做到可预测的停顿(阿里)</a></li></ol><span id="more"></span><p>与其他GC收集器相比，G1具备如下特点：</p><p>1、并行于并发：G1能充分利用CPU、多核环境下的硬件优势，使用多个CPU（CPU或者CPU核心）来缩短stop-The-World停顿时间。部分其他收集器原本需要停顿<a href="http://lib.csdn.net/base/java">Java</a>线程执行的GC动作，G1收集器仍然可以通过并发的方式让java程序继续执行。</p><p>2、分代收集：虽然G1可以不需要其他收集器配合就能独立管理整个GC堆，但是还是保留了分代的概念。它能够采用不同的方式去处理新创建的对象和已经存活了一段时间，熬过多次GC的旧对象以获取更好的收集效果。</p><p>3、空间整合：与CMS的“标记–清理”算法不同，G1从整体来看是基于“标记整理”算法实现的收集器；从局部上来看是基于“复制”算法实现的。</p><p>4、可预测的停顿：这是G1相对于CMS的另一个大优势，降低停顿时间是G1和ＣＭＳ共同的关注点，但Ｇ１除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为M毫秒的时间片段内，</p><p>上面几个步骤的运作过程和CMS有很多相似之处。初始标记阶段仅仅只是标记一下GC Roots能直接关联到的对象，并且修改TAMS的值，让下一个阶段用户程序并发运行时，能在正确可用的Region中创建新对象，这一阶段需要停顿线程，但是耗时很短，并发标记阶段是从GC Root开始对堆中对象进行可达性分析，找出存活的对象，这阶段时耗时较长，但可与用户程序并发执行。而最终标记阶段则是为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间对象变化记录在线程Remenbered Set Logs里面，最终标记阶段需要把Remembered Set Logs的数据合并到Remembered Set Logs里面，最终标记阶段需要把Remembered Set Logs的数据合并到Remembered Set中，这一阶段需要停顿线程，但是可并行执行。最后在筛选回收阶段首先对各个Region的回收价值和成本进行排序，根据用户所期望的GC停顿时间来制定回收计划。</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通用WEB框架的一些思考</title>
    <link href="/2022/08/05/%E9%80%9A%E7%94%A8WEB%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
    <url>/2022/08/05/%E9%80%9A%E7%94%A8WEB%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<p>基础技术框架的研究和推广往往是很重要的动作，跟同事聊的过程中，产生了一些想法，分享如下。</p><span id="more"></span><h3 id="一、所需的功能点"><a href="#一、所需的功能点" class="headerlink" title="一、所需的功能点"></a>一、所需的功能点</h3><p>1、权限集成，登录登出、用户管理、角色管理、组织架构、认证安全（例如：验证码、多因子认证、二步验证、限制 IP 登录等）、单点登录、第三方认证接入认证（例如：oAuth3）、支持LDAP、支持应用授权（用于开放 OPENAPI 或其他对接） 等； </p><p>2、接口规范类（如：Response），先有规范再有相关类，建议使用 标准 Restful 规范来定义标准接口相关类；</p><p>3、migration管理，建议使用 flyway 做sql文件的版本管理；</p><p>4、操作日志记录，安全产品必备功能点，可以考虑用注解形式来做；</p><p>5、升级管理，支持全量、增量等升级模式，支持拓展升级类来适应不同产品自己的升级业务（例如：规则包的升级）；</p><p>6、许可管理，各产品强需求，可以直接对接公司新的许可管理平台，一方面更好推广新的公司许可标准推广，另一方面新产品可以无需重复开发许可模块；</p><p>7、配置管理，支持系统参数配置； </p><p>8、OPENAPI框架，支持管理 OPEANAPI，监控调用次数、健康度、熔断等情况，支持开放动态接口文档（可以借用 Swagger，但安全性原因，建议自行开发页面）； </p><p>9、常用工具类集成，集成IPUtils、HttpUtils、EhcacheUtils、Md5Utils 基础工具类–必备，操作ES、Kafka、HBase、Zookeeper等大数据组件的操作工具类–可选； </p><p>10、集成脚本，集成 构建、安装、启停 等基础脚本。 </p><h3 id="二、形态思考"><a href="#二、形态思考" class="headerlink" title="二、形态思考"></a>二、形态思考</h3><p>1、开发框架选型 </p><p>大概率是不同语言会提供多个版本，Java 建议是基于 Springboot（流行、简单、易集成），Python建议是基于 Sanic（别问为什么不是 Django，因为它快）。 </p><p>2、开发及部署模式 </p><p>建议兼容微服务模式和单体模式。在如今的产品选型里，有相当多的产品采用微服务开发，支持微服务模式和单体模式 两种开发部署是很有必要的，代码维护可以是一套，注册中心可以支持几款主流（Eureka、ZooKeeper、Consul、Nacos） </p><p>3、权限注册中心独立 </p><p>功能点里有提到权限集成，这个是此基础框架是必要的且第一优先级的功能点，建议可以独立起来，一方面可以独立维护权限相关代码逻辑，一方面当各个产品做集成的时候可以直接切换到同一个权限服务（公司内产品集成痛点）。无论是否微服务形态，都可以是独立权限服务。</p><h3 id="三、迭代开发模式"><a href="#三、迭代开发模式" class="headerlink" title="三、迭代开发模式"></a>三、迭代开发模式</h3><p>建议由公共研发团队来主导公司内开源+持续维护推进，业务部门研发提需求+提 issue+提 PR 做贡献。</p><p>说实话到公司这个体量，各开发语言没有形成一个统一的开发框架确实也不多见，先从 基础WEB框架 入手也好的，也很期待公司可以统一牵头做这个事情，让大家快速实现产品业务。 </p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git patch使用</title>
    <link href="/2022/08/05/git%20patch%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/08/05/git%20patch%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>Git 提供了两种补丁方案，一种是通过 git diff 生成的 .diff 文件，第二种是通过 git format-patch 生成的 .patch 文件。</p><span id="more"></span><p>通过 git diff 生成的文件不含有 commit 信息，可以指定文件生成 diff，也可以指定单个 commit， 多个 commit 生成 。</p><p>通过 git format-patch 生成的 .patch 文件 含有 commmit 信息。一个 commit 对应一个 patch 文件，也可以整合到一个 patch 文件里。</p><p>此方案只针对某一个 branch 的代码的迁移。</p><h2 id="1-git-format-patch"><a href="#1-git-format-patch" class="headerlink" title="1. git format-patch"></a>1. git format-patch</h2><p>此命令用于生成 patch 文件。</p><p>某次提交以后的所有 patch:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git format-patch [commitId]<br></code></pre></td></tr></table></figure><h2 id="2-git-am"><a href="#2-git-am" class="headerlink" title="2. git am"></a>2. git am</h2><p>此命令用于打 patch 文件入分支。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git am xxx.patch<br></code></pre></td></tr></table></figure><h2 id="3-Usage"><a href="#3-Usage" class="headerlink" title="3. Usage"></a>3. Usage</h2><p>使用流程：start -&gt; 云桌面查看待同步分支最新 commitId -&gt; 内网切换到需要同步的分支 -&gt; 内网 git format-patch -&gt; 打包 patch 文件内传外（包含代码，需要有高权限的人才可以传） -&gt; 云桌面解包 -&gt; git am -&gt; over。</p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AiLPHA REST API指南</title>
    <link href="/2022/03/26/AiLPHA-REST-API%E6%8C%87%E5%8D%97/"/>
    <url>/2022/03/26/AiLPHA-REST-API%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="1-摘要"><a href="#1-摘要" class="headerlink" title="1. 摘要"></a>1. 摘要</h2><p>AiLPHA REST API指南作为一种设计规范，鼓励开发同学通过RESTful HTTP接口访问资源。</p><p>本文档建立了AiLPHA REST API应该遵循的指导原则，以便开发统一一致的RESTful接口。</p><span id="more"></span><h2 id="2-引言"><a href="#2-引言" class="headerlink" title="2. 引言"></a>2. 引言</h2><p>为了给开发同学提供更流畅的开发体验，让API遵循统一的设计准则很重要，这些准则能让API简单且直观。</p><p>API一致性的好处在于使团队拥有统一的代码、模式、文档风格和设计策略。</p><p>这些准则旨在达成如下目标：</p><ul><li>尽可能地遵循行业普遍接受的 REST&#x2F;HTTP 最佳实践；</li><li>内部接口层面，让前后端对接更为顺畅；</li><li>对外接口层面，让第三方开发同学都可以轻松的通过REST接口访问的AiLPHA OPEN API；</li><li>接口测试层面，让测试同学可以按照标准更容易地去进行自动化接口测试；</li><li>让其他部门、合作伙伴使用这些准则来设计自己的REST API。</li></ul><h3 id="2-1-推荐阅读"><a href="#2-1-推荐阅读" class="headerlink" title="2.1 推荐阅读"></a>2.1 推荐阅读</h3><p>了解REST架构风格背后的理念，更有助于开发优秀的基于 HTTP 的服务。 如果您对 RESTful 设计不熟悉，请参阅以下优秀资源：</p><ul><li><a href="https://tools.ietf.org/html/rfc7231">RFC7231</a> – 定义HTTP&#x2F;1.1 语义规范的权威文档</li><li><a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">REST论文</a> – Roy Fielding网络架构论文中关于REST的章节，“架构风格与基于网络的软件体系结构设计”</li><li><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html">理解RESTful架构</a> – 一篇介绍RESTful架构较为准确的文章</li><li><a href="https://www.zhihu.com/question/27785028">生动理解REST</a> – 一篇介绍REST较为生动易懂的文章</li><li><a href="https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#1444-example-response">微软API规范</a> – 本指南的主要参考规范</li></ul><h2 id="3-指南解读"><a href="#3-指南解读" class="headerlink" title="3. 指南解读"></a>3. 指南解读</h2><h3 id="3-1-应用指南"><a href="#3-1-应用指南" class="headerlink" title="3.1 应用指南"></a>3.1 应用指南</h3><p>这些准则适用于AiLPHA基础研发部（或任何公司内其他部门、公司外合作伙伴）开发服务里的公开REST API。私有或内部API也应该尝试遵循这些准则，保证一致性不仅对外部用户有价值，对内部服务使用者也很有价值，而这些准则为任何服务都提供了最佳实践。 </p><p>有合理理由可不遵循这些准则，如：</p><p>一些服务与某些外部定义的REST API互操作时必须与某些外部的API兼容，允许其无法遵循这些准则。</p><p>一些服务可能具有需要特殊功能上或性能上的需求，允许其无法遵循这些准则。</p><h3 id="3-2-历史接口"><a href="#3-2-历史接口" class="headerlink" title="3.2 历史接口"></a>3.2 历史接口</h3><p>不建议仅仅为了遵从指南而对这些指南之前的旧服务或模块进行重大更改。</p><h3 id="3-3-“要求”关键字"><a href="#3-3-“要求”关键字" class="headerlink" title="3.3 “要求”关键字"></a>3.3 “要求”关键字</h3><p>本文档中的 ”必须”（MUST、REQUIRED、SHALL）、”禁止”（MUST NOT、SHALL NOT）、”推荐”（SHOULD、RECOMMENDED）、 ”可以”（MAY）、”可选“（OPTIONAL） 等关键字的详细解释见 <a href="https://tools.ietf.org/html/rfc2119">RFC2119</a>。</p><h2 id="4-分类"><a href="#4-分类" class="headerlink" title="4. 分类"></a>4. 分类</h2><p>服务必须符合下面定义的分类法。</p><h3 id="4-1-错误（Error）"><a href="#4-1-错误（Error）" class="headerlink" title="4.1 错误（Error）"></a>4.1 错误（Error）</h3><p>错误，定义为因客户端向服务传递错误数据，导致服务端拒绝该请求。客户端传递错误的或者不合法的数据的情况通常返回 “4xx” 的 HTTP错误码。</p><p>错误不会影响API的整体可用性。</p><p>例如 无效凭证、错误的参数、未知的版本ID等。</p><h3 id="4-2-故障（Faults）"><a href="#4-2-故障（Faults）" class="headerlink" title="4.2 故障（Faults）"></a>4.2 故障（Faults）</h3><p>故障，定义为服务无法正确返回数据以响应有效的客户端请求。通常会返回“5xx”HTTP错误码。</p><p>故障会影响整体 API 的可用性。故障意味着服务端代码出现故障，可能会影响整体的API使用。</p><p>例如 数据库连接超时。</p><h2 id="5-客户端要求"><a href="#5-客户端要求" class="headerlink" title="5. 客户端要求"></a>5. 客户端要求</h2><p>为确保客户端更好的接入REST服务，客户端应遵循以下最佳实践:</p><h3 id="5-1-字段忽略原则"><a href="#5-1-字段忽略原则" class="headerlink" title="5.1 字段忽略原则"></a>5.1 字段忽略原则</h3><p>客户端<strong>必须</strong>安全地忽略未约定的字段。</p><p>在产品迭代的过程中，有些服务接口可能在不更改版本号的情况下向响应数据中添加字段。此类服务接口<strong>必须</strong>在其文档中注明，而客户端<strong>必须</strong>可以忽略这些未知字段。</p><h3 id="5-2-字段排序忽略原则"><a href="#5-2-字段排序忽略原则" class="headerlink" title="5.2 字段排序忽略原则"></a>5.2 字段排序忽略原则</h3><p>客户端处理响应数据时<strong>禁止</strong>依赖服务端JSON响应数据字段的顺序。</p><p>当服务器返回的 JSON 对象中的字段顺序发生变化，客户端应当能够正确进行解析处理。</p><p>服务端<strong>可以</strong>在返回值中显式说明指定某些元素按特定方式进行排序，客户端处理数据时<strong>可以</strong>依赖于服务端明确指定的排序行为。</p><h3 id="5-3-无声失效原则"><a href="#5-3-无声失效原则" class="headerlink" title="5.3 无声失效原则"></a>5.3 无声失效原则</h3><p>当客户端请求带可选功能参数的服务时（包含带可选的头部信息），<strong>必须</strong>对服务端的返回格式有一定兼容性，<strong>可以</strong>忽略这些特定功能。</p><p>例如 分页数、排序、国际化等自定义参数的支持和返回格式的兼容。</p><h2 id="6-基础原则"><a href="#6-基础原则" class="headerlink" title="6. 基础原则"></a>6. 基础原则</h2><h3 id="6-1-URL结构☆"><a href="#6-1-URL结构☆" class="headerlink" title="6.1 URL结构☆"></a>6.1 URL结构☆</h3><p>结构约束：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">&#123;schema&#125;://&#123;serviceRoot&#125;/&#123;collection&#125;[/&#123;id&#125;]<br>&#123;schema&#125;://&#123;host&#125;:&#123;port&#125;/&#123;prefix&#125;/&#123;version&#125;/&#123;collection&#125;[/&#123;id&#125;]<br></code></pre></td></tr></table></figure><ul><li>schema - API接口支持的协议（http或https）</li><li>{serviceRoot} – 站点URL (site URL) + 服务的根路径的组合<ul><li>host - 服务的域名或IP</li><li>port - 服务的端口</li><li>prefix - 接口的标识前缀：”&#x2F;api”</li><li>version - 接口的版本</li></ul></li><li>{collection} – 集合的名称，复数</li><li>{id} – 唯一标识属性的值，唯一标识中原则上不允许使用”&#x2F;“，如果业务需要，一定要带”\“转义。</li></ul><p>API URL路径结构应该是友好的易于理解的。甚至用户无需通过阅读API文档能够猜出相关结构和路径。</p><p>正例：<a href="https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/memorys">https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/memorys</a></p><p>显而易见，这是一个： 版本为v1.0的 获取标识为“JHF8UE6H5W34D”探针内存数据资源 的API。</p><p>反例：<a href="https://ailpha.com/api/EWS/OData/agents(&#39;JHF8UE6H5W34D&#39;)/Folders(&#39;MEM&#39;)">https://ailpha.com/api/EWS/OData/agents(&#39;JHF8UE6H5W34D&#39;)/Folders(&#39;MEM&#39;)</a></p><p>虽然也能理解部分含义，但结构混乱，解析困难且不友好。</p><p>URL结尾为<strong>资源（resource）</strong>，既然是资源，必须是名词，必须为复数形式。</p><p>反例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">GET</span> /api/agent/list?<span class="hljs-attribute">agentType</span>=ainta<br><span class="hljs-built_in">GET</span> /api/agent/getAgentById?<span class="hljs-attribute">id</span>=JHF8UE6H5W34D<br>POST /api/agent/deleteAgentById?<span class="hljs-attribute">id</span>=JHF8UE6H5W34D<br></code></pre></td></tr></table></figure><p>正例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">GET <span class="hljs-regexp">/api/</span>v1.<span class="hljs-number">0</span>/agents?agentType=ainta<br>GET <span class="hljs-regexp">/api/</span>v1.<span class="hljs-number">0</span><span class="hljs-regexp">/agents/</span>JHF8UE6H5W34D<br><span class="hljs-keyword">DELETE</span> <span class="hljs-regexp">/api/</span>v1.<span class="hljs-number">0</span><span class="hljs-regexp">/agents/</span>JHF8UE6H5W34D<br></code></pre></td></tr></table></figure><h3 id="6-2-URL长度"><a href="#6-2-URL长度" class="headerlink" title="6.2 URL长度"></a>6.2 URL长度</h3><p>HTTP&#x2F;1.1 标准中并未对请求长度做限制，其中包含URL。<br>RFC 7230 原文：</p><blockquote><p>HTTP does not place a predefined limit on the length of a request-line. […] A server that receives a request-target longer than any URI it wishes to parse MUST respond with a 414 (URI Too Long) status code.</p></blockquote><p>对应翻译：</p><blockquote><p>HTTP不会对请求行的长度设置预定义的限制。[…]如果服务器接收的请求目标比它希望解析的任何URI都长，则必须使用414（URI过长）状态码进行响应。</p></blockquote><p>此处约定URL长度不超过2,000个字符，约定依据是IE所能接收的URL长度为2083（其他浏览器也有限定但大于这个值）。</p><p>不同客户端支持的最长 URL 长度参见以下资料：</p><ul><li><a href="http://stackoverflow.com/a/417184">http://stackoverflow.com/a/417184</a></li><li><a href="https://blogs.msdn.microsoft.com/ieinternals/2014/08/13/url-length-limits/">https://blogs.msdn.microsoft.com/ieinternals/2014/08/13/url-length-limits/</a></li></ul><h3 id="6-3-规范标识符"><a href="#6-3-规范标识符" class="headerlink" title="6.3 规范标识符"></a>6.3 规范标识符</h3><p>在URL中，针对具体的资源，必须提供一个唯一且稳定的标识符。</p><p>包含规范标识符的URL的一个例子依然是6.1中的正例：</p><p><a href="https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/memory">https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/memory</a></p><p>标识符推荐使用有含义的唯一性索引字段（IP、邮箱），也可以是暴露给客户端的主键。</p><h3 id="6-4-操作方法☆"><a href="#6-4-操作方法☆" class="headerlink" title="6.4 操作方法☆"></a>6.4 操作方法☆</h3><p>对于资源的具体操作类型，由HTTP Method表示。</p><table><thead><tr><th>方法</th><th>描述</th><th>是否幂等</th></tr></thead><tbody><tr><td><strong>GET</strong></td><td>返回资源的当前值<br />成功状态码：200（OK）</td><td>✔</td></tr><tr><td><strong>POST</strong></td><td>根据提供的数据创建一个新资源，或者提交一个操作<br />成功状态码：201（Created）</td><td></td></tr><tr><td><strong>PUT</strong></td><td>更新资源（客户端提供改变后的完整资源，或者称：替换资源）<br />成功状态码：200（OK）</td><td>✔</td></tr><tr><td><strong>PATCH</strong></td><td>更新资源（客户端提供改变的属性）<br />成功状态码：200（OK）<br />针对不存在的资源的 PATCH 调用必须使用409（Conflict）响应错误</td><td></td></tr><tr><td><strong>DELETE</strong></td><td>删除资源<br />成功状态码：204（No Content）</td><td>✔</td></tr><tr><td>HEAD</td><td>返回GET响应的资源的元数据，不常用<br />成功状态码：200（OK）</td><td>✔</td></tr><tr><td>OPTIONS</td><td>获取关于请求的信息，不常用<br />成功状态码：200（OK）</td><td>✔</td></tr></tbody></table><p>例子：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle">GET /agents：列出所有探针<br>POST /agents：新建一个探针<br>GET <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;：获取某个指定探针的信息<br>PUT <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;：更新某个指定探针的信息（提供该探针的全部信息）<br>PATCH <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;：更新某个指定探针的的信息（提供该探针的部分信息）<br><span class="hljs-keyword">DELETE</span> <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;：删除某个指定探针<br>GET <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;/monitors：列出某个指定探针的所有监控数据<br><span class="hljs-keyword">DELETE</span> <span class="hljs-regexp">/agents/</span>&#123;agentCode&#125;<span class="hljs-regexp">/monitors/</span>&#123;monitorId&#125;：删除某个指定探针的指定监控数据<br></code></pre></td></tr></table></figure><h3 id="6-5-标准请求头"><a href="#6-5-标准请求头" class="headerlink" title="6.5 标准请求头"></a>6.5 标准请求头</h3><p>当前有规范的请求头参数如下所示，使用这些请求头参数不是强制性的，但如果使用它们则必须始终一致地遵循 AiLPHA REST API指南服务使用。</p><table><thead><tr><th>请求头参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>Accept</td><td>Content type</td><td>请求的响应内容类型<br />一般为 Accept: application&#x2F;json</td></tr><tr><td>Accept-Language</td><td>“en”, “cn”, etc.</td><td>指定响应的首选语言。<br />AiLPHA平台支持国际化（i18n），无特殊情况必须使用Accept-Language来指定语言。</td></tr><tr><td>Accept-Charset</td><td>Charset type like “UTF-8”</td><td>指定响应的编码。默认值是UTF-8。</td></tr><tr><td>Content-Type</td><td>Content type</td><td>请求正文的媒体（Mime）类型 (PUT&#x2F;POST&#x2F;PATCH)<br />媒体类型在<a href="https://www.rfc-editor.org/rfc/rfc2854.txt">RFC2854</a>有明确定义</td></tr><tr><td>Prefer</td><td>return&#x3D;minimal, return&#x3D;representation</td><td>如果指定了return &#x3D; minimal首选项，则服务应该返回一个空主体（empty body）以响应一次成功的插入或更新。<br />如果指定了return &#x3D; representation，则服务应该返回创建或更新的资源。<br />使用场景：客户端有时会需要从响应中获得资源，但有时响应会对带宽造成太大的影响而不想获得资源。</td></tr></tbody></table><h3 id="6-6-标准响应头"><a href="#6-6-标准响应头" class="headerlink" title="6.6 标准响应头"></a>6.6 标准响应头</h3><p>服务应该返回以下响应头参数。</p><table><thead><tr><th>响应头参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>Content-Type</td><td>Content type</td><td>请求正文的媒体（Mime）类型 (PUT&#x2F;POST&#x2F;PATCH)<br />媒体类型在<a href="https://www.rfc-editor.org/rfc/rfc2854.txt">RFC2854</a>有明确定义</td></tr><tr><td>X-Frame-Options</td><td>DENY、SAMEORIGIN、ALLOW-FROM uri、NONE</td><td>指示允许一个页面可否在 &lt;frame&gt;,\ &lt;&#x2F;iframe&gt; 或者 &lt;object&gt; 中展现的标记。<br />在AiLPHA中为全局配置，无特殊需要接口开发不指定。</td></tr></tbody></table><h3 id="6-7-状态码☆"><a href="#6-7-状态码☆" class="headerlink" title="6.7 状态码☆"></a>6.7 状态码☆</h3><p>应使用标准HTTP状态码作为响应状态码</p><p>HTTP 状态码就是一个三位数，分成五个类别。</p><ul><li><code>1xx</code>：相关信息</li><li><code>2xx</code>：操作成功</li><li><code>3xx</code>：重定向</li><li><code>4xx</code>：客户端错误</li><li><code>5xx</code>：服务器错误</li></ul><p>这五大类总共包含<a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">100多种</a>状态码，覆盖了绝大部分可能遇到的情况。每一种状态码都有标准的（或者约定的）解释，客户端只需查看状态码，就可以判断出发生了什么情况，所以服务器应该返回尽可能精确的状态码。</p><p>API 不需要<code>1xx</code>状态码，下面介绍其他四类状态码的精确含义。</p><h4 id="6-7-1-常用状态码☆"><a href="#6-7-1-常用状态码☆" class="headerlink" title="6.7.1 常用状态码☆"></a>6.7.1 常用状态码☆</h4><p>以下列举了常用的状态码，表述其使用场景及对应使用说明。</p><h5 id="2xx状态码"><a href="#2xx状态码" class="headerlink" title="2xx状态码"></a>2xx状态码</h5><p><code>200</code>状态码表示操作成功，但是不同的方法可以返回更精确的状态码。</p><blockquote><ul><li>GET: 200 OK</li><li>POST: 201 Created</li><li>PUT: 200 OK</li><li>PATCH: 200 OK</li><li>DELETE: 204 No Content</li></ul></blockquote><p>上面代码中，<code>POST</code>返回<code>201</code>状态码，表示生成了新的资源；<code>DELETE</code>返回<code>204</code>状态码，表示资源已经不存在。</p><p>此外，<code>202 Accepted</code>状态码表示服务器已经收到请求，但还未进行处理，会在未来再处理，通常用于异步操作。<br>下面是一个例子。</p> <figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">202</span> Accepted<br>&#123;<br>  &quot;task&quot;: &#123;<br>    &quot;href&quot;: &quot;/api/update-jobs/12345&quot;,<br>    &quot;id&quot;: &quot;12345&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4xx-状态码"><a href="#4xx-状态码" class="headerlink" title="4xx 状态码"></a>4xx 状态码</h5><p><code>4xx</code>状态码表示客户端错误，主要有下面几种。</p><p><code>400 Bad Request</code>：服务器不理解客户端的请求，未做任何处理。</p><p><code>401 Unauthorized</code>：用户未提供身份验证凭据，或者没有通过身份验证。</p><p><code>403 Forbidden</code>：用户通过了身份验证，但是不具有访问资源所需的权限。</p><p><code>404 Not Found</code>：所请求的资源不存在，或不可用。</p><p><code>405 Method Not Allowed</code>：用户已经通过身份验证，但是所用的 HTTP 方法不在他的权限之内。</p><p><code>415 Unsupported Media Type</code>：客户端要求的返回格式不支持。比如，API 只能返回 JSON 格式，但是客户端要求返回 XML 格式。</p><p><code>422 Unprocessable Entity</code> ：客户端上传的附件无法处理，导致请求失败。</p><p><code>429 Too Many Requests</code>：客户端的请求次数超过限额。</p><h5 id="5xx-状态码"><a href="#5xx-状态码" class="headerlink" title="5xx 状态码"></a>5xx 状态码</h5><p><code>5xx</code>状态码表示服务端错误。一般来说，API 不会向用户透露服务器的详细信息，所以只要两个状态码就够了。</p><p><code>500 Internal Server Error</code>：客户端请求有效，服务器处理时发生了意外。</p><p><code>503 Service Unavailable</code>：服务器无法处理请求，一般用于网站维护状态。</p><h4 id="6-7-2-状态码表"><a href="#6-7-2-状态码表" class="headerlink" title="6.7.2 状态码表"></a>6.7.2 状态码表</h4><table><thead><tr><th align="left">状态码</th><th align="left">状态码英文名称</th><th align="left">中文描述</th></tr></thead><tbody><tr><td align="left">100</td><td align="left">Continue</td><td align="left">继续。<a href="http://www.dreamdu.com/webbuild/client_vs_server/">客户端</a>应继续其请求</td></tr><tr><td align="left">101</td><td align="left">Switching Protocols</td><td align="left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">200</td><td align="left">OK</td><td align="left">请求成功。一般用于GET与POST请求</td></tr><tr><td align="left">201</td><td align="left">Created</td><td align="left">已创建。成功请求并创建了新的资源</td></tr><tr><td align="left">202</td><td align="left">Accepted</td><td align="left">已接受。已经接受请求，但未处理完成</td></tr><tr><td align="left">203</td><td align="left">Non-Authoritative Information</td><td align="left">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td align="left">204</td><td align="left">No Content</td><td align="left">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td align="left">205</td><td align="left">Reset Content</td><td align="left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td align="left">206</td><td align="left">Partial Content</td><td align="left">部分内容。服务器成功处理了部分GET请求</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">300</td><td align="left">Multiple Choices</td><td align="left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td align="left">301</td><td align="left">Moved Permanently</td><td align="left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td align="left">302</td><td align="left">Found</td><td align="left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td align="left">303</td><td align="left">See Other</td><td align="left">查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td align="left">304</td><td align="left">Not Modified</td><td align="left">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td align="left">305</td><td align="left">Use Proxy</td><td align="left">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td align="left">306</td><td align="left">Unused</td><td align="left">已经被废弃的HTTP状态码</td></tr><tr><td align="left">307</td><td align="left">Temporary Redirect</td><td align="left">临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">400</td><td align="left">Bad Request</td><td align="left">客户端请求的语法错误，服务器无法理解</td></tr><tr><td align="left">401</td><td align="left">Unauthorized</td><td align="left">用户未提供身份验证凭据，或者没有通过身份验证</td></tr><tr><td align="left">402</td><td align="left">Payment Required</td><td align="left">保留，将来使用</td></tr><tr><td align="left">403</td><td align="left">Forbidden</td><td align="left">用户通过了身份验证，但是不具有访问资源所需的权限</td></tr><tr><td align="left">404</td><td align="left">Not Found</td><td align="left">所请求的资源不存在，或不可用</td></tr><tr><td align="left">405</td><td align="left">Method Not Allowed</td><td align="left">用户已经通过身份验证，但是所用的 HTTP 方法不在他的权限之内</td></tr><tr><td align="left">406</td><td align="left">Not Acceptable</td><td align="left">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td align="left">407</td><td align="left">Proxy Authentication Required</td><td align="left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td align="left">408</td><td align="left">Request Time-out</td><td align="left">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td align="left">409</td><td align="left">Conflict</td><td align="left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td align="left">410</td><td align="left">Gone</td><td align="left">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td align="left">411</td><td align="left">Length Required</td><td align="left">服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td align="left">412</td><td align="left">Precondition Failed</td><td align="left">客户端请求信息的先决条件错误</td></tr><tr><td align="left">413</td><td align="left">Request Entity Too Large</td><td align="left">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td align="left">414</td><td align="left">Request-URI Too Large</td><td align="left">请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td align="left">415</td><td align="left">Unsupported Media Type</td><td align="left">服务器无法处理请求附带的媒体格式</td></tr><tr><td align="left">416</td><td align="left">Requested range not satisfiable</td><td align="left">客户端请求的范围无效</td></tr><tr><td align="left">417</td><td align="left">Expectation Failed</td><td align="left">服务器无法满足Expect的请求头信息</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">500</td><td align="left">Internal Server Error</td><td align="left">服务器内部错误，无法完成请求</td></tr><tr><td align="left">501</td><td align="left">Not Implemented</td><td align="left">服务器不支持请求的功能，无法完成请求</td></tr><tr><td align="left">502</td><td align="left">Bad Gateway</td><td align="left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td align="left">503</td><td align="left">Service Unavailable</td><td align="left">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td align="left">504</td><td align="left">Gateway Time-out</td><td align="left">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td align="left">505</td><td align="left">HTTP Version not supported</td><td align="left">服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table><p>更多状态码详情，参见：<a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">RFC2616-sec10</a></p><h3 id="6-8-响应格式☆"><a href="#6-8-响应格式☆" class="headerlink" title="6.8 响应格式☆"></a>6.8 响应格式☆</h3><p>此章节为重点，此处规定了可读性较好并且一致的响应结果，开发人员使用 HTTP工具方法处理响应（TODO）。</p><p>没有特殊需求，推荐使用JSON作为传输格式。JSON属性名应该采用驼峰命名规范 (<a href="https://tools.ietf.org/html/rfc3864">RFC3864</a>)。</p><h4 id="6-8-1-响应格式指定"><a href="#6-8-1-响应格式指定" class="headerlink" title="6.8.1 响应格式指定"></a>6.8.1 响应格式指定</h4><p>客户端应该使用Accept参数请求响应格式。服务端可以选择性地忽略，如客户端发送多个Accept参数值，服务可以选择其中一个格式进行响应。</p><p>默认的响应格式（没有指定Accept）应该是application&#x2F;json。</p><p><code>Accept: application/json</code></p><table><thead><tr><th>请求参数类型</th><th>响应类型</th></tr></thead><tbody><tr><td>application&#x2F;json</td><td>必须是返回json格式</td></tr></tbody></table><h4 id="6-8-2-标准响应规范☆"><a href="#6-8-2-标准响应规范☆" class="headerlink" title="6.8.2 标准响应规范☆"></a>6.8.2 标准响应规范☆</h4><p>对于调用成功的情况，规定统一的成功响应的字段规范。</p><h5 id="SuccessResponse"><a href="#SuccessResponse" class="headerlink" title="SuccessResponse"></a>SuccessResponse</h5><p>对象类型</p><table><thead><tr><th>字段</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td><code>data</code></td><td>Object、Object[] …</td><td>✔</td><td>一般为操作的资源，也可以是客户端约定的标识</td></tr><tr><td>…</td><td>…</td><td></td><td>其他业务需要的拓展字段</td></tr></tbody></table><p>成功响应<strong>必须</strong>是单个JSON对象。为保证一致性，该对象必须有一个名为“data”的键，其值类型按不同情况返回。</p><p>如果是单个资源的获取，“data”必须是单个JSON对象。</p><p>如果是多个资源的获取，“data”必须是包含0-n个对象的JSON数组。</p><h5 id="成功响应样例"><a href="#成功响应样例" class="headerlink" title="成功响应样例"></a>成功响应样例</h5><p>例子「单个对象」：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /api/agent-configs/soc<br>&#123;<br>  &quot;data&quot;: &#123;<br>    &quot;agentType&quot;:&quot;soc&quot;,<br>    &quot;softVersion&quot;:&quot;3.0.1&quot;,<br>    &quot;config&quot;:&quot;&quot;,<br>    &quot;version&quot;:1611054006000<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>例子「多个对象」</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /api/agent-configs<br>&#123;<br>  &quot;data&quot;: [<br>    &#123;<br>    &quot;agentType&quot;:&quot;soc&quot;,<br>    &quot;softVersion&quot;:&quot;3.0.1&quot;,<br>    &quot;config&quot;:&quot;&quot;,<br>    &quot;version&quot;:1611054006000<br>  &#125;,<br>    &#123;<br>    &quot;agentType&quot;:&quot;ainta&quot;,<br>    &quot;softVersion&quot;:&quot;1.1.3&quot;,<br>    &quot;config&quot;:&quot;&quot;,<br>    &quot;version&quot;:1611054006000<br>  &#125;]<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /api/agent-configs<br>&#123;<br>  &quot;data&quot;: []<br>&#125;<br></code></pre></td></tr></table></figure><p>例子「成功执行」</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">DELETE /api/agents/HI6J5OEJ23FKH83W<br>&#123;<br>  &quot;data&quot;:1<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-8-3-错误响应规范☆"><a href="#6-8-3-错误响应规范☆" class="headerlink" title="6.8.3 错误响应规范☆"></a>6.8.3 错误响应规范☆</h4><p>对于调用不成功的情况，规定统一的错误响应的字段规范。</p><h5 id="ErrorResponse"><a href="#ErrorResponse" class="headerlink" title="ErrorResponse"></a>ErrorResponse</h5><p>对象类型</p><table><thead><tr><th>字段</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td><code>error</code></td><td>Error</td><td>✔</td><td>错误对象</td></tr><tr><td>…</td><td>…</td><td></td><td>其他业务需要的拓展字段</td></tr></tbody></table><h5 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h5><p>对象类型</p><table><thead><tr><th>字段</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td><code>code</code></td><td>String</td><td>✔</td><td>服务器定义的固定错误代码，禁止随意定义，必须跟随版本发布。</td></tr><tr><td><code>message</code></td><td>String</td><td>✔</td><td><strong>必须</strong>是可读且易于理解，可作为面向用户的提示消息。</td></tr><tr><td><code>target</code></td><td>String</td><td></td><td>具体的目标。</td></tr><tr><td><code>details</code></td><td>Error[]</td><td></td><td>更细分的多个错误用错误组表示，Error对象数组类型。</td></tr><tr><td><code>innererror</code></td><td>InnerError</td><td></td><td>包含比当前对象更具体的错误信息的对象，InnerError对象类型。</td></tr></tbody></table><p>错误响应<strong>必须</strong>是单个JSON对象。该对象必须有一个名为“error”的键，其值<strong>必须</strong>是JSON对象。</p><p>error对象<strong>必须</strong>包含名称“code”和“message”的键值对，并且<strong>推荐</strong>包含譬如“target”、“details”和 “innererror” 的键值对。</p><p>“code”值是该服端务定义的错误代码，应该简单可读。与响应中指定的HTTP错误代码相比，此代码用作定位更具体的错误。</p><h5 id="InnerError"><a href="#InnerError" class="headerlink" title="InnerError"></a>InnerError</h5><p>对象类型</p><table><thead><tr><th>Property</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>code</code></td><td>String</td><td>✔</td><td>比包含错误的提供的更具体的错误代码，允许自行拓展，区别于Error对象中的code。</td></tr><tr><td><code>innererror</code></td><td>InnerError</td><td></td><td>包含比当前对象更具体的错误信息的对象，InnerError对象类型。<br />最重要的是支持嵌套。</td></tr></tbody></table><p>如果要指明更为具体的错误，<strong>应该</strong>在“innererror” 对象中定义。</p><p>“message” 键值对的值<strong>必须</strong>是错误提示消息，<strong>必须</strong>是可读且易于理解，可作为面向用户的提示消息。</p><p>“target” 键值对的值 是指向错误的具体的目标（例如，错误中属性的名称）。</p><p>“details”键值对的值 必须是JSON对象数组，数组中的对象通常表示请求期间发生的不同的、相关的错误。</p><h5 id="Error-code"><a href="#Error-code" class="headerlink" title="Error.code"></a>Error.code</h5><p>通用的错误code（待完善）</p><table><thead><tr><th align="left">错误代码</th><th>响应码</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">BadArgument</td><td>400</td><td align="left">提供的参数无效</td></tr><tr><td align="left">BadUserArgument</td><td>400</td><td align="left">提供的用户参数无效</td></tr><tr><td align="left">ErrorUnsupportedOrderBy</td><td>400</td><td align="left">资源不支持排序 或 不支持使用指定的字段排序</td></tr><tr><td align="left">ErrorUnsupportedPaging</td><td>400</td><td align="left">资源不支持分页请求</td></tr><tr><td align="left">InvalidOperation</td><td>400</td><td align="left">请求在当前上下文中无效<br />例子：<br />JOB提交中，不可修改。<br />模型与请求版本不兼容无法更新。</td></tr><tr><td align="left">Unauthorized</td><td>401</td><td align="left">请求未获授权，无法访问资源。</td></tr><tr><td align="left">InvalidApiKey</td><td>401</td><td align="left">无效apiKey。</td></tr><tr><td align="left">NotFound</td><td>404</td><td align="left">找不到资源。</td></tr><tr><td align="left">RequestTimeout</td><td>408</td><td align="left">无法在允许的时间内完成该操作。</td></tr><tr><td align="left">Conflict</td><td>409</td><td align="left">请求资源冲突，POST已存在资源 或 PATCH不存在资源。</td></tr><tr><td align="left">Overlimit</td><td>409</td><td align="left">请求资源超出系统限制。</td></tr><tr><td align="left">InternalError</td><td>500</td><td align="left">执行时遇到内部错误。<br />具体异常类型自定义，放入innererror</td></tr><tr><td align="left">ServiceUnavailable</td><td>503</td><td align="left">服务暂时不可用。</td></tr><tr><td align="left">GatewayTimeout</td><td>504</td><td align="left">无法在允许的时间内完成该操作。</td></tr></tbody></table><h5 id="错误响应样例"><a href="#错误响应样例" class="headerlink" title="错误响应样例"></a>错误响应样例</h5><p>例子「带有”innererror“」</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;BadArgument&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Previous passwords may not be reused&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;password&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;innererror&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;PasswordError&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;innererror&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;PasswordDoesNotMeetPolicy&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;minLength&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;6&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;maxLength&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;64&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;characterTypes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;lowerCase&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;upperCase&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;number&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;symbol&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;minDistinctCharacterTypes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;innererror&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;PasswordReuseNotAllowed&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在本例中，基本的错误码是“BadArgument”，而“innererror”中提供了更具体的错误代码。 “PasswordReuseNotAllowed”代码可能是在之后的迭代中新增的，之前只返回“PasswordDoesNotMeetPolicy”。 这种增量型的添加方式并不会破坏老的客户端的处理过程，而又可以给开发者一些更详细的信息。</p><p>例子「带有“details”」</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;BadArgument&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Multiple errors in ContactInfo data&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ContactInfo&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;details&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;NullValue&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;PhoneNumber&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Phone number must not be null&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;NullValue&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;LastName&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Last name must not be null&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MalformedValue&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Address&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Address is not valid&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在本例中，请求存在多处问题，每个错误都列在 “details” 字段中进行返回了。</p><h4 id="6-8-4-不支持的请求"><a href="#6-8-4-不支持的请求" class="headerlink" title="6.8.4 不支持的请求"></a>6.8.4 不支持的请求</h4><p>客户端可以请求当前不受支持的功能。 但服务端必须响应与本节一致的有效但不受支持的请求。</p><p>如果服务不支持一些功能，则必须在客户端请求API时返回错误响应。 </p><p>举例：</p><ul><li>用key在集合中检索，例如：<code>https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D</code></li><li>用条件过滤集合，例如：<code>https://ailpha.com/api/v1.0/agents?agentType=soc</code></li><li>通过_$page_和_$size_进行分页，例如：<code>https://ailpha.com/api/v1.0/agents?$page=5&amp;$size=10</code></li><li>按_$orderBy_排序，例如：<code>https://ailpha.com/api/v1.0/agents?$orderBy=createTime desc</code></li></ul><p>错误响应<strong>必须</strong>是来自4xx系列的HTTP状态码，表示无法满足请求。</p><p>除非更具体的错误状态适用于给定的请求，否则服务应该返回“400 Bad Request”。服务应该在响应消息中包含足够的详细信息，以便开发人员明确不支持请求的哪个部分。</p><p>例子：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">https://ailpha.com/api/v1.0/agents?$orderBy=name</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">400</span> Bad Request<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br>&#123;<br>  &quot;error&quot;: &#123;<br>    &quot;code&quot;: &quot;ErrorUnsupportedOrderBy&quot;,<br>    &quot;message&quot;: &quot;Ordering by name is not supported.&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="7-资源集合"><a href="#7-资源集合" class="headerlink" title="7. 资源集合"></a>7. 资源集合</h2><h3 id="7-1-资源标识"><a href="#7-1-资源标识" class="headerlink" title="7.1 资源标识"></a>7.1 资源标识</h3><p>资源集合中每个具体资源推荐使用持久标识符（主键），含义等同于6.3章节的定义。</p><h3 id="7-2-序列化"><a href="#7-2-序列化" class="headerlink" title="7.2 序列化"></a>7.2 序列化</h3><p>使用JSON作为序列化标准格式。</p><h3 id="7-3-集合的URL"><a href="#7-3-集合的URL" class="headerlink" title="7.3 集合的URL"></a>7.3 集合的URL</h3><p>URL中集合直接定义在根路径之后，或者在另一个具体资源之后。</p><p>集合元素本质是 <strong>资源（resource）</strong>，既然是资源，必须是名词，必须为复数形式。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://&#123;serviceRoot&#125;/&#123;collection&#125;/&#123;id&#125;<br></code></pre></td></tr></table></figure><ul><li>{serviceRoot} – 站点URL (site URL) + 服务的根路径的组合</li><li>{collection} – 集合的名称，复数</li><li>{id} – 唯一标识属性的值，唯一标识中原则上不允许使用”&#x2F;“，如果业务需要，一定要带”\“转义。</li></ul><p>例子：</p><p><strong>常规资源集合</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents<br></code></pre></td></tr></table></figure><p><strong>嵌套资源集合和属性</strong></p><p>集合项可以包含其他集合。例如，探针集合可能包含多个内存数据资源：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/memorys<br></code></pre></td></tr></table></figure><h3 id="7-3-通用子资源"><a href="#7-3-通用子资源" class="headerlink" title="7.3 通用子资源"></a>7.3 通用子资源</h3><p>资源集合根据业务场景及具体数据定义，但部分子资源对多数资源来说通用的，此处定义的通用子资源如涉及，每个资源定义必须遵守。</p><h4 id="7-4-1-files（文件子资源）"><a href="#7-4-1-files（文件子资源）" class="headerlink" title="7.4.1 files（文件子资源）"></a>7.4.1 files（文件子资源）</h4><p><em>files</em>表述的是一个资源集合或具体资源的文件子资源，常用于 导入、导出 场景。</p><p>使用可选过滤参数<em>type</em>来区分不同文件类型，服务端<strong>必须</strong>定义默认type，当未指定type时使用默认文件类型。服务端也<strong>应该</strong>在只支持一种默认type的时候，可以忽略客户端发来的type参数。</p><p>导出或下载使用GET，表述意义为获取资源的文件子资源。</p><p>导入或上传使用POST，表述意义为创建资源的文件子资源。</p><p>例子：</p><p><strong>获取资源集合的文件子资源（导出资源集合）</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents/files<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/octet-stream<br></code></pre></td></tr></table></figure><p><strong>获取特定资源的文件子资源（导出特定资源）</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/files?type=docx<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/octet-stream<br></code></pre></td></tr></table></figure><p><strong>创建资源集合的文件子资源（导入资源集合）</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/agents/files<br></code></pre></td></tr></table></figure><p><strong>创建特定资源的文件子资源（导入特定资源）</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D/files?type=docx<br></code></pre></td></tr></table></figure><h4 id="7-4-2-synchronizations（同步子资源）"><a href="#7-4-2-synchronizations（同步子资源）" class="headerlink" title="7.4.2 synchronizations（同步子资源）"></a>7.4.2 synchronizations（同步子资源）</h4><p><em>synchronizations</em>表述的是从一个资源集合同步全部或部分数据到另一个资源集合。资源集合可以是内部的也可以是外部的。</p><p>一般情况下，创建同步子资源是异步的，响应码应该返回202。</p><p>例子：</p> <figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/assets/synchronizations<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br>&#123;<br> &quot;from&quot;:&quot;https://soc.com/api/assets&quot;<br>&#125;<br><br><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">202</span> Accepted<br>&#123;<br>  &quot;task&quot;: &#123;<br>    &quot;href&quot;: &quot;/api/v1.0/assets/synchronizations/12345&quot;,<br>    &quot;id&quot;: &quot;12345&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="7-4-3-connectivities（连通性子资源）"><a href="#7-4-3-connectivities（连通性子资源）" class="headerlink" title="7.4.3 connectivities（连通性子资源）"></a>7.4.3 connectivities（连通性子资源）</h4><p><em>connectivities</em>表述的是一个资源集合或具体资源的连通性子资源，常用于检测资源（通常是设备类资源）的连通性。</p><p>连通性的检测包含几类：系统 -&gt; 资源，资源 -&gt; 资源，资源 -&gt; 外部实体。</p><p>例子：</p><p><strong>创建特定资源的连通性子资源（检测特定资源的连通性 - 常用）</strong></p><ul><li>测试系统对特定资产连通性。系统 -&gt; 资源。</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/assets/JHF8UE6H5W34D/connectivities<br></code></pre></td></tr></table></figure><ul><li>测试邮件服务资源对外部邮箱的连通性。资源 -&gt; 外部实体。</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/email-servers/JHF8UE6H5W34D/connectivities<br>&#123;<br>&quot;to&quot;:&quot;ailpha@ailpha.com&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>创建资源集合的连通性子资源（检测资源集合的连通性）</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/assets/connectivities<br></code></pre></td></tr></table></figure><h3 id="7-5-排序"><a href="#7-5-排序" class="headerlink" title="7.5 排序"></a>7.5 排序</h3><p><em>$orderBy</em> 参数允许客户端对集合查询的结果进行排序。</p><p><em>$orderBy</em> 参数的值包含可以是多个，用逗号分隔的。 可以指定排序方式（asc 升序、desc 降序），空格分隔，默认为升序。</p><p>空值（NULL）排序必须“小于”非空值。</p><p>如果不支持排序字段，需统一返回 400 Bad Request，响应不支持的参数类型。</p><p>例子：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents?$orderBy=name<br></code></pre></td></tr></table></figure><p>按名称正序排。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents?$orderBy=name desc<br></code></pre></td></tr></table></figure><p>按名称倒序排。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents?$orderBy=name desc,createTime<br></code></pre></td></tr></table></figure><p>按名称倒序排，再按创建时间排。</p><p>响应内容中，资源必须放在data内，同时<strong>必须</strong>返回*$orderBy*字段。</p><p>响应举例：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents?$orderBy=name desc,createTime<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br>&#123;<br>  ...,<br>  &quot;$orderBy&quot;: &quot;name desc,createTime&quot;,<br>  &quot;data&quot;: [...],<br>  &quot;total&quot;:100<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-6-分页"><a href="#7-6-分页" class="headerlink" title="7.6 分页"></a>7.6 分页</h3><p>客户端可以使用 <em>$page</em>和*$size*查询参数来指定页数和每页的数量。</p><p> <em>$page</em>和 <em>$size</em>参数的值是正整数（1-N）。</p><p>如果不支持分页字段，需统一返回 400 Bad Request，响应不支持的参数类型。</p><p>响应内容中，资源必须放在data内，同时<strong>必须</strong>返回*$page<em>、</em>$size*字段，<strong>必须</strong>返回total字段。</p><p>例子：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">https://ailpha.com/api/v1.0/agents?$page=5&amp;$size=10</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br>HTTP/1.1 200 OK<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br>&#123;<br>  ...,<br>  &quot;$page&quot;: 5,<br>  &quot;$size&quot;: 10,<br>  &quot;data&quot;: [...],<br>  &quot;total&quot;:100<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-7-批量操作"><a href="#7-7-批量操作" class="headerlink" title="7.7 批量操作"></a>7.7 批量操作</h3><p>对 资源的批量操作 准确的理解应该是 对资源集合的操作。以下几个例子来助于理解。</p><p>例子：</p><p>批量获取</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET https://ailpha.com/api/v1.0/agents<br></code></pre></td></tr></table></figure><p>批量新增</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">POST https://ailpha.com/api/v1.0/agents<br>&#123;<br>&quot;data&quot;:[]<br>&#125;<br></code></pre></td></tr></table></figure><p>批量更新（提供改变的资源属性）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">PATCH https://ailpha.com/api/v1.0/agents<br>&#123;<br>&quot;data&quot;:[]<br>&#125;<br></code></pre></td></tr></table></figure><p>批量替换（提供改变后的完整资源）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">PUT https://ailpha.com/api/v1.0/agents<br>&#123;<br>&quot;data&quot;:[]<br>&#125;<br></code></pre></td></tr></table></figure><p>批量删除</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http"># 根据IDs删除<br>DELETE https://ailpha.com/api/v1.0/agents/JHF8UE6H5W34D,GDSRUEJHFR87K,HJHAS45SDAOL<br># 根据条件删除<br>DELETE https://ailpha.com/api/v1.0/agents?agentType=&quot;ainta&quot;<br></code></pre></td></tr></table></figure><h2 id="8-JSON标准化"><a href="#8-JSON标准化" class="headerlink" title="8. JSON标准化"></a>8. JSON标准化</h2><h3 id="8-1-基本类型"><a href="#8-1-基本类型" class="headerlink" title="8.1 基本类型"></a>8.1 基本类型</h3><p>必须按照<a href="https://www.rfc-editor.org/rfc/rfc8259.txt">RFC8259</a>的规则将原始值序列化为JSON。JSON文本必须使用UTF-8 <a href="https://www.rfc-editor.org/info/rfc3629">RFC3629</a> 编码。</p><p>JSON值必须是字符串、数字、布尔值、对象、数组、null，取值<strong>禁止</strong>超过这个范畴。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong>String</strong></td><td>字符串的表示类似于C系列编程语言中使用的约定。<strong>字符串以双引号开头和结尾</strong>。所有Unicode字符都可以放在引号中，但必须转义的字符除外：引号、反斜线分隔符\和控制字符(U+0000到U+001 F)。</td><td>“hello”  “\u4f60\u597d”</td></tr><tr><td><strong>Number</strong></td><td>数字的表示与大多数编程语言中使用的表示类似。<strong>一个数字用十进制数字以基数10表示</strong>。它包含一个整数分量，其前缀可以是可选减号，后面可以是分数部分和&#x2F;或指数部分。不允许前导零。</td><td>1234  123.22</td></tr><tr><td><strong>Boolean</strong></td><td><strong>值为 true 或 false</strong>  。</td><td>true  false</td></tr><tr><td><strong>Object</strong></td><td><strong>对象结构表示为围绕零或多个名称&#x2F;值对(或多个成员)的一对花括号。名称是字符串。在每个名称之后加上一个冒号，将名称与值分隔开来。一个逗号将值与接下来的名称分隔开来。对象中的名称应该是唯一的</strong>。</td><td>{“a”:1,  “b”:true}</td></tr><tr><td><strong>Array</strong></td><td><strong>数组结构表示为围绕零个或多个值(或多个元素)的方括号。元素用逗号分隔</strong>。<br />不要求数组中的值具有相同的类型。</td><td>[1,2,3,4]</td></tr><tr><td><strong>Null</strong></td><td>空。</td><td>null</td></tr></tbody></table><p>注意：</p><p><strong>64位整数的重要说明：</strong> JavaScript将静默截断大于“Number.MAX_SAFE_INTEGER”（2 ^ 53-1）的整数或小于“Number.MIN_SAFE_INTEGER”（-2 ^ 53 + 1）的数字。 <strong>如果数值类型值过大，必须将该值作为字符串返回</strong>。</p><h3 id="8-2-空值"><a href="#8-2-空值" class="headerlink" title="8.2 空值"></a>8.2 空值</h3><p>为了保证接口的一致性，对空值做如下约束：</p><table><thead><tr><th><strong>数据类型</strong></th><th>空值约束</th></tr></thead><tbody><tr><td><strong>String</strong></td><td>“”</td></tr><tr><td><strong>Number</strong></td><td>0</td></tr><tr><td><strong>Boolean</strong></td><td>不允许存在空值</td></tr><tr><td><strong>Object</strong></td><td>{}</td></tr><tr><td><strong>Array</strong></td><td>[]</td></tr></tbody></table><h3 id="8-3-时间类型"><a href="#8-3-时间类型" class="headerlink" title="8.3 时间类型"></a>8.3 时间类型</h3><p>时间字段在各个接口中的定义都不要显得混乱且不统一，<strong>必须</strong>按本节一致的约定执行。</p><h4 id="8-3-1-日期-时间约定"><a href="#8-3-1-日期-时间约定" class="headerlink" title="8.3.1 日期\时间约定"></a>8.3.1 日期\时间约定</h4><p>通常情况下，对于日期\时间在不同的国家、不同的业务场景下会有相当多种类的不同表示。</p><p>为保证接口的一致性，对日期\时间做如下约束：</p><ul><li>接口层面<strong>必须</strong>使用Unix时间戳传递日期\时间，<strong>必须</strong>毫秒级。例如：1611469304000。</li><li>建议后端时间存储也采用Unix时间戳存储。</li><li>前端根据用户的时区、业务场景自行处理呈现。</li></ul><h4 id="8-3-2-持续时长"><a href="#8-3-2-持续时长" class="headerlink" title="8.3.2 持续时长"></a>8.3.2 持续时长</h4><p>按照[ISO 8601] <a href="http://en.wikipedia.org/wiki/ISO_8601#Durations">wikipedia-iso8601-durations</a>进行序列化。</p><p>持续时间“由格式’P [n] Y [n] M [n] DT [n] H [n] M [n] S&#96;表示。”</p><ul><li>P是在持续时间表示开始时放置的持续时间指示符（“period”）。</li><li>Y是年份指示符，它遵循年数值。</li><li>M是月份指示符，它遵循月数值。</li><li>W是周指示符，它遵循周数值。</li><li>D是遵循天数值的日期指示符。</li><li>T是在表示的时间分量之前的时间指示符。</li><li>H是小时指示符，它遵循小时数值。</li><li>M是遵循分钟数值的分钟指示符。</li><li>S是秒指示符，它遵循秒数的值。</li></ul><p>例如，</p><p>“P3Y6M4DT12H30M5S”表示“：”三年，六个月，四天，十二个小时，三十分钟加五秒” 的持续时间。</p><h2 id="9-版本号"><a href="#9-版本号" class="headerlink" title="9. 版本号"></a>9. 版本号</h2><p>**所有符合AiLPHA REST API准则的API都必须支持显式版本控制。 **</p><h3 id="9-1-版本定义"><a href="#9-1-版本定义" class="headerlink" title="9.1 版本定义"></a>9.1 版本定义</h3><p>使用major.minor格式进行版本定义。</p><p>版本定义在&#x2F;api路径之后。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://ailpha.com/api/v1.0/agents<br></code></pre></td></tr></table></figure><h3 id="9-2-版本更新说明"><a href="#9-2-版本更新说明" class="headerlink" title="9.2 版本更新说明"></a>9.2 版本更新说明</h3><p><strong>必须</strong>保留历史版本接口，除非你能确认该接口已无任何客户端在使用。</p><p>不更新版本的情况下，允许修改接口返回，但只允许新增属性，<strong>禁止</strong>删除和修改原属性（参见5.1章节「字段忽略原则」）。</p><h2 id="10-命名准则"><a href="#10-命名准则" class="headerlink" title="10. 命名准则"></a>10. 命名准则</h2><h3 id="10-1-建议"><a href="#10-1-建议" class="headerlink" title="10.1 建议"></a>10.1 建议</h3><p>命名准则有助于开发同学避免经常查阅资料思考如何去命名字段，可以花更多时间专注研发。使用通用和标准的约定可以帮助开发同学正确猜测到公共属性名称及其含义。 应该使用详细的单词命名，并且不应该使用非通用的缩写词，通用缩写词指的是API范畴内大家公认的(比如Url)。</p><h3 id="10-2-格式"><a href="#10-2-格式" class="headerlink" title="10.2 格式"></a>10.2 格式</h3><ul><li>缩写<strong>应该</strong>遵循大小写惯例，就像它们是普通单词一样（例如Url）。</li><li>所有标识符包括 名称空间（namespaces）、实体类型（entityTypes）、实体集合（entitySets）、属性（properties）、动作（actions）、函数（functions）和枚举值（enumeration）<strong>应该</strong>使用驼峰法（lowerCamelCase）。</li><li>HTTP头属性是例外，其<strong>应该</strong>使用Capitalized-Hyphenated-Terms的标准HTTP约定命名。</li></ul><h3 id="10-3-避免命名"><a href="#10-3-避免命名" class="headerlink" title="10.3 避免命名"></a>10.3 避免命名</h3><p>某些专有词汇的命名应该避免使用，在某些API使用场景里可能会导致冲突。</p><p>接口禁止使用以下单词命名：</p><ul><li>Context</li><li>Scope</li><li>Resource</li></ul><h3 id="10-4-复合名称"><a href="#10-4-复合名称" class="headerlink" title="10.4 复合名称"></a>10.4 复合名称</h3><ul><li><strong>应该</strong>避免使用诸如’a’，’the’，’of’之类的单词，除非需要有业务必要。<ul><li>例如 不应该使用诸如 a User，theAccount，countOfBooks 之类的名称，而应该首选user，account，bookCount。</li></ul></li><li><strong>应该</strong>向属性名添加类型，如果不这样做会导致数据的表示方式不明确。<ul><li>向属性名添加类型时，<strong>必须</strong>在末尾添加类型，例如createdDateTime。</li></ul></li></ul><h3 id="10-5-标识字段"><a href="#10-5-标识字段" class="headerlink" title="10.5 标识字段"></a>10.5 标识字段</h3><ul><li><strong>必须</strong>使用字符串类型定义标识字段。</li><li><strong>可以</strong>使用简单的“id”来表示资源主键值。</li><li><strong>应该</strong>使用后缀为“Id”的关系名称来表示另一个资源的外键，例如：subscriptionId。</li><li>此字段的内容应该是引用资源的规范ID。</li></ul><h3 id="10-6-时间字段"><a href="#10-6-时间字段" class="headerlink" title="10.6 时间字段"></a>10.6 时间字段</h3><ul><li>对于同时需要日期和时间的字段，<strong>必须</strong>使用后缀“DateTime”，例如：createDateTime。</li><li>对于只需要日期信息而无需时间的字段，<strong>必须</strong>使用后缀“date”，例如：birthDate。</li><li>对于只需要时间信息而无需日期的字段，<strong>必须</strong>使用后缀“time”，例如：startTime。</li></ul><h3 id="10-7-名称属性"><a href="#10-7-名称属性" class="headerlink" title="10.7 名称属性"></a>10.7 名称属性</h3><ul><li>对于通用命名字段，<strong>必须</strong>使用后缀”Name“，例如：agentName。</li></ul><h3 id="10-8-集合和计数"><a href="#10-8-集合和计数" class="headerlink" title="10.8 集合和计数"></a>10.8 集合和计数</h3><ul><li>集合命名必须为复数名词或复数名词短语。</li><li><strong>可以</strong>使用简化英语来表示不常用的复数名词。<ul><li>例如<strong>可以</strong>用schemas来替代schemata。</li></ul></li><li><strong>必须</strong>使用后缀为“Count”的名词或名词短语来命名资源的计数。</li></ul><h3 id="10-9-常用字段名称"><a href="#10-9-常用字段名称" class="headerlink" title="10.9 常用字段名称"></a>10.9 常用字段名称</h3><p>如果服务有属性的含义跟下面的命名匹配，则服务必须使用此表中的命名。此表将随着服务添加更常用的术语而更新。所有有相关建议的同学都<strong>可以</strong>一起维护这个表格。</p><table><thead><tr><th></th></tr></thead><tbody><tr><td>ailpha</td></tr><tr><td>createdDateTime</td></tr><tr><td>contentUrl</td></tr><tr><td>country</td></tr><tr><td>createdBy</td></tr><tr><td>displayName</td></tr><tr><td>errorUrl</td></tr><tr><td>event</td></tr><tr><td>givenName</td></tr><tr><td>jobTitle</td></tr><tr><td>id</td></tr><tr><td>lastModifiedDateTime</td></tr><tr><td>location</td></tr><tr><td>memberOf</td></tr><tr><td>message</td></tr><tr><td>name</td></tr><tr><td>owner</td></tr><tr><td>people</td></tr><tr><td>person</td></tr><tr><td>postalCode</td></tr><tr><td>photo</td></tr><tr><td>properties</td></tr><tr><td>signInName</td></tr><tr><td>tags</td></tr><tr><td>userPrincipalName</td></tr><tr><td>updatedDateTime</td></tr><tr><td>webUrl</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>接口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>restapi</tag>
      
      <tag>接口规范</tag>
      
      <tag>代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>202110-记录</title>
    <link href="/2021/10/08/202110-%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/10/08/202110-%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>说实话我也没想到今年的十一那么的不一样。</p><span id="more"></span><p>第一次的星空露营。假期的第一天跟朋友一起计划了一次不错的露营活动⛺️，到达地点支起帐篷，当夜晚来临，我们一行四人躺在帐篷里头向外仰望着满天繁星，不禁欢呼。<img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lm9bsxs5j20n40hcq39.jpg" alt="image-20220727173254552"></p><p>第一次的环山公里自驾。四明山确实是个风景不错的地方，无需特意找景点，把车随意在某个临停出或公共停车位上停下都能看到不一样的景致，当然还有个原因是标注景点我们也没找到地方。</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lm9k33doj20n40hctc0.jpg" alt="image-20220727173310816"></p><p>第一次的雪窦山爬行及弥勒大佛道场礼佛。四明山下一站是溪口，不过没预料到是，溪口风景区特别大…特别大，留给我们时间并不多，所以我们挑了其中的雪窦山景区。其中蒋氏故居什么倒是没太多感觉，就是觉得国庆去参观常公故居总感觉怪怪的。给我最大印象的是弥勒道场的弥勒大佛，真的非常地……大。上香拜佛，祈福许愿。</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lm9qpvi6j20n40hcdib.jpg" alt="image-20220727173321444"></p><p>第一次的嵊州打卡之旅。嵊州是一个中转点，没有找景点，只是为美食而来。不得不说豆腐小笼简直了，中毒了，下次去可能会为了这口直接去嵊州。</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lm9vmpiwj20n40hc77a.jpg" alt="image-20220727173329977"></p><p>以及第一次……的高速车祸。本来计划中的下一站是温岭的石塘镇，第三天下午从嵊州出发上高速，在台金高速临海段的地方遭遇车祸。事情经过是这样，我当时在高速快车道以120自适应巡航在行驶，突然有辆比亚迪suv变道到我前面，不到十秒后，我只看到他紧急刹车，我随即也踩死刹车，但根本刹不住，直接就撞上了。后来才明白这是一个三车追尾的事故，比亚迪suv前面还有一辆大众轿车，大众车先发现前面高速堵车，他刹住了。但变道过来的比亚迪没刹住把大众撞到前面去了车撞停了，我随即追尾了suv。现在细想，还是很后怕，当时快撞上的时候还是很清醒，又快速撇了下右后视镜，看够不够能右变道避过去，但看到一辆半挂车当时就根本不敢打方向，副驾我老婆还在睡着。首先最最重要的是，人都没事，除了惊吓。车损方面，大众最轻，但屁股和后车牌也都凹了进去，suv则前后都有点凹进去，但最严重的是我的车，因为有点撞到suv尾部侧面，整个右前方掀起来一大部分。索性索性的是，虽然车看起来撞得很严重，但车内包括我和我老婆都感觉没有很大冲击力。在接下来的事情我都是懵了，包括后面拖车拖到临近高速口，到后面交警事故认责，全程都懵。以至于接下来的一两天里，都感觉有ptsd的症状。</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lma0r3khj20n40hcadl.jpg" alt="image-20220727173338351"></p><p>车祸发生后的详情。当我发生车祸后，第一反应是快速检查人有没事情，然后后备箱打开三脚架放车近百米后面，再就是被救援人员将车推到应急车道，接着按救援人员提示拨打12122报警，随即拖车来了我们跟着车一起上了拖车。之后我联系了保险公司保险人员，我简单说了情况，他让我不要着急他那边联系杭州的4s店派拖车到临近高速口。之后事故认定，3个小时候拖车和4s店的人来了，拖车拖车，4s店的车拖我们和我们的一堆旅行准备的东西。这本来是一件悲伤得不能再悲伤的事情，可里面最喜剧的部分是我没想到的，我在联系完保险人员的时候，手机开始不停地响，有 杭州那边其他区的4s店、临海的4s店、台州的4s店、温岭的4s店、好几个当地修车厂接连联系我，还主动说给返点，我当时都怒了，合着我出事故他们争抢生意，后面想想真是欲哭无泪。</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h4lma5ysbnj20n40hc76r.jpg" alt="image-20220727173346042"></p><p>总之总之，在没有超速没有疲劳驾驶的情况下都出了如此惨痛的教训，我以后一定会更加谨慎，大家也引以为戒，高速行车千万要小心再小心，生命健康比什么都重要。</p><p>接下来的几天，还有过半的假期时间没了车，我反而有不一样的体会。参加了大学室友的婚礼，坐高铁的。去了啦喜街打卡，坐地铁的。逛了周边公园感受生活气息，用双脚的。我感觉节奏慢了下了，我也感受到一些不一样的人和事，和好友畅饮和陌生人擦肩。人生总是这样，得失无常，凡是路过，都是风景。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kafka的相关操作脚本</title>
    <link href="/2019/12/21/kafka%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E8%84%9A%E6%9C%AC/"/>
    <url>/2019/12/21/kafka%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>总结最近用到的kafka相关命令和脚本。</p><span id="more"></span><p>1、创建Topic<br>.&#x2F;kafka-topics.sh –zookeeper cc13-141:2182 –topic mytopic –replication-factor 1 –partitions 1 –create</p><p>2、Topic列表<br>.&#x2F;kafka-topics.sh –zookeeper cc13-138:2181 –list</p><p>3、创建生产者<br>.&#x2F;kafka-console-producer.sh –broker-list cc13-141:9092 –topic mytopic</p><p>4、创建消费者<br>.&#x2F;kafka-console-consumer.sh –zookeeper c13-138:2181 –topic mytopic<br>–from-beginning 每次都是从开始位置消费，在生产环境下不建议这样使用。</p><p>5、查看指定topic<br>.&#x2F;kafka-topics.sh –describe –zookeeper c13-138:2181 –topic mytopic</p><p>6、删除topic<br>.&#x2F;kafka-topics.sh –delete –zookeeper c13-138:2181–topic mytopic</p><p>7、显示出Consumer的Group、Topic、分区ID、分区对应已经消费的Offset、logSize大小，Lag以及Owner等信息。<br>使用脚本：kafka-consumer-offset-checker.sh<br>.&#x2F;kafka-consumer-offset-checker.sh –zookeeper c13-138:2181,c13-139:2181,c13-141:2181 –topic mytopic –group xb_id –broker-info</p><p>8、有时候我们需要验证日志索引是否正确，或者仅仅想从log文件中直接打印消息。<br>使用脚本：kafka-run-class.sh<br>.&#x2F;kafka-run-class.sh kafka.tools.DumpLogSegments<br>.&#x2F;kafka-run-class.sh kafka.tools.DumpLogSegments &#x2F;nodedata&#x2F;kafka&#x2F;kafka-logs&#x2F;xb_topic-0&#x2F;00000000000000000033.log<br>.&#x2F;kafka-run-class.sh kafka.tools.DumpLogSegments –files &#x2F;nodedata&#x2F;kafka&#x2F;kafka-logs&#x2F;xb_topic-0&#x2F;00000000000000000033.log –print-data-log</p><p>9、导出Zookeeper中Group相关的偏移量。有时候我们需要导出某个Consumer group各个分区的偏移量。<br>使用脚本：kafka-run-class.sh<br>.&#x2F;kafka-run-class.sh kafka.tools.ExportZkOffsets<br>.&#x2F;kafka-run-class.sh kafka.tools.ExportZkOffsets –group xb_id –zkconnect c13-138:2181,c13-139:2181,c13-141:2181 –output-file ~&#x2F;offset<br>vim ~&#x2F;offset</p><p>10、这个工具主要作用是从一个Kafka集群里面读取指定Topic的消息，并将这些消息发送到其他集群的指定topic中。<br>使用脚本：.&#x2F;kafka-replay-log-producer.sh</p><p>11、kafka-simple-consumer-shell.sh工具主要是使用Simple Consumer API从指定Topic的分区读取数据并打印在终端。<br>使用脚本：.&#x2F;kafka-simple-consumer-shell.sh –broker-list c13-141:9092 –topic mytopic –partition 0</p><p>12、kafka.tools.UpdateOffsetsInZK工具可以更新Zookeeper中指定Topic所有分区的偏移量，可以指定成 earliest或者latest<br>使用工具：.&#x2F;kafka-run-class.sh kafka.tools.UpdateOffsetsInZK</p><p>最后再注意kafka的启动和停止。<br>启动kafka： .&#x2F;kafka-server-start.sh &#x2F;kafka&#x2F;config&#x2F;server.properties &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;<br>停止kafka： 直接kill掉进程就行。</p>]]></content>
    
    
    <categories>
      
      <category>kafka</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kafka</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透学习：SQL盲注</title>
    <link href="/2019/03/18/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%EF%BC%9ASQL%E7%9B%B2%E6%B3%A8/"/>
    <url>/2019/03/18/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%EF%BC%9ASQL%E7%9B%B2%E6%B3%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="SQL-盲注"><a href="#SQL-盲注" class="headerlink" title="SQL 盲注"></a>SQL 盲注</h2><p>可能会查看、修改或删除数据库条目和表</p><h3 id="可能原因"><a href="#可能原因" class="headerlink" title="可能原因"></a>可能原因</h3><p>未对用户输入正确执行危险字符清理</p><span id="more"></span><h3 id="技术描述"><a href="#技术描述" class="headerlink" title="技术描述"></a>技术描述</h3><p>该软件使用受外部影响的输入来构造 SQL 命令的全部或一部分，但是它未能对可能在 SQL 命令发送到数据库时修改该命令的元素进行无害化处理。如果在用户可控制的输入中没有对 SQL 语法充分地除去或加上引号，那么生成的 SQL 查询可能会导致将这些输入解释为 SQL 而不是普通用户数据。这可用于修改查询逻辑以绕过安全性检查，或者插入其他用于修改后端数据库的语句，可能包括执行系统命令。<br>例如，假设有一个带有登录表单的 HTML 页面，该页面最终使用用户输入对数据库运行以下 SQL 查询：   <code>SELECT * FROM accounts WHERE username=&#39;$user&#39; AND password=&#39;$pass&#39;</code></p><p>这两个变量（$user 和 $pass）包含了用户在登录表单中输入的用户凭证。如果用户输入“jsmith”作为用户名，并输入“Demo1234”作为密码，那么 SQL 查询将如下所示：<br>  <code>SELECT * FROM accounts WHERE username=&#39;jsmith&#39; AND password=&#39;Demo1234&#39;</code></p><p>但如果用户输入“’”（单引号）作为用户名，输入“’”（单引号）作为密码，那么 SQL 查询将如下所示：<br>  <code>SELECT * FROM accounts WHERE username=&#39;&#39;&#39; AND password=&#39;&#39;&#39;</code></p><p>当然，这是格式错误的 SQL 查询，并将调用错误消息，而 HTTP 响应中可能会返回此错误消息。通过此类错误，攻击者会知道 SQL 注入已成功，这样攻击者就会尝试进一步的攻击媒介。SQL 盲注类似于 SQL 注入。不同之处在于，要利用该攻击，攻击者无需寻找响应中的 SQL 错误。因此，AppScan 用于识别该攻击的方法也不同。AppScan 会查找易受 SQL 注入（通过多个请求来操纵应用程序的逻辑，而不是尝试调用 SQL 错误）影响的脚本。</p><p>该技巧需要发送特定请求，其中易受攻击的参数（嵌入在 SQL 查询中的参数）进行了相应修改，以便响应中会指示是否在 SQL 查询上下文中使用数据。该修改涉及将 AND 布尔表达式与原始字符串一起使用，使其一时求值为 True，一时求值为 False。在一种情况下，净结果应该与原始结果相同（登录成功），而在另一种情况下，结果应该完全不同（登录失败）。在某些少见的情况下，求值为 True 的 OR 表达式也可能很有用。如果原始数据是数字，可以使用更简单的花招。假设原始数据为 123。此数据可以在一个请求中替换为 0+123，而在另一个请求中替换为 456+123。第一个请求的结果应该与原始结果相同，第二个请求的结果应该不同（因为得出的数字是 579）。在某些情况中，我们仍需要上面所说明的攻击版本（使用 AND 和 OR），但并不转义字符串上下文。</p><p>SQL 盲注背后的概念是，即使不直接从数据库接收数据（以错误消息或泄漏的信息的形式），也可能从数据库中抽取数据（每次一个比特），或以恶意方式修改查询。其原理在于，应用程序的行为（返回与原始响应相同或不同的响应）可以提供有关所求值的（已修改）查询的单比特信息，也就是说，攻击者有可能设计出一个 SQL 布尔表达式，其求值（单比特）通过应用程序行为（与原始行为相同&#x2F;不同）来造成破坏。</p><h3 id="引用和相关链接"><a href="#引用和相关链接" class="headerlink" title="引用和相关链接"></a>引用和相关链接</h3><blockquote><p>“Web Application Disassembly with ODBC Error Messages”（作者：David Litchfield）<br> “Using Binary Search with SQL Injection”（作者：Sverre H. Huseby）<br> Blind SQL Injection Training Module </p></blockquote>]]></content>
    
    
    <categories>
      
      <category>网络安全 渗透</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>jekins出现无法打包</title>
    <link href="/2018/06/13/jekins%E5%87%BA%E7%8E%B0%E6%97%A0%E6%B3%95%E6%89%93%E5%8C%85/"/>
    <url>/2018/06/13/jekins%E5%87%BA%E7%8E%B0%E6%97%A0%E6%B3%95%E6%89%93%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<p>jekins出现无法打包<br>出现错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stderr: error: Your local changes to the following files would be overwritten by checkout:</span><br><span class="line">src/routes.js</span><br></pre></td></tr></table></figure><span id="more"></span><p>进入对应git目录丢弃文件即可：<br><code>git checkout . &amp;&amp; git clean -xdf</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Storm单机安装</title>
    <link href="/2017/11/11/Storm%E5%8D%95%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <url>/2017/11/11/Storm%E5%8D%95%E6%9C%BA%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="一、下载安装包"><a href="#一、下载安装包" class="headerlink" title="一、下载安装包"></a>一、下载安装包</h2><p><a href="http://www.apache.org/dyn/closer.lua/storm/apache-storm-1.1.1/apache-storm-1.1.1.tar.gz">http://www.apache.org/dyn/closer.lua/storm/apache-storm-1.1.1/apache-storm-1.1.1.tar.gz</a></p><span id="more"></span><p>##二、修改配置文件<br>vim  storm.yaml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">##zookeeper</span><br><span class="line">storm.zookeeper.servers:</span><br><span class="line">     - &quot;localhost&quot;</span><br><span class="line">##nimbus所在节点</span><br><span class="line">nimbus.seeds: [&quot;localhost&quot;]</span><br><span class="line">##可用端口号配置，每个对应一个worker，可配置多个</span><br><span class="line">supervisor.slots.ports:</span><br><span class="line">    - 6700</span><br></pre></td></tr></table></figure><p>##三、启动组件<br>###1.启动zookeeper<br>Storm中使用Zookeeper主要用于Storm集群各节点的分布式协调工作，所以最先启动zookeeper，当然zookeeper也是需要下载，自行下载启动&gt;&gt;<a href="http://zookeeper.apache.org/">http://zookeeper.apache.org/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##先启动zookeeper</span><br><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><p>###2.启动nimbus<br>主控节点运行Nimbus守护进程，类似于Hadoop中的jobtracker，负责在集群中分发代码，对节点分配任务，并监视主机故障。所以再启动nimbus。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##启动nimbus</span><br><span class="line">./bin/storm nimbus &amp;</span><br></pre></td></tr></table></figure><p>###3.启动Storm UI</p><p>storm UI是一个监控storm运行状态的网页，bin&#x2F;storm ui，访问地址: http:&#x2F;&#x2F;{nimbus.host}:ui.port&#x2F;。默认端口8080。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/storm ui &amp;</span><br></pre></td></tr></table></figure><p>###4.Supervisor<br>Supervisor负责监听工作节点上已经分配的主机作业，启动和停止Nimbus已经分配的工作进程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##启动supervisor</span><br><span class="line">./bin/storm supervisor &amp;</span><br></pre></td></tr></table></figure><p>##四、测试使用<br>###1.提交storm任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/storm jar /Users/delin/stromdemo/target/strom-demo-1.0-SNAPSHOT.jar com.ailpha.SimpleTopology wordcount</span><br></pre></td></tr></table></figure><p>###2.杀死任务<br>格式：storm kill name -w seconds</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storm kill wordcount -w 10</span><br></pre></td></tr></table></figure><p>###3.停用任务命令<br>格式：storm deactivte name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storm deactivte wordcount</span><br></pre></td></tr></table></figure><p>###4.启用任务命令<br>格式：storm activate name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storm activate wordcount</span><br></pre></td></tr></table></figure><p>###5.平衡任务命令<br>格式：storm rebalance name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storm rebalance wordcount</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>storm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>storm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sqoop使用</title>
    <link href="/2017/10/28/sqoop%E4%BD%BF%E7%94%A8/"/>
    <url>/2017/10/28/sqoop%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<ol><li>list-databases  列出数据库<br>sqoop list-databases –connect jdbc:oracle:thin:@172.21.202.4:1521:TJZHCSDEV –username tjzhcs –password tjzhcs</li></ol><span id="more"></span><ol start="2"><li><p>list-tables  列出某数据库下的表<br>sqoop list-tables–connect jdbc:oracle:thin:@172.21.202.4:1521:TJZHCSDEV –username tjzhcs –password tjzhcs</p></li><li><p>eval 可以快速地使用SQL语句对关系数据库进行操作，这可以使得在使用import这种工具进行数据导入的时候，可以预先了解相关的SQL语句是否正确，并能将结果显示在控制台<br>sqoop eval –connect jdbc:oracle:thin:@172.21.202.4:1521:TJZHCSDEV –username tjzhcs –password tjzhcs -e “select * from b_code”</p></li><li><p>create-hive-table 生成与关系数据库表的表结构对应的HIVE表<br>sqoop create-hive-table –connect jdbc:oracle:thin:@172.21.202.4:1521:TJZHCSDEV –username tjzhcs –password tjzhcs -table B_CODE -hive-table h_b_code(注：oracle导入的时候表名需要使用大写！！！)</p></li><li><p>导入oracle表到hive中<br>sqoop import –connect jdbc:oracle:thin:@172.21.202.4:1521:TJZHCSDEV –username tjzhcs –password tjzhcs –table B_CODE –hive-table h_b_code  –hive-import<br>Hive arguments: &#96;&#96;&#96; Argument    Description</p></li></ol><p>–hive-home <dir>    Override $HIVE_HOME<br>–hive-import    Import tables into Hive (Uses Hive’s default delimiters if none are set.)<br>–hive-overwrite    Overwrite existing data in the Hive table.<br>–create-hive-table    If set, then the job will fail if the target hive<br>table exits. By default this property is false.<br>–hive-table <table-name>    Sets the table name to use when importing to Hive.<br>–hive-drop-import-delims    Drops \n, \r, and \01 from string fields when importing to Hive.<br>–hive-delims-replacement    Replace \n, \r, and \01 from string fields with user defined string when importing to Hive.<br>–hive-partition-key    Name of a hive field to partition are sharded on<br>–hive-partition-value <v>    String-value that serves as partition key for this imported into hive in this job.<br>–map-column-hive <map>    Override default mapping from SQL type to Hive type for configured columns.&#96;&#96;&#96;</p><ol start="6"><li>sqoop list-databases –connect jdbc:mysql:&#x2F;&#x2F;172.21.80.123:3306&#x2F; –username root –password 1234<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sqoop import --connect jdbc:mysql://172.21.80.123:3306/hadoop --username root --password 1234 --table lsemp --hbase-table lsemp --hbase-create-table --hbase-row-key empno --column-family info</span><br><span class="line">HBase arguments:```</span><br><span class="line"></span><br><span class="line">ArgumentDescription</span><br><span class="line">--column-family &lt;family&gt;Sets the target column family for the import</span><br><span class="line">--hbase-create-tableIf specified, create missing HBase tables</span><br><span class="line">--hbase-row-key &lt;col&gt;Specifies which input column to use as the row key</span><br><span class="line">In case, if input table contains composite</span><br><span class="line">key, then &lt;col&gt; must be in the form of a</span><br><span class="line">comma-separated list of composite key</span><br><span class="line">attributes</span><br><span class="line">--hbase-table &lt;table-name&gt;Specifies an HBase table to use as the target instead of HDFS</span><br><span class="line">--hbase-bulkloadEnables bulk loading</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql相关</span><br><span class="line">1.执行sql</span><br><span class="line">sqoop eval --connect jdbc:mysql://localhost:3306/hive --username root --password 123456 -e &#x27;show tables&#x27;</span><br><span class="line">2.列出库</span><br><span class="line">sqoop list-databases --connect jdbc:mysql://localhost:3306/ --username root --password 123456</span><br><span class="line">3.导入mysql数据到hive</span><br><span class="line">sqoop import --connect jdbc:mysql://localhost:3306/test --username root --password 123456 --table student --hive-table student  --hive-import --hive-database test</span><br><span class="line">4.导出hive数据到mysql</span><br><span class="line">sqoop export --connect jdbc:mysql://localhost:3306/test --username root --password 123456  --table word_count -export-dir  /user/hive/warehouse/test.db/word_count --input-fields-terminated-by &#x27;\001&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>sqoop</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hive2.1.1安装部署</title>
    <link href="/2017/10/25/hive2.1.1%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <url>/2017/10/25/hive2.1.1%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="二、Hive-运行模式" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:-25px 0px 0.83em; font-size:2.15em; padding:40px 0px 0px"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">转：</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">http://blog.csdn.net/reesun/article/details/8556078<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">http://blog.csdn.net/zhongguozhichuang/article/details/52702476</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">http://blog.csdn.net/huoyuyan/article/details/50769104</p></h2><h2 id="二、Hive-运行模式" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:-25px 0px 0.83em; font-size:2.15em; padding:40px 0px 0px">一、Hive 运行模式</h2><span id="more"></span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">与&nbsp;<a target="_blank" target="_blank" href="http://lib.csdn.net/base/hadoop" class="replace_word" title="Hadoop知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">Hadoop</a>&nbsp;类&#20284;，<a target="_blank" target="_blank" href="http://lib.csdn.net/base/hive" class="replace_word" title="Hive知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">Hive</a>&nbsp;也有 3 种运行模式：</p><blockquote style="padding:10px 20px; margin:0px 0px 20px; border-left:5px solid rgb(238,238,238); color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">1. 内嵌模式</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">将元数据保存在本地内嵌的 Derby&nbsp;<a target="_blank" target="_blank" href="http://lib.csdn.net/base/mysql" class="replace_word" title="MySQL知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">数据库</a>中，这是使用 Hive 最简单的方式。但是这种方式缺点也比较明显，因为一个内嵌的 Derby 数据库每次只能访问一个数据文件，这也就意味着它不支持多会话连接。</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">2. 本地模式</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">这种模式是将元数据保存在本地独立的数据库中（一般是&nbsp;<a target="_blank" target="_blank" href="http://lib.csdn.net/base/mysql" class="replace_word" title="MySQL知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">MySQL</a>），这用就可以支持多会话和多用户连接了。</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">3. 远程模式</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">此模式应用于 Hive 客户端较多的情况。把 MySQL 数据库独立出来，将元数据保存在远端独立的 MySQL 服务中，避免了在每个客户端都安装 MySQL 服务从而造成冗余浪费的情况。</p></blockquote><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">二、下载安装 Hive</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">http://hive.apache.org/downloads.html<br style=""></p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">tar -xzvf apache-hive-2.1.1-bin.tar.gz &nbsp; &nbsp;##解压<br style=""></p><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><a target="_blank" target="_blank" name="t2" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a><span style="margin:0px; padding:0px; font-size:18px">三、配置系统环境变量</span></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">修改 /etc/profile 文件 &nbsp;vi&nbsp;/etc/profile&nbsp;来修改（root用户操作）：<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:857px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">设置&nbsp;Hive环境变量&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">#&nbsp;Hive&nbsp;environment&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">export&nbsp;<span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">HIVE_HOME</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=/home/hadoop/cloud/apache-hive-2.1.1-bin&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">export&nbsp;<span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">PATH</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=$HIVE_HOME/bin:$HIVE_HOME/conf:$PATH&nbsp;&nbsp;</span></span></li></ol></div></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:978px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">使环境变量生效:&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">source&nbsp;/etc/profile&nbsp;&nbsp;</span></li></ol></div><br style=""><br style=""></h6><h2 id="五、内嵌模式" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:-25px 0px 0.83em; font-size:2.15em; padding:40px 0px 0px"><a target="_blank" target="_blank" name="t1" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a>四、内嵌模式</h2><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">（1）修改 Hive 配置文件</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">$HIVE_HOME/conf 对应的是 Hive 的配置文件路径，类&#20284;于之前学习的<a target="_blank" target="_blank" href="http://lib.csdn.net/base/hbase" class="replace_word" title="Hbase知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">Hbase</a>, 该路径下的 hive-site.xml 是 Hive 工程的配置文件。默认情况下，该文件并不存在，我们需要拷贝它的模版来实现：</p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:1281px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">cp&nbsp;hive-default.xml.template&nbsp;hive-site.xml&nbsp;&nbsp;</span></span></li></ol></div><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">hive-site.xml 的主要配置有：</span><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px"><a target="_blank" target="_blank" href="https://dn-anything-about-doc.qbox.me/userid46108labid766time1427423801808" title="图片描述信息" class="fancybox" rel="gallery0" style="background:transparent; color:rgb(202,12,22); margin:0px; padding:0px; outline:none"><img src="https://dn-anything-about-doc.qbox.me/userid46108labid766time1427423801808" alt="图片描述信息" style="border:0px; vertical-align:middle; outline:none; max-width:97.5%; margin:15px auto; display:block; height:auto"></a></p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px"><a target="_blank" target="_blank" href="https://dn-anything-about-doc.qbox.me/userid46108labid766time1427423813828" title="图片描述信息" class="fancybox" rel="gallery0" style="background:transparent; color:rgb(202,12,22); margin:0px; padding:0px; outline:none"><img src="https://dn-anything-about-doc.qbox.me/userid46108labid766time1427423813828" alt="图片描述信息" style="border:0px; vertical-align:middle; outline:none; max-width:97.5%; margin:15px auto; display:block; height:auto"></a></p><blockquote style="padding:10px 20px; margin:0px 0px 20px; border-left:5px solid rgb(238,238,238)"><ul style="margin:0px; padding:0px; list-style-position:initial"><li style="margin:0px 0px 0px 40px; padding:0px; list-style:disc"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">hive.metastore.warehouse.dir<br style="">该参数指定了 Hive 的数据存储目录，默认位置在 HDFS 上面的 /user/hive/warehouse 路径下。</p></li><li style="margin:0px 0px 0px 40px; padding:0px; list-style:disc"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-size:17.5px; line-height:1.25">hive.exec.scratchdir<br style="">该参数指定了 Hive 的数据临时文件目录，默认位置为 HDFS 上面的 /tmp/hive 路径下。</p></li></ul></blockquote>同时我们还要修改 Hive 目录下 /conf/hive-env.sh 文件（请根据自己的实际路径修改），该文件默认也不存在，同样是拷贝它的模版来修改：<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">cp hive-env.sh.template &nbsp;hive-env.sh<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:1922px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">#&nbsp;Set&nbsp;HADOOP_HOME&nbsp;to&nbsp;point&nbsp;to&nbsp;a&nbsp;specific&nbsp;hadoop&nbsp;install&nbsp;directory&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">HADOOP_HOME</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=/home/hadoop/cloud/hadoop-2.7.3&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">#&nbsp;Hive&nbsp;Configuration&nbsp;Directory&nbsp;can&nbsp;be&nbsp;controlled&nbsp;by:&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">export&nbsp;<span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">HIVE_CONF_DIR</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=/home/hadoop/cloud/apache-hive-2.1.1-bin/conf&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">#&nbsp;Folder&nbsp;containing&nbsp;extra&nbsp;ibraries&nbsp;required&nbsp;for&nbsp;hive&nbsp;compilation/execution&nbsp;can&nbsp;be&nbsp;controlled&nbsp;by:&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">export&nbsp;<span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">HIVE_AUX_JARS_PATH</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=/home/hadoop/cloud/apache-hive-2.1.1-bin/lib&nbsp;&nbsp;</span></span></li></ol></div><br style="">（2）创建必要目录<br style=""><br style=""><br style="">前面我们看到 hive-site.xml 文件中有两个重要的路径，切换到 hadoop 用户下查看 HDFS 是否有这些路径：<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:2203px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">hadoop&nbsp;fs&nbsp;-ls&nbsp;/&nbsp;&nbsp;</span></span></li></ol></div></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">没有发现上面提到的路径，因此我们需要自己新建这些目录，并且给它们赋予用户写（W）权限。<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:2302px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">$HADOOP_HOME/bin/hadoop&nbsp;fs&nbsp;-mkdir&nbsp;-p&nbsp;/user/hive/warehouse&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">$HADOOP_HOME/bin/hadoop&nbsp;fs&nbsp;-mkdir&nbsp;-p&nbsp;/tmp/hive/&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">hadoop&nbsp;fs&nbsp;-chmod&nbsp;777&nbsp;/user/hive/warehouse&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">hadoop&nbsp;fs&nbsp;-chmod&nbsp;777&nbsp;/tmp/hive&nbsp;&nbsp;</span></li></ol></div><br style="">检查是否新建成功 hadoop fs -ls / 以及 hadoop fs -ls /user/hive/ ：<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px">（3）修改 io.tmpdir/user.name</p><p style="margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px">同时，要修改 hive-site.xml 中所有包含&nbsp;<span style="margin:0px; padding:0px; font-family:Menlo,&quot;Bitstream Vera Sans Mono&quot;,&quot;DejaVu Sans Mono&quot;,Monaco,Consolas,monospace; color:rgb(199,37,78)"><span style="margin:0px 2px; padding:0px 5px; font-size:15.12px; background:rgb(238,238,238); word-break:break-all">${system:j<a target="_blank" target="_blank" href="http://lib.csdn.net/base/javase" class="replace_word" title="Java SE知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">ava</a>.io.tmpdir}</span></span>&nbsp;字段的 value 即路径（vim下 / 表示搜索，后面跟你的关键词，比如搜索 hello，则为&nbsp;<span style="margin:0px; padding:0px; font-family:Menlo,&quot;Bitstream Vera Sans Mono&quot;,&quot;DejaVu Sans Mono&quot;,Monaco,Consolas,monospace; color:rgb(199,37,78)"><span style="margin:0px 2px; padding:0px 5px; font-size:15.12px; background:rgb(238,238,238); word-break:break-all">/hello</span></span>&nbsp;, 再回车即可），你可以自己新建一个目录来替换它，例如&nbsp;<span style="margin:0px; padding:0px; font-family:Menlo,&quot;Bitstream Vera Sans Mono&quot;,&quot;DejaVu Sans Mono&quot;,Monaco,Consolas,monospace; color:rgb(199,37,78)"><span style="margin:0px 2px; padding:0px 5px; font-size:15.12px; background:rgb(238,238,238); word-break:break-all">/home/hadoop/cloud/apache-hive-2.1.1-bin/iotmp</span></span></p></h6><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:2575px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">mkdir&nbsp;/home/hadoop/cloud/apache-hive-2.1.1-bin/iotmp&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">chmod&nbsp;777&nbsp;/home/hadoop/cloud/apache-hive-2.1.1-bin/iotmp&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">把hive-site.xml&nbsp;中所有包含&nbsp;${system:Java.io.tmpdir}替换成/home/hadoop/cloud/apache-hive-2.1.1-bin/iotmp&nbsp;&nbsp;</span></li></ol></div><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">全局替换命令 先按Esc键 &nbsp;再同时按shift&#43;:把以下替换命令粘贴按回车即可全局替换</h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:2710px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">%s#${system:java.io.tmpdir}#/home/hadoop/cloud/apache-hive-2.1.1-bin/iotmp#g&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit"></span></span><p class="p1">%s#${system:user.name}#delin#g</p></li></ol></div><br style="">（4）运行 Hive<br style=""></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:2823px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">./bin/hive&nbsp;&nbsp;</span></span></li></ol></div></h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">报错</h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><img src="https://img-blog.csdn.net/20170121180043170?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></h6><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决办法：./bin/schematool -initSchema -dbType derby</span><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px">报错</h6><h6 style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0px 0px 10px; font-size:0.8em; padding:0px"><img src="https://img-blog.csdn.net/20170121175046059?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></h6><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决方法：删除/home/hadoop/cloud/apache-hive-2.1.1-bin目录下 rm -rf metastore_db/ 在初始化：</span><span style="margin:0px; padding:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><strong>./bin/schematool -initSchema -dbType derby</strong></span><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">重新运行</span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">./bin/hive<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">报错</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170121180226141?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">/tem/hive 没写的权限</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">Hive本身自带一个<a target="_blank" target="_blank" href="http://lib.csdn.net/base/mysql" class="replace_word" title="MySQL知识库" style="background:transparent; color:rgb(223,52,52); margin:0px; padding:0px; font-weight:bold; outline:none">数据库</a>，但是有弊端，hive本身数据库，每次只允许一个用户登录<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">mysql安装：http://blog.csdn.net/u014695188/article/details/51532410</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><h2 id="设置mysql关联hive" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0.8em 0px; font-size:2.15em; padding:0px"><a target="_blank" target="_blank" name="t2" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a>设置mysql关联hive</h2><h3 id="修改配置文件" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0.8em 0px; font-size:1.7em; padding:0px"><a target="_blank" target="_blank" name="t3" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a><a target="_blank" target="_blank" name="t18" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a>修改配置文件</h3><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">### 创建hive-site.xml文件&nbsp;</span><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">在hive/conf/目录下创建hive-site.xml文件</span><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:3916px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;?</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">xml</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;</span><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">version</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">&quot;1.0&quot;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;</span><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">encoding</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">&quot;UTF-8&quot;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;</span><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">standalone</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">&quot;no&quot;</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">?&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;?</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">xml-stylesheet</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;</span><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">type</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">&quot;text/xsl&quot;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;</span><span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">href</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">&quot;configuration.xsl&quot;</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">?&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">configuration</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">javax.jdo.option.ConnectionURL</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">jdbc:mysql://localhost:3306/hive?</span></span>useSSL=false&amp;amp<span class="s1" style="color:rgb(69,69,69); background-color:inherit">;</span><span class="attribute" style="background-color:inherit; margin:0px; padding:0px; border:none; color:red">createDatabaseIfNotExist</span><span style="background-color:inherit; color:black; margin:0px; padding:0px; border:none">=</span><span class="attribute-value" style="background-color:inherit; margin:0px; padding:0px; border:none; color:blue">true</span><span class="tag" style="background-color:inherit; margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none">&lt;/</span><span class="tag-name" style="background-color:inherit; margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0)">value</span><span class="tag" style="background-color:inherit; margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none">&gt;</span><span style="background-color:inherit; color:black; margin:0px; padding:0px; border:none">&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">javax.jdo.option.ConnectionDriverName</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">com.mysql.jdbc.Driver</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">javax.jdo.option.ConnectionUserName</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">root</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">javax.jdo.option.ConnectionPassword</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">123456</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">hive.metastore.schema.verification</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">false</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">description</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;Enforce&nbsp;metastore&nbsp;schema&nbsp;version&nbsp;consistency.&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;True:&nbsp;Verify&nbsp;that&nbsp;version&nbsp;information&nbsp;stored&nbsp;in&nbsp;metastore&nbsp;matches&nbsp;with&nbsp;one&nbsp;from&nbsp;Hive&nbsp;jars.&nbsp;&nbsp;Also&nbsp;disable&nbsp;automatic&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;schema&nbsp;migration&nbsp;attempt.&nbsp;Users&nbsp;are&nbsp;required&nbsp;to&nbsp;manully&nbsp;migrate&nbsp;schema&nbsp;after&nbsp;Hive&nbsp;upgrade&nbsp;which&nbsp;ensures&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proper&nbsp;metastore&nbsp;schema&nbsp;migration.&nbsp;(Default)&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;False:&nbsp;Warn&nbsp;if&nbsp;the&nbsp;version&nbsp;information&nbsp;stored&nbsp;in&nbsp;metastore&nbsp;doesn't&nbsp;match&nbsp;with&nbsp;one&nbsp;from&nbsp;in&nbsp;Hive&nbsp;jars.&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">description</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">configuration</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;</span></span></li></ol></div><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">报错：Caused by: MetaException(message:Version information not found in metastore. )</span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决：hive-site.xml加入</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:4604px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">hive.metastore.schema.verification</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">name</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">false</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">value</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">description</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;Enforce&nbsp;metastore&nbsp;schema&nbsp;version&nbsp;consistency.&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;True:&nbsp;Verify&nbsp;that&nbsp;version&nbsp;information&nbsp;stored&nbsp;in&nbsp;metastore&nbsp;matches&nbsp;with&nbsp;one&nbsp;from&nbsp;Hive&nbsp;jars.&nbsp;&nbsp;Also&nbsp;disable&nbsp;automatic&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;schema&nbsp;migration&nbsp;attempt.&nbsp;Users&nbsp;are&nbsp;required&nbsp;to&nbsp;manully&nbsp;migrate&nbsp;schema&nbsp;after&nbsp;Hive&nbsp;upgrade&nbsp;which&nbsp;ensures&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proper&nbsp;metastore&nbsp;schema&nbsp;migration.&nbsp;(Default)&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;False:&nbsp;Warn&nbsp;if&nbsp;the&nbsp;version&nbsp;information&nbsp;stored&nbsp;in&nbsp;metastore&nbsp;doesn't&nbsp;match&nbsp;with&nbsp;one&nbsp;from&nbsp;in&nbsp;Hive&nbsp;jars.&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">description</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;<span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&lt;/</span><span class="tag-name" style="margin:0px; padding:0px; font-weight:bold; border:none; color:rgb(153,51,0); background-color:inherit">property</span><span class="tag" style="margin:0px; padding:0px; font-weight:bold; color:rgb(153,51,0); border:none; background-color:inherit">&gt;</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;&nbsp;&nbsp;</span></span></li></ol></div><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">报错：缺少mysql jar包</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决：将其（如mysql-connector-java-5.1.15-bin.jar）拷贝到$HIVE_HOME/lib下即可。</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">报错：</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:5004px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">Exception&nbsp;in&nbsp;thread&nbsp;&quot;main&quot;&nbsp;java.lang.RuntimeException:&nbsp;Hive&nbsp;metastore&nbsp;database&nbsp;is&nbsp;not&nbsp;initialized.&nbsp;&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;Please&nbsp;use&nbsp;schematool&nbsp;(e.g.&nbsp;./schematool&nbsp;-initSchema&nbsp;-dbType&nbsp;...)&nbsp;to&nbsp;create&nbsp;the&nbsp;schema.&nbsp;If&nbsp;needed,&nbsp;&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;don't&nbsp;forget&nbsp;to&nbsp;include&nbsp;the&nbsp;option&nbsp;to&nbsp;auto-create&nbsp;the&nbsp;underlying&nbsp;database&nbsp;in&nbsp;your&nbsp;JDBC&nbsp;connection&nbsp;string&nbsp;(e.g.&nbsp;?<span class="attribute" style="margin:0px; padding:0px; border:none; color:red; background-color:inherit">createDatabaseIfNotExist</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">=</span><span class="attribute-value" style="margin:0px; padding:0px; border:none; color:blue; background-color:inherit">true</span><span style="margin:0px; padding:0px; border:none; background-color:inherit">&nbsp;for&nbsp;mysql)&nbsp;&nbsp;</span></span></li></ol></div><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决：</span><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:5185px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">#数据库的初始化。&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bin/schematool&nbsp;-initSchema&nbsp;-dbType&nbsp;mysql&nbsp;&nbsp;</span></li></ol></div><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">报错：[ERROR] Terminal initialization failed; falling back to unsupported<br style="">java.lang.IncompatibleClassChangeError: Found class jline.Terminal, but interface was expected<br style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at jline.TerminalFactory.create(TerminalFactory.java:101)<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决：http://www.68idc.cn/help/buildlang/ask/20151006570946.html</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">${HADOOP_HOME}/share/hadoop/yarn/lib&nbsp;目录下存在老版本jline<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">解决：把${HIVE_HOME}/lib/下的 jline-x.xx拷贝得到${HADOOP_HOME}/share/hadoop/yarn/lib</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">cp /hive/apache-hive-1.1.0-bin/lib/jline-2.12.jar /hadoop-2.5.2/share/hadoop/yarn/lib</p><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">启动：</p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:5552px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">bin/hive&nbsp;&nbsp;</span></span></li></ol></div><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">启动后mysql 多了hive 数据库</span><br style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170122145434927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">测试</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><h3 id="创建数据库" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0.8em 0px; font-size:1.7em; padding:0px"><a target="_blank" target="_blank" name="t4" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a><a target="_blank" target="_blank" name="t22" style="background:transparent; color:rgb(79,161,219); margin:0px; padding:0px; outline:none"></a>创建数据库</h3><div style="margin:0px; padding:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">create database db_hive_test;<br style=""></div><div style="margin:0px; padding:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170122145641806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></div><div style="margin:0px; padding:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><br style=""></div><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">创建测试表</span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">use db_hive_test;<br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">create table student(id int,name string) row format delimited fields terminated by '\t';</p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170122151518519?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170122145825134?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><h4 id="加载数据到表中" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0.8em 0px; font-size:1.25em; padding:0px">加载数据到表中</h4><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">新建student.txt 文件写入数据(id，name 按tab键分隔)</p><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">vi student.txt</span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><div class="dp-highlighter bg_html" style="padding:1px 0px 0px; font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif; background-color:rgb(231,229,220); width:851.391px; overflow-x:auto; overflow-y:hidden; position:relative; color:rgb(69,69,69); margin:18px 0px!important"><div class="bar" style="margin:0px; padding:0px 0px 0px 45px"><div class="tools" style="margin:0px; padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); border-left:3px solid rgb(108,226,108); border-right:1px solid rgb(231,229,220)"><span style="">[html]</span>&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="ViewSource" title="view plain" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view plain</a><span class="tracking-ad" style="margin:0px; padding:0px">&nbsp;<a target="_blank" target="_blank" href="http://blog.csdn.net/u014695188/article/details/54646575#" class="CopyToClipboard" title="copy" style="background-color:inherit; color:rgb(202,12,22); margin:0px 10px 0px 0px; padding:1px; outline:none; border:none; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">copy</a></span><div style="margin:0px; padding:0px; position:absolute; left:259px; top:6410px; width:16px; height:16px; z-index:99"></div><span class="tracking-ad" style="margin:0px; padding:0px"></span></div></div><ol start="1" class="dp-xml" style="padding:0px; list-style-position:initial; border-top:none; border-right:1px solid rgb(231,229,220); border-bottom:none; border-left:none; background-color:rgb(255,255,255); color:rgb(92,92,92); margin:0px 0px 1px 45px!important"><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit"><span style="margin:0px; padding:0px; border:none; background-color:inherit">1001&nbsp;&nbsp;&nbsp;&nbsp;zhangsan&nbsp;&nbsp;</span></span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">1002&nbsp;&nbsp;&nbsp;&nbsp;lisi&nbsp;&nbsp;</span></li><li class="alt" style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); color:inherit; line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">1003&nbsp;&nbsp;&nbsp;&nbsp;wangwu&nbsp;&nbsp;</span></li><li style="margin-left:40px; list-style:decimal; border-top:none; border-right:none; border-bottom:none; border-left:3px solid rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px 3px 0px 10px!important"><span style="margin:0px; padding:0px; border:none; color:black; background-color:inherit">1004&nbsp;&nbsp;&nbsp;&nbsp;zhaoli&nbsp;&nbsp;</span></li></ol></div><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px">load data local inpath '/home/hadoop/student.txt' into table&nbsp; db_hive_test.student</span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><img src="https://img-blog.csdn.net/20170122151730987?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><h5 id="查询表信息" style="font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-weight:100; line-height:1.1; color:rgb(69,69,69); margin:0.8em 0px; font-size:1em; padding:0px">查询表信息</h5><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">select * from student;</code><span style="color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></span><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace">查看表的详细信息</span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">desc formatted student;</code></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace">通过ui页面查看创建的数据位置</span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace">http://192.168.169.132:50070/explorer.html#/user/hive/warehouse/db_hive_test.db<br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><img src="https://img-blog.csdn.net/20170122151909697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace">通过Mysql查看创建的表</span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><img src="https://img-blog.csdn.net/20170122152504896?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace">查看hive的函数&nbsp;<br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">show functions;</code><br style=""></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">查看函数详细信息&nbsp;<br style=""></code></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.96px; padding:2px 4px">desc function sum;&nbsp;<br style="">desc function extended</code><br style=""></code></span></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(69,69,69); font-family:&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,SimHei,Arial,SimSun; font-size:16px"><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.96px; padding:2px 4px"><img src="https://img-blog.csdn.net/20170122152947399?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:0px; vertical-align:middle; outline:none; max-width:100%"><br style=""></code></code></span></p><div><span style="margin:0px; padding:0px; font-family:monospace"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)"><code style="font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.96px; padding:2px 4px"><br></code></code></span></div>]]></content>
    
    
    <categories>
      
      <category>hive</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop安装教程_伪分布式配置</title>
    <link href="/2017/10/06/Hadoop%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B_%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
    <url>/2017/10/06/Hadoop%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B_%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">创建hadoop用户</h2><span id="more"></span><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">如果你安装 CentOS 的时候不是用的 &quot;hadoop&quot; 用户，那么需要增加一个名为 hadoop 的用户。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">首先点击左上角的 “应用程序” -&gt; &quot;系统工具&quot; -&gt; &quot;终端&quot;，首先在终端中输入&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">su</code>&nbsp;，按回车，输入 root 密码以 root 用户登录，接着执行命令创建新用户 hadoop:</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">su              </span><span class="com" style="font-style:italic"># 上述提到的以 root 用户登录</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">useradd </span><span class="pln" style="color:rgb(255,255,255)">-m hadoop -s /bin/bash   </span><span class="com" style="font-style:italic"># 创建新用户hadoop</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">如下图所示，这条命令创建了可以登陆的 hadoop 用户，并使用 /bin/bash 作为shell。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">接着使用如下命令修改密码，按提示输入两次密码，可简单的设为 &quot;hadoop&quot;（密码随意指定，若提示“无效的密码，过于简单”则再次输入确认就行）:</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">passwd </span><span class="pln" style="color:rgb(255,255,255)">hadoop</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><img src="" alt=""><br></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">可为 hadoop 用户增加管理员权限，方便部署，避免一些对新手来说比较棘手的权限问题，执行：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="color:rgb(117,113,94); margin-top:0px; margin-bottom:0px; padding-left:40px; list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">visudo</span></li></ol></pre><div class="code-pretty-toolbar" style="color:rgb(221,221,221); position:absolute; top:0px; left:0px; font-size:12px"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">如下图，找到&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">root ALL=(ALL) ALL</code>&nbsp;这行（应该在第98行，可以先按一下键盘上的&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">ESC</code>&nbsp;键，然后输入&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">:98</code>&nbsp;(按一下冒号，接着输入98，再按回车键)，可以直接跳到第98行 ），然后在这行下面增加一行内容：<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">hadoop ALL=(ALL) ALL</code>（当中的间隔为tab）。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="text-align:center">添加上一行内容后，先按一下键盘上的&nbsp;</span><code style="text-align:center; font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">ESC</code><span style="text-align:center">&nbsp;键，然后输入&nbsp;</span><code style="text-align:center; font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">:wq</code><span style="text-align:center">&nbsp;(输入冒号还有wq，这是vi/vim编辑器的保存方法)，再按回车键保存退出就可以了。</span></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">最后注销当前用户(点击屏幕右上角的用户名，选择退出-&gt;注销)，在登陆界面使用刚创建的 hadoop 用户进行登陆。（如果已经是 hadoop 用户，且在终端中使用&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">su</code>&nbsp;登录了 root 用户，那么需要执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">exit</code>&nbsp;退出 root 用户状态）</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"></p><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">安装SSH、配置SSH无密码登陆</h2><p></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">集群、单节点模式都需要用到 SSH 登陆（类&#20284;于远程登陆，你可以登录某台 Linux 主机，并且在上面运行命令），一般情况下，CentOS 默认已安装了 SSH client、SSH server。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">若需要安装，则可以通过 yum 进行安装（安装过程中会让你输入 [y/N]，输入 y 即可）：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">sudo </span><span class="pln" style="color:rgb(255,255,255)">yum install openssh-clients</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">sudo </span><span class="pln" style="color:rgb(255,255,255)">yum install openssh-server</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">接着执行如下命令测试一下 SSH 是否可用：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">ssh </span><span class="pln" style="color:rgb(255,255,255)">localhost</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">此时会有如下提示(SSH首次登陆提示)，输入 yes 。然后按提示输入密码 hadoop，这样就登陆到本机了。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">但这样登陆是需要每次输入密码的，我们需要配置成SSH无密码登陆比较方便。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">首先输入&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">exit</code>&nbsp;退出刚才的 ssh，就回到了我们原先的终端窗口，然后利用 ssh-keygen 生成密钥，并将密钥加入到授权中：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">exit                           </span><span class="com" style="font-style:italic"># 退出刚才的 ssh localhost</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">cd </span><span class="pln" style="color:rgb(255,255,255)">~/.ssh/                     </span><span class="com" style="font-style:italic"># 若没有该目录，请先执行一次ssh localhost</span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">ssh-keygen -t rsa              </span><span class="com" style="font-style:italic"># 会有提示，都按回车就可以</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">cat </span><span class="pln" style="color:rgb(255,255,255)">id_rsa.pub &gt;&gt; authorized_keys  </span><span class="com" style="font-style:italic"># 加入授权</span></li><li class="L4" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">chmod </span><span class="pln" style="color:rgb(255,255,255)">600 ./authorized_keys    </span><span class="com" style="font-style:italic"># 修改文件权限</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><div class="callout callout-note" style="margin:20px 0px 20px 20px; padding:14px 12px 0px 14px; border-width:1px 1px 1px 8px; border-style:solid; border-color:rgb(238,238,238) rgb(238,238,238) rgb(238,238,238) rgb(71,173,9); background:rgb(252,252,252); color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px"><span class="callout-title" style="font-size:20px; color:rgb(0,136,0)">~的含义</span><p style="margin-top:0px; margin-bottom:15px">在 Linux 系统中，~ 代表的是用户的主文件夹，即 &quot;/home/用户名&quot; 这个目录，如你的用户名为 hadoop，则 ~ 就代表 &quot;/home/hadoop/&quot;。 此外，命令中的 # 后面的文字是注释。</p></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">此时再用&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">ssh localhost</code>&nbsp;命令，无需输入密码就可以直接登陆了，如下图所示。</p><div><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">安装Java环境</h2></div><p></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"></p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">sudo </span><span class="pln" style="color:rgb(255,255,255)">yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">通过上述命令安装 OpenJDK，默认安装位置为 /usr/lib/jvm/java-1.8.0（该路径可以通过执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">rpm -ql java-1.7.0-openjdk-devel | grep '/bin/javac'</code>&nbsp;命令确定，执行后会输出一个路径，除去路径末尾的 “/bin/javac”，剩下的就是正确的路径了）。OpenJDK 安装后就可以直接使用 java、javac 等命令了。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">接着需要配置一下 JAVA_HOME 环境变量，为方便，我们在 ~/.bashrc 中进行设置：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">vim </span><span class="pln" style="color:rgb(255,255,255)">~/.bashrc</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">在文件最后面添加如下单独一行（指向 JDK 的安装位置），并保存：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-shell prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">JAVA_HOME=<span style="color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">/usr/lib/jvm/java-1.8.0</span></span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">source&nbsp;<span style="color:rgb(255,255,255); font-family:consolas,menlo,courier,monospace; font-size:16px; white-space:pre-wrap; background-color:rgb(39,40,34)">~/.bashrc</span></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="color:rgb(255,255,255); font-family:consolas,menlo,courier,monospace; font-size:16px; white-space:pre-wrap; background-color:rgb(39,40,34)"><br></span></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="color:rgb(255,255,255); font-family:consolas,menlo,courier,monospace; font-size:16px; white-space:pre-wrap; background-color:rgb(39,40,34)">cd $JAVA_HOME</span></p><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">Hadoop伪分布式配置</h2><p></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">Hadoop 可以在单节点上以伪分布式的方式运行，Hadoop 进程以分离的 Java 进程来运行，节点既作为 NameNode 也作为 DataNode，同时，读取的是 HDFS 中的文件。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">在设置 Hadoop 伪分布式配置前，我们还需要设置 HADOOP 环境变量，执行如下命令在 ~/.bashrc 中设置：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">vim ~/.bashrc</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">这次我们选择用 gedit 而不是 vim 来编辑。gedit 是文本编辑器，类&#20284;于 Windows 中的记事本，会比较方便。保存后记得关掉整个 gedit 程序，否则会占用终端。在文件最后面增加如下内容：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-shell prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="com" style="font-style:italic"># Hadoop Environment Variables</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_HOME=/usr/local/hadoop </span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_INSTALL=$HADOOP_HOME</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_MAPRED_HOME=$HADOOP_HOME</span></li><li class="L4" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_COMMON_HOME=$HADOOP_HOME</span></li><li class="L5" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_HDFS_HOME=$HADOOP_HOME</span></li><li class="L6" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">YARN_HOME=$HADOOP_HOME</span></li><li class="L7" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span></li><li class="L8" style="list-style:decimal; margin:0px; padding:0px"><span class="kwd" style="color:rgb(102,217,239)">export </span><span class="pln" style="color:rgb(255,255,255)">PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">保存后，不要忘记执行如下命令使配置生效：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">source </span><span class="pln" style="color:rgb(255,255,255)">~/.bashrc</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">这些变量在启动 Hadoop 进程时需要用到，不设置的话可能会报错（这些变量也可以通过修改 ./etc/hadoop/hadoop-env.sh 实现）。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">hadoop version</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">Hadoop 的配置文件位于&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">/usr/local/hadoop/etc/hadoop/</code>&nbsp;中，伪分布式需要修改2个配置文件&nbsp;<span style="">core-site.xml</span>&nbsp;和&nbsp;<span style="">hdfs-site.xml</span>&nbsp;。Hadoop的配置文件是 xml &#26684;式，每个配置以声明 property 的 name 和 value 的方式来实现。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">修改配置文件&nbsp;<span style="">core-site.xml</span>&nbsp;(通过 gedit 编辑会比较方便:&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">gedit ./etc/hadoop/core-site.xml</code>)，将当中的</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-xml prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;configuration&gt;</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;/configuration&gt;</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">XML</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">修改为下面配置：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-xml prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; list-style-position:inside!important"><li class="L0" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;configuration&gt;</span></li><li class="L1" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L2" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">hadoop.tmp.dir</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L3" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        &lt;value&gt;/usr/local/hadoop/tmp</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L4" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;description&gt;</span><span class="pln" style="color:rgb(255,255,255)">Abase for other temporary directories.</span><span class="tag" style="color:rgb(249,38,114)">&lt;/description&gt;</span></li><li class="L5" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L6" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L7" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">fs.defaultFS</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L8" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">hdfs://localhost:9000</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L9" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L0" style="color:rgb(117,113,94); list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;/configuration&gt;</span></li></ol></pre><div class="code-pretty-toolbar" style="color:rgb(221,221,221); position:absolute; top:0px; left:0px; font-size:12px"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">XML</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">同样的，修改配置文件&nbsp;<span style="">hdfs-site.xml</span>：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-xml prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;configuration&gt;</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">dfs.replication</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">1</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L4" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L5" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L6" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">dfs.namenode.name.dir</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L7" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">file:/usr/local/hadoop/tmp/dfs/name</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L8" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L9" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">dfs.datanode.data.dir</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">file:/usr/local/hadoop/tmp/dfs/data</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;/configuration&gt;</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">XML</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">配置完成后，执行 NameNode 的&#26684;式化:</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">hadoop namenode -format</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">成功的话，会看到 &quot;successfully formatted&quot; 和 &quot;Exitting with status 0&quot; 的提示，若为 &quot;Exitting with status 1&quot; 则是出错。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">接着开启&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">NaneNode</code>&nbsp;和&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">DataNode</code>&nbsp;守护进程：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">./sbin/start-dfs.sh</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">若出现如下 SSH 的提示 &quot;Are you sure you want to continue connecting&quot;，输入 yes 即可。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">启动时可能会有 WARN 提示 &quot;WARN util.NativeCodeLoader...&quot; 如前面提到的，这个提示不会影响正常使用。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">启动完成后，可以通过命令&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">jps</code>&nbsp;来判断是否成功启动，若成功启动则会列出如下进程: &quot;NameNode&quot;、&quot;DataNode&quot;和<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">SecondaryNameNode</code>（如果 SecondaryNameNode 没有启动，请运行 sbin/stop-dfs.sh 关闭进程，然后再次尝试启动尝试）。如果没有 NameNode 或 DataNode ，那就是配置不成功，请仔细检查之前步骤，或通过查看启动日志排查原因。</p><div class="callout callout-tips" style="margin:20px 0px 20px 20px; padding:14px 12px 0px 14px; border-width:1px 1px 1px 8px; border-style:solid; border-color:rgb(238,238,238) rgb(238,238,238) rgb(238,238,238) rgb(71,173,9); background:rgb(252,252,252); color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px"><span class="callout-title" style="font-weight:bold; font-size:20px; color:rgb(0,136,0)">通过查看启动日志分析启动失败原因</span><p style="margin-top:0px; margin-bottom:15px">有时 Hadoop 无法正确启动，如 NameNode 进程没有顺利启动，这时可以查看启动日志来排查原因，注意几点：</p><ul style="margin:0px 0px 15px 20px; list-style:none; padding:0px"><li style="list-style:disc; margin:0px; padding:0px">启动时会提示形如 &quot;dblab: starting namenode, logging to /usr/local/hadoop/logs/hadoop-hadoop-namenode-dblab.out&quot;，其中 dblab 对应你的主机名，但启动的日志信息是记录在 /usr/local/hadoop/logs/hadoop-hadoop-namenode-dblab.log 中，所以应该查看这个后缀为&nbsp;<span style="">.log</span>&nbsp;的文件；</li><li style="list-style:disc; margin:0px; padding:0px">每一次的启动日志都是追加在日志文件之后，所以得拉到最后面看，看下记录的时间就知道了。</li><li style="list-style:disc; margin:0px; padding:0px">一般出错的提示在最后面，也就是写着 Fatal、Error 或者 Java Exception 的地方。</li><li style="list-style:disc; margin:0px; padding:0px">可以在网上搜索一下出错信息，看能否找到一些相关的解决方法。</li></ul></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">成功启动后，可以访问 Web 界面&nbsp;<a target="_blank" target="_blank" href="http://localhost:50070/" style="background:0px 0px; color:rgb(32,128,223)">http://localhost:50070</a>&nbsp;查看 NameNode 和 Datanode 信息，还可以在线查看 HDFS 中的文件。</p><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">启动YARN</h2><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">（伪分布式不启动 YARN 也可以，一般不会影响程序执行）</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">有的读者可能会疑惑，怎么启动 Hadoop 后，见不到书上所说的 JobTracker 和 TaskTracker，这是因为新版的 Hadoop 使用了新的 MapReduce 框架（MapReduce V2，也称为 YARN，Yet Another Resource Negotiator）。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">YARN 是从 MapReduce 中分离出来的，负责资源管理与任务调度。YARN 运行于 MapReduce 之上，提供了高可用性、高扩展性，YARN 的更多介绍在此不展开，有兴趣的可查阅相关资料。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">上述通过&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">./sbin/start-dfs.sh</code>&nbsp;启动 Hadoop，仅仅是启动了 MapReduce 环境，我们可以启动 YARN ，让 YARN 来负责资源管理与任务调度。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">首先修改配置文件&nbsp;<span style="">mapred-site.xml</span>，这边需要先进行重命名：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="kwd" style="color:rgb(102,217,239)">mv </span><span class="pln" style="color:rgb(255,255,255)">./etc/hadoop/mapred-site.xml.template ./etc/hadoop/mapred-site.xml</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">然后再进行编辑，同样使用 gedit 编辑会比较方便些&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">gedit ./etc/hadoop/mapred-site.xml</code>&nbsp;：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-xml prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;configuration&gt;</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">mapreduce.framework.name</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">yarn</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L4" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L5" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;/configuration&gt;</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">XML</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">接着修改配置文件&nbsp;<span style="">yarn-site.xml</span>：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-xml prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;configuration&gt;</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">    </span><span class="tag" style="color:rgb(249,38,114)">&lt;property&gt;</span></li><li class="L2" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;name&gt;</span><span class="pln" style="color:rgb(255,255,255)">yarn.nodemanager.aux-services</span><span class="tag" style="color:rgb(249,38,114)">&lt;/name&gt;</span></li><li class="L3" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;value&gt;</span><span class="pln" style="color:rgb(255,255,255)">mapreduce_shuffle</span><span class="tag" style="color:rgb(249,38,114)">&lt;/value&gt;</span></li><li class="L4" style="list-style:decimal; margin:0px; padding:0px"><span class="pln" style="color:rgb(255,255,255)">        </span><span class="tag" style="color:rgb(249,38,114)">&lt;/property&gt;</span></li><li class="L5" style="list-style:decimal; margin:0px; padding:0px"><span class="tag" style="color:rgb(249,38,114)">&lt;/configuration&gt;</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">XML</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">然后就可以启动 YARN 了（需要先执行过&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">./sbin/start-dfs.sh</code>）：</p><div class="code-pretty-container" style="position:relative; padding-top:9px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><pre class="prettyprint linenums lang-bash prettyprinted" style="overflow:auto; font-family:consolas,menlo,courier,monospace; padding:1em; margin:1em auto; line-height:20px; word-break:break-all; word-wrap:break-word; background-color:rgb(39,40,34); border:1px solid rgb(11,12,10); white-space:pre-wrap; width:847.5px"><ol class="linenums" style="margin-top:0px; margin-bottom:0px; padding-left:40px; color:rgb(117,113,94); list-style-position:inside!important"><li class="L0" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">./sbin/start-yarn.sh      $ 启动YARN</span></li><li class="L1" style="list-style:decimal; margin:0px; padding:0px 0px 0px 20px"><span class="pln" style="color:rgb(255,255,255)">./sbin/mr-jobhistory-daemon.sh start historyserver  </span><span class="com" style="font-style:italic"># 开启历史服务器，才能在Web中查看任务运行情况</span></li></ol></pre><div class="code-pretty-toolbar" style="position:absolute; top:0px; left:0px; font-size:12px; color:rgb(221,221,221)"><span class="title" style="display:inline-block; vertical-align:top; background-color:rgb(30,31,26); border-top:1px solid rgb(11,12,10); border-right:1px solid rgb(11,12,10); border-left:1px solid rgb(11,12,10); padding:4px 14px 2px; border-bottom:none; margin-right:12px">Shell 命令</span><a target="_blank" target="_blank" title="复制代码" class="tool clipboard" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-files-o" style=""></span></a><a target="_blank" target="_blank" title="查看纯文本代码" class="tool view-source" style="background:0px 0px; color:rgb(119,119,119); display:inline-block; vertical-align:top; font-size:16px; width:24px; height:24px; margin:-1px 3px 0px 0px"><span class="fa fa-code" style=""></span></a><span class="msg" style="display:inline-block; vertical-align:top; color:rgb(39,40,34); line-height:28px; margin-left:10px"></span></div></div><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">开启后通过&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">jps</code>&nbsp;查看，可以看到多了 NodeManager 和 ResourceManager 两个后台进程。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"></p><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">附加教程: 配置PATH环境变量</h2><p></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">在这里额外讲一下 PATH 这个环境变量（可执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">echo $PATH</code>&nbsp;查看，当中包含了多个目录）。例如我们在主文件夹 ~ 中执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">ls</code>&nbsp;这个命令时，实际执行的是&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">/bin/ls</code>&nbsp;这个程序，而不是&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">~/ls</code>&nbsp;这个程序。系统是根据 PATH 这个环境变量中包含的目录位置，逐一进行查找，直至在这些目录位置下找到匹配的程序（若没有匹配的则提示该命令不存在）。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">上面的教程中，我们都是先进入到 /usr/local/hadoop 目录中，再执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">./sbin/hadoop</code>，实际上等同于运行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">/usr/local/hadoop/sbin/hadoop</code>。我们可以将 Hadoop 命令的相关目录加入到 PATH 环境变量中，这样就可以直接通过&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">start-dfs.sh</code>&nbsp;开启 Hadoop，也可以直接通过&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">hdfs</code>&nbsp;访问 HDFS 的内容，方便平时的操作。</p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">在前面我们设置 HADOOP 环境变量时，我们已经顺便设置了 PATH 变量（即 &quot;export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin&quot;），那么以后我们在任意目录中都可以直接通过执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">start-dfs.sh</code>&nbsp;来启动 Hadoop 或者执行&nbsp;<code style="font-family:Menlo,Monaco,Consolas,&quot;Courier New&quot;,monospace; font-size:14.4px; padding:4px 6px; background-color:rgb(254,233,204); vertical-align:middle">hdfs dfs -ls input</code>&nbsp;查看 HDFS 文件了。</p><br><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)">在平时的学习中，我们使用伪分布式就足够了。</span><br></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><br></span></p><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><span style="color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"></span></p><h2 style="font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51); margin-top:20px; margin-bottom:10px; font-size:30px; border-left:10px solid rgb(52,152,219); padding:10px 0px 10px 14px; background-color:rgb(247,247,247)">参考资料</h2><ul style="margin:0px 0px 15px 20px; list-style:none; padding:0px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><li style="list-style:disc; margin:0px; padding:0px"><a target="_blank" target="_blank" href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleCluster.html" style="background:0px 0px; color:rgb(32,128,223)">Hadoop: Setting up a Single Node Cluster</a></li><li style="list-style:disc; margin:0px; padding:0px"><a target="_blank" target="_blank" href="http://tecadmin.net/setup-hadoop-single-node-cluster-on-centos-redhat/" style="background:0px 0px; color:rgb(32,128,223)">How to Setup Hadoop 2.7.1 on CentOS, Ubuntu &amp; LinuxMint</a></li><li style="list-style:disc; margin:0px; padding:0px"><a target="_blank" target="_blank" href="http://blog.chinaunix.net/uid-28311809-id-4383551.html" style="background:0px 0px; color:rgb(32,128,223)">Yarn简单介绍及内存配置</a></li></ul><p></p><br><p style="margin-top:0px; margin-bottom:15px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:16px; background-color:rgb(254,254,254)"><br></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>elasticsearch UpdateByQuery的使用</title>
    <link href="/2017/08/29/elasticsearch%20UpdateByQuery%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2017/08/29/elasticsearch%20UpdateByQuery%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>上一篇发了解决elasticsearch UpdateByQuery的问题，后来遇到好多小伙伴问我，为什么他使用不了UpdateByQuery，遂科普下。<br>在于你可能没有引入reindex包：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.elasticsearch.module&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;reindex&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.4.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>使用方法也很简单，举个栗子，这个栗子的作用是把所有满足条件的session_id记录都使用对应script更新：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public static void updateByQuery(String index, String type, Set&lt;Map&lt;String, Object&gt;&gt; docs, String scriptStr) &#123;</span><br><span class="line">        if (docs == null || docs.isEmpty())&#123;</span><br><span class="line">            LOG.info(&quot;No data can updateByQuery to es! index:&#123;&#125;.&quot;, index);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        UpdateByQueryRequestBuilder ubqrb = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);</span><br><span class="line">        for (Map&lt;String, Object&gt; doc : docs) &#123;</span><br><span class="line">            if (doc==null || doc.isEmpty())&#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            Script script = new Script(scriptStr);</span><br><span class="line">            BulkIndexByScrollResponse scrollResponse =</span><br><span class="line">                    ubqrb.source(index)</span><br><span class="line">                            .script(script)</span><br><span class="line">                            .filter(QueryBuilders.termQuery(&quot;session_id&quot;, doc.get(&quot;orgin_session_id&quot;)))</span><br><span class="line">                            .abortOnVersionConflict(false).get();</span><br><span class="line">            for (BulkItemResponse.Failure failure : scrollResponse.getIndexingFailures()) &#123;</span><br><span class="line">                LOG.error(failure.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elasticsearch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>es  UpdateByQuery 出现 VersionConflictEngineException</title>
    <link href="/2017/08/25/es%20%20UpdateByQuery%20%E5%87%BA%E7%8E%B0%20VersionConflictEngineException/"/>
    <url>/2017/08/25/es%20%20UpdateByQuery%20%E5%87%BA%E7%8E%B0%20VersionConflictEngineException/</url>
    
    <content type="html"><![CDATA[<p>问题出在多次更新统一doc出现版本不一致，抛出异常，修改不成功。<br>解决方法：<br>确认你的操作不会造成数据不一致的情况下，<br>UpdateByQueryRequestBuilder实现类增加执行方法abortOnVersionConflict(false)</p><span id="more"></span><p>like this</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">UpdateByQueryRequestBuilder ubqrb = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);</span><br><span class="line">Script script = new Script(scriptStr);</span><br><span class="line">BulkIndexByScrollResponse scrollResponse = ubqrb.source(index).script(script)</span><br><span class="line">.filter(QueryBuilders.termQuery(&quot;xxx&quot;,xxx)))</span><br><span class="line">.abortOnVersionConflict(false)</span><br><span class="line">.get();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>异常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>disruptor高性能框架</title>
    <link href="/2017/08/25/disruptor%E9%AB%98%E6%80%A7%E8%83%BD%E6%A1%86%E6%9E%B6/"/>
    <url>/2017/08/25/disruptor%E9%AB%98%E6%80%A7%E8%83%BD%E6%A1%86%E6%9E%B6/</url>
    
    <content type="html"><![CDATA[<p>最近项目里需要写模型，然后数据是从es取，不同人负责写不同模型，这里遇到一个问题，就是数据的读其实公用，没必要各自取一次数据浪费带宽、内存、cpu…遂想是否可以提取公用部分做数据读，下发给各个模型，然后开发老大说用disruptor试试，调研了下确实可行，就稍加记录下。</p><span id="more"></span><p>disruptor项目地址：<a href="https://github.com/LMAX-Exchange/disruptor">https://github.com/LMAX-Exchange/disruptor</a><br>简单来说disruptor是一个高性能的异步的消息处理框架。</p><p>disruptor最核心的概念是ringbuffer（环形缓冲队列），下图解释所有↓<br><img src="http://img.blog.csdn.net/20170828102904174?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja2xpbjkyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>ringbuffer就如上一个环形队列，生产者往队列写数据，消费者读取数据处理，如果生产者追到消费者，那么生产者会停止生产，阻塞，等待它完成；同样的，消费者消费完了所有数据，消费者还未来得及消费，前者一样阻塞等待。</p><p>disruptor采用的就是ringbuffer数据结构，之所以采用这种结构，官网是这样描述的：<br><em>之所以采用ringbuffer，是因为它在可靠消息传递方面有很好的性能。这就够了，不过它还有一些其他的优点。<br>首先，因为它是数组，所以要比链表快，而且有一个容易预料到的数据访问的内存地址。这是对CPU缓存友好的—也就是说，在硬件级别，数组中的元素是会被预加载的，因此在ringbuffer当中，cpu无需时不时去主存加载数组中的下一个元素。（校对注：因为只要一个元素被加载到缓存行，其他相邻的几个元素也会被加载进同一个缓存行）<br>其次，你可以为数组预先分配内存，使得数组对象一直存在（除非程序终止）。这就意味着不需要花大量的时间用于垃圾回收。此外，不像链表那样，需要为每一个添加到其上面的对象创造节点对象—对应的，当删除节点时，需要执行相应的内存清理操作。</em></p><p>其他概念就不详细描述了，直接照例代码上。<br>引入包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.lmax&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;disruptor&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>Event类获取用于填充数据，data类型按需定义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class MessageEvent &#123;</span><br><span class="line">    private List&lt;Map&lt;String, Object&gt;&gt; data;</span><br><span class="line"></span><br><span class="line">    public void setData(List&lt;Map&lt;String, Object&gt;&gt; data) &#123;</span><br><span class="line">        this.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;Map&lt;String, Object&gt;&gt; getData() &#123;</span><br><span class="line">        return data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据工厂类，实现EventFactory接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class MessageEventFactory implements EventFactory&lt;MessageEvent&gt; &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public MessageEvent newInstance() &#123;</span><br><span class="line">        return new MessageEvent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生产者类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class MessageEventProducer &#123;</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(MessageEventProducer.class);</span><br><span class="line"></span><br><span class="line">    private final RingBuffer&lt;MessageEvent&gt; ringBuffer;</span><br><span class="line"></span><br><span class="line">    public MessageEventProducer(RingBuffer&lt;MessageEvent&gt; ringBuffer) &#123;</span><br><span class="line">        this.ringBuffer = ringBuffer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void onData(List&lt;Map&lt;String, Object&gt;&gt; datas) &#123;</span><br><span class="line">        long sequence = ringBuffer.next(); </span><br><span class="line">        try &#123;</span><br><span class="line">            MessageEvent event = ringBuffer.get(sequence);</span><br><span class="line">            event.setData(datas);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            ringBuffer.publish(sequence);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者类，handler，具体逻辑数据类，实现EventHandler接口即可，实现其onEvent方法，可通过event.getData()拿到数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class MessageEventHandler implements EventHandler&lt;MessageEvent&gt;</span><br><span class="line">&#123;</span><br><span class="line">    public void onEvent(MessageEvent event, long sequence, boolean endOfBatch)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(&quot;Event: &quot; + event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主类，启动类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public class MessageEventMain extends Thread &#123;</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(MessageEventMain.class);</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        ThreadFactory threadFactory = Executors.defaultThreadFactory();</span><br><span class="line"></span><br><span class="line">        // 创建消息工厂类</span><br><span class="line">        MessageEventFactory factory = new MessageEventFactory();</span><br><span class="line"></span><br><span class="line">        // ringbuffer size，一般为2的指数倍</span><br><span class="line">        int bufferSize = 1024;</span><br><span class="line"></span><br><span class="line">        // 定义 Disruptor</span><br><span class="line">        Disruptor&lt;MessageEvent&gt; disruptor =</span><br><span class="line">                new Disruptor&lt;&gt;(factory, bufferSize, threadFactory, ProducerType.SINGLE, new BlockingWaitStrategy());</span><br><span class="line"></span><br><span class="line">        // 关联消费者</span><br><span class="line">        disruptor.handleEventsWith(new MessageHandler());</span><br><span class="line">        disruptor.handleEventsWith(new xxxxHandler());</span><br><span class="line"></span><br><span class="line">        // 启动disruptor框架</span><br><span class="line">        disruptor.start();</span><br><span class="line"></span><br><span class="line">        // 获得ringbuffer用于消息发布</span><br><span class="line">        RingBuffer&lt;MessageEvent&gt; ringBuffer = disruptor.getRingBuffer();</span><br><span class="line">        MessageEventProducer producer = new MessageEventProducer(ringBuffer);</span><br><span class="line">        while (true) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">             List list = getData();//自己的取数逻辑</span><br><span class="line">                 producer.onData(list);</span><br><span class="line">                Thread.sleep(60 * 10 * 1000);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>打完收工<br>另外讲几点：<br>1.handler会在producer.onData后对框架通知消费数据；<br>2.消费数据最好按最简单类型处理，性能更好，我上面用list实在是业务框定，所有后续造成了一个严重问题；<br>3.handler消费完对应ringbuffer数据并不会马上被清理，是直到生产者填充环形队列再到这个位置才会覆盖数据，所以问题2就是这样出现，如果定义复杂类型，一格存储大量数据，会操作jvm内存不够，程序运行一段数据会出现大量full fc或者oom，解决办法是，要么换成一条条数据发送，要么减小ringbuffer size，我这里业务限定，只能改小了ringbuffer size；<br>4.框架有阻塞等待机制，具体使用算法可以自行查，也就是说，如果某一个消费者太慢，生产者太快，到生产者追上消费者的那一格，生产者会阻塞，直到最慢的那个消费者消费完成，同样的，如果消费者很快，消费到了最新的一份数据，一样会阻塞等待生成者再次生成数据。所以这里要注意，如果某一个handler一直太慢，你可能要处理下这个handler效率，必要时撤掉，起码不能影响其他handler正常运行。</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高性能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Storm初探】wordcount demo</title>
    <link href="/2017/06/26/%E3%80%90Storm%E5%88%9D%E6%8E%A2%E3%80%91wordcount%20demo/"/>
    <url>/2017/06/26/%E3%80%90Storm%E5%88%9D%E6%8E%A2%E3%80%91wordcount%20demo/</url>
    
    <content type="html"><![CDATA[<p>目前工作下需要接触storm，遂写个demo练练手。<br>代码主要借鉴的是storm官方的github项目：<a href="https://github.com/apache/storm">https://github.com/apache/storm</a></p><span id="more"></span><p>略做修改。<br>1.pom.xml引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.apache.storm&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;storm-core&lt;/artifactId&gt;</span><br><span class="line">     &lt;type&gt;jar&lt;/type&gt;</span><br><span class="line">     &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>2.Spout<br>Spout是strom里产生元数据（tuple）流的类，通常情况下Spout会读取外部数据，然后转换为Topology内部的元数据（tuple），主动角色。<br>nextTuple方法不断执行，数据在此方法内产生。<br>此处用在数组中随机获得句子作为元数据流做示例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">public class RandomSentenceSpout extends BaseRichSpout &#123;</span><br><span class="line">  private static final Logger LOG = LoggerFactory.getLogger(RandomSentenceSpout.class);</span><br><span class="line"></span><br><span class="line">  SpoutOutputCollector _collector;</span><br><span class="line">  Random _rand;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) &#123;</span><br><span class="line">    _collector = collector;</span><br><span class="line">    _rand = new Random();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void nextTuple() &#123;</span><br><span class="line">    Utils.sleep(100);</span><br><span class="line">    String[] sentences = new String[]&#123;sentence(&quot;the cow jumped over the moon&quot;), sentence(&quot;an apple a day keeps the doctor away&quot;),</span><br><span class="line">            sentence(&quot;four score and seven years ago&quot;), sentence(&quot;snow white and the seven dwarfs&quot;), sentence(&quot;i am at two with nature&quot;)&#125;;</span><br><span class="line">    final String sentence = sentences[_rand.nextInt(sentences.length)];</span><br><span class="line"></span><br><span class="line">    LOG.info(&quot;Emitting tuple: &#123;&#125;&quot;, sentence);</span><br><span class="line"></span><br><span class="line">    _collector.emit(new Values(sentence));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  protected String sentence(String input) &#123;</span><br><span class="line">    return input;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void ack(Object id) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void fail(Object id) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void declareOutputFields(OutputFieldsDeclarer declarer) &#123;</span><br><span class="line">    declarer.declare(new Fields(&quot;word&quot;));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.Bolt<br>在一个Topology中接收数据并处理的组件，被动角色。<br>execute函数处理接收到的数据，并生成新元组转发（emit）出去。<br>此处定义了两个bolt，第一个blot先把得到Sentence分隔成word，然后下一个bolt对word计数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class SplitSentenceBlot extends BaseBasicBolt &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void execute(Tuple tuple, BasicOutputCollector collector) &#123;</span><br><span class="line">        String word = tuple.getString(0);</span><br><span class="line">        String[] words = word.split(&quot; &quot;);</span><br><span class="line">        for (String s : words) &#123;</span><br><span class="line">            System.out.println(&quot;==========&quot; + s);</span><br><span class="line">            collector.emit(new Values(s));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void declareOutputFields(OutputFieldsDeclarer declarer) &#123;</span><br><span class="line">        declarer.declare(new Fields(&quot;word&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class WordCountBlot extends BaseBasicBolt &#123;</span><br><span class="line">    Map&lt;String, Integer&gt; counts = new HashMap&lt;String, Integer&gt;();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void execute(Tuple tuple, BasicOutputCollector collector) &#123;</span><br><span class="line">        String word = tuple.getString(0);</span><br><span class="line">        Integer count = counts.get(word);</span><br><span class="line">        if (count == null)</span><br><span class="line">            count = 0;</span><br><span class="line">        count++;</span><br><span class="line">        counts.put(word, count);</span><br><span class="line">        System.out.println(&quot;==============[&quot; + word + &quot;]:&quot; + count);</span><br><span class="line">        collector.emit(new Values(word, count));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void declareOutputFields(OutputFieldsDeclarer declarer) &#123;</span><br><span class="line">        declarer.declare(new Fields(&quot;word&quot;, &quot;count&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.Topology<br>拓扑，storm里的关键性概念，本质上就是在storm里运行的一个实时应用程序，也就是此处要定义的主类。<br>具体看注释即可…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class SimpleTopology &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception&#123;</span><br><span class="line">        // 实例化TopologyBuilder类。</span><br><span class="line">        TopologyBuilder topologyBuilder = new TopologyBuilder();</span><br><span class="line">        // 设置喷发节点并分配并发数，该并发数将会控制该对象在集群中的线程数。</span><br><span class="line">        topologyBuilder.setSpout(&quot;spout&quot;, new RandomSentenceSpout(), 1);</span><br><span class="line">        // 设置数据处理节点并分配并发数。指定该节点接收喷发节点的策略为随机方式。</span><br><span class="line">        topologyBuilder.setBolt(&quot;split&quot;, new SplitSentenceBlot(), 3).shuffleGrouping(&quot;spout&quot;);</span><br><span class="line">        topologyBuilder.setBolt(&quot;count&quot;, new WordCountBlot(), 3).fieldsGrouping(&quot;split&quot;, new Fields(&quot;word&quot;));</span><br><span class="line">        String topologyName = &quot;word-count&quot;;</span><br><span class="line"></span><br><span class="line">        Config config = new Config();</span><br><span class="line">//        config.setDebug(true);</span><br><span class="line">        if (args != null &amp;&amp; args.length &gt; 0) &#123;</span><br><span class="line">            config.setNumWorkers(1);</span><br><span class="line">            StormSubmitter.submitTopology(args[0], config, topologyBuilder.createTopology());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 这里是本地模式下运行的启动代码。</span><br><span class="line">            config.setMaxTaskParallelism(1);</span><br><span class="line">            LocalCluster cluster = new LocalCluster();</span><br><span class="line">            cluster.submitTopology(topologyName, config, topologyBuilder.createTopology());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>storm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>storm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>elasticsearch java api使用，es java封装</title>
    <link href="/2017/04/20/elasticsearch%20java%20api%E4%BD%BF%E7%94%A8%EF%BC%8Ces%20java%E5%B0%81%E8%A3%85/"/>
    <url>/2017/04/20/elasticsearch%20java%20api%E4%BD%BF%E7%94%A8%EF%BC%8Ces%20java%E5%B0%81%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>最近需要使用到elasticsearch，封装了一些方法，在此记录下。</p><span id="more"></span><h3 id="1-创建索引"><a href="#1-创建索引" class="headerlink" title="1. 创建索引"></a>1. 创建索引</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public static boolean createIndex(String index) &#123;</span><br><span class="line">        if (!isIndexExist(index)) &#123;</span><br><span class="line">            LOG.info(&quot;Index is not exits!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        CreateIndexResponse indexresponse = client.admin().indices()</span><br><span class="line">                // 这个索引库的名称还必须不包含大写字母</span><br><span class="line">                .prepareCreate(index).execute().actionGet();</span><br><span class="line">        LOG.info(&quot;执行建立成功？&quot; + indexresponse.isAcknowledged());</span><br><span class="line">        return indexresponse.isAcknowledged();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-删除索引"><a href="#2-删除索引" class="headerlink" title="2. 删除索引"></a>2. 删除索引</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public static boolean deleteIndex(String index) &#123;</span><br><span class="line">        if (!isIndexExist(index)) &#123;</span><br><span class="line">            LOG.info(&quot;Index is not exits!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        DeleteIndexResponse dResponse = client.admin().indices().prepareDelete(index).execute().actionGet();</span><br><span class="line">        if (dResponse.isAcknowledged()) &#123;</span><br><span class="line">            LOG.info(&quot;delete index &quot; + index + &quot;  successfully!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LOG.info(&quot;Fail to delete index &quot; + index);</span><br><span class="line">        &#125;</span><br><span class="line">        return dResponse.isAcknowledged();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-判断索引是否存在"><a href="#3-判断索引是否存在" class="headerlink" title="3. 判断索引是否存在"></a>3. 判断索引是否存在</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public static boolean isIndexExist(String index) &#123;</span><br><span class="line">        IndicesExistsResponse inExistsResponse = client.admin().indices().exists(new IndicesExistsRequest(index))</span><br><span class="line">                .actionGet();</span><br><span class="line">        if (inExistsResponse.isExists()) &#123;</span><br><span class="line">            LOG.info(&quot;Index [&quot; + index + &quot;] is exist!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LOG.info(&quot;Index [&quot; + index + &quot;] is not exist!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return inExistsResponse.isExists();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-通过文档id获得文档内容"><a href="#4-通过文档id获得文档内容" class="headerlink" title="4.通过文档id获得文档内容"></a>4.通过文档id获得文档内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public static Map&lt;String, Object&gt; getSourceById(String index, String type, String id, String fields) &#123;</span><br><span class="line">//fields是需要获得的列，下同</span><br><span class="line">        try &#123;</span><br><span class="line">            GetResponse getResponse = client.prepareGet(index, type, id).setFetchSource(fields.split(&quot;,&quot;), null).get();</span><br><span class="line">            LOG.info(getResponse.getSourceAsString());</span><br><span class="line">            return getResponse.getSource();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-求索引库文档总数"><a href="#5-求索引库文档总数" class="headerlink" title="5.求索引库文档总数"></a>5.求索引库文档总数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 求索引库文档总数</span><br><span class="line">    *</span><br><span class="line">    * @param indices 传入 _index ( + _type )</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">public static long docCount(String... indices) &#123;</span><br><span class="line">       try &#123;</span><br><span class="line">           return client.prepareCount(indices).get().getCount();</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       return 0l;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="6-分组统计"><a href="#6-分组统计" class="headerlink" title="6.分组统计"></a>6.分组统计</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 分组统计</span><br><span class="line">    * @param index         索引名称</span><br><span class="line">    * @param type          类型名称，可多个，逗号分隔</span><br><span class="line">    * @param groupCol      分组聚合字段，可多个，逗号分隔</span><br><span class="line">    * @param distinctCol   去重统计字段</span><br><span class="line">    * @param sumCol        求和字段</span><br><span class="line">    * @param matchStr      过滤条件，xxx=1，可多个，逗号分隔</span><br><span class="line">    * @param size          size大小</span><br><span class="line">    * @param startTime     开始时间戳</span><br><span class="line">    * @param endTime       结束时间戳</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">public static List&lt;Bucket&gt; subCount(String index, String type, String groupCol, String distinctCol, String sumCol, String matchStr, int size, long startTime, long endTime) &#123;</span><br><span class="line">       SearchRequestBuilder searchRequest = client.prepareSearch(index);</span><br><span class="line">       if (StringUtils.isNotEmpty(type)) &#123;</span><br><span class="line">           searchRequest.setTypes(type.split(&quot;,&quot;));</span><br><span class="line">       &#125;</span><br><span class="line">       BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();</span><br><span class="line">       boolQueryBuilder.must(</span><br><span class="line">               QueryBuilders.rangeQuery(&quot;processTime&quot;)</span><br><span class="line">                       .format(&quot;epoch_millis&quot;)</span><br><span class="line">                       .from(startTime)</span><br><span class="line">                       .to(endTime)</span><br><span class="line">                       .includeLower(true)</span><br><span class="line">                       .includeUpper(true));</span><br><span class="line">       if (StringUtils.isNotEmpty(matchStr)) &#123;</span><br><span class="line">           for (String s : matchStr.split(&quot;,&quot;)) &#123;</span><br><span class="line">               boolQueryBuilder.must(QueryBuilders.matchQuery(s.split(&quot;=&quot;)[0], s.split(&quot;=&quot;)[1]));</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       AggregationBuilder tb = AggregationBuilders.terms(&quot;group_name&quot;).field(groupCol);</span><br><span class="line">       if (StringUtils.isNotEmpty(distinctCol))&#123;</span><br><span class="line">           tb.subAggregation(AggregationBuilders.cardinality(&quot;distinct&quot;).field(distinctCol));</span><br><span class="line">       &#125; else if (StringUtils.isNotEmpty(sumCol))&#123;</span><br><span class="line">           tb.subAggregation(AggregationBuilders.sum(&quot;sum&quot;).field(sumCol));</span><br><span class="line">       &#125;</span><br><span class="line">       searchRequest.setQuery(boolQueryBuilder)</span><br><span class="line">               .setSearchType(SearchType.QUERY_THEN_FETCH)</span><br><span class="line">               .addAggregation(tb);</span><br><span class="line">       List&lt;Bucket&gt; buckets = null;</span><br><span class="line">       try &#123;</span><br><span class="line">           SearchResponse searchResponse = searchRequest.execute().actionGet();</span><br><span class="line">           Terms terms = searchResponse.getAggregations().get(&quot;group_name&quot;);</span><br><span class="line">           buckets = terms.getBuckets();</span><br><span class="line">           for (Bucket bt : buckets) &#123;</span><br><span class="line">               LOG.info(bt.getKeyAsString() + &quot; :: &quot; + bt.getDocCount());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       return buckets;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="7-根据条件获得文档列表"><a href="#7-根据条件获得文档列表" class="headerlink" title="7.根据条件获得文档列表"></a>7.根据条件获得文档列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">   /**</span><br><span class="line">     *</span><br><span class="line">     * @param index     索引名称</span><br><span class="line">     * @param type      类型名称,可传入多个type逗号分隔</span><br><span class="line">     * @param startTime 开始时间</span><br><span class="line">     * @param endTime   结束时间</span><br><span class="line">     * @param size      文档大小限制</span><br><span class="line">     * @param fields    需要的字段，逗号分隔（缺省为全部字段）</span><br><span class="line">     * @param matchStr  过滤条件（xxx=111,aaa=222）</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getDocs(String index, String type, long startTime, long endTime, int size, String fields, String matchStr) &#123;</span><br><span class="line">        SearchRequestBuilder searchRequest = client.prepareSearch(index);</span><br><span class="line">        if (StringUtils.isNotEmpty(type)) &#123;</span><br><span class="line">            searchRequest.setTypes(type.split(&quot;,&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        BoolQueryBuilder boolQuery = QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.must(</span><br><span class="line">                QueryBuilders.rangeQuery(&quot;processTime&quot;)</span><br><span class="line">                        .format(&quot;epoch_millis&quot;)</span><br><span class="line">                        .from(startTime)</span><br><span class="line">                        .to(endTime)</span><br><span class="line">                        .includeLower(true)</span><br><span class="line">                        .includeUpper(true));</span><br><span class="line"></span><br><span class="line">        if (StringUtils.isNotEmpty(matchStr)) &#123;</span><br><span class="line">            for (String s : matchStr.split(&quot;,&quot;)) &#123;</span><br><span class="line">                String[] ss = s.split(&quot;=&quot;);</span><br><span class="line">                if(ss.length &gt; 1)&#123;</span><br><span class="line">                    boolQuery.must(QueryBuilders.matchQuery(s.split(&quot;=&quot;)[0], s.split(&quot;=&quot;)[1]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        searchRequest.setQuery(boolQuery);</span><br><span class="line">        if (StringUtils.isNotEmpty(fields)) &#123;</span><br><span class="line">            searchRequest.setFetchSource(fields.split(&quot;,&quot;), null);</span><br><span class="line">        &#125;</span><br><span class="line">        searchRequest.setFetchSource(true);</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; sourceList = null;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">//System.out.println(searchRequest);</span><br><span class="line">            SearchResponse response = searchRequest</span><br><span class="line">                    .addSort(&quot;timestamp&quot;, SortOrder.DESC)</span><br><span class="line">                    .setSize(size)</span><br><span class="line">                    .execute()</span><br><span class="line">                    .actionGet();</span><br><span class="line">            //System.out.println(response.toString());</span><br><span class="line">            SearchHits shs = response.getHits();</span><br><span class="line">            sourceList = new ArrayList&lt;&gt;();</span><br><span class="line">            for (SearchHit sh : shs) &#123;</span><br><span class="line">                sh.getSource().put(&quot;id&quot;, sh.getId());</span><br><span class="line">                sourceList.add(sh.getSource());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        LOG.info(&quot;GET DOCS SIZE: &quot; + sourceList.size());</span><br><span class="line">        return sourceList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="8-获取分页数据"><a href="#8-获取分页数据" class="headerlink" title="8.获取分页数据"></a>8.获取分页数据</h3><p>稍复杂化了，构建了个EsPage。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">public class EsPage &#123;</span><br><span class="line"></span><br><span class="line">    // 指定的或是页面参数</span><br><span class="line">    private int currentPage; // 当前页</span><br><span class="line">    private int pageSize; // 每页显示多少条</span><br><span class="line"></span><br><span class="line">    // 查询es结果</span><br><span class="line">    private int recordCount; // 总记录数</span><br><span class="line">    private List&lt;Map&lt;String,Object&gt;&gt; recordList; // 本页的数据列表</span><br><span class="line"></span><br><span class="line">    // 计算</span><br><span class="line">    private int pageCount; // 总页数</span><br><span class="line">    private int beginPageIndex; // 页码列表的开始索引（包含）</span><br><span class="line">    private int endPageIndex; // 页码列表的结束索引（包含）</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 只接受前4个必要的属性，会自动的计算出其他3个属性的值</span><br><span class="line">     *</span><br><span class="line">     * @param currentPage</span><br><span class="line">     * @param pageSize</span><br><span class="line">     * @param recordCount</span><br><span class="line">     * @param recordList</span><br><span class="line">     */</span><br><span class="line">    public EsPage(int currentPage, int pageSize, int recordCount, List&lt;Map&lt;String,Object&gt;&gt; recordList) &#123;</span><br><span class="line">        this.currentPage = currentPage;</span><br><span class="line">        this.pageSize = pageSize;</span><br><span class="line">        this.recordCount = recordCount;</span><br><span class="line">        this.recordList = recordList;</span><br><span class="line"></span><br><span class="line">        // 计算总页码</span><br><span class="line">        pageCount = (recordCount + pageSize - 1) / pageSize;</span><br><span class="line"></span><br><span class="line">        // 计算 beginPageIndex 和 endPageIndex</span><br><span class="line">        // &gt;&gt; 总页数不多于10页，则全部显示</span><br><span class="line">        if (pageCount &lt;= 10) &#123;</span><br><span class="line">            beginPageIndex = 1;</span><br><span class="line">            endPageIndex = pageCount;</span><br><span class="line">        &#125;</span><br><span class="line">        // &gt;&gt; 总页数多于10页，则显示当前页附近的共10个页码</span><br><span class="line">        else &#123;</span><br><span class="line">            // 当前页附近的共10个页码（前4个 + 当前页 + 后5个）</span><br><span class="line">            beginPageIndex = currentPage - 4;</span><br><span class="line">            endPageIndex = currentPage + 5;</span><br><span class="line">            // 当前面的页码不足4个时，则显示前10个页码</span><br><span class="line">            if (beginPageIndex &lt; 1) &#123;</span><br><span class="line">                beginPageIndex = 1;</span><br><span class="line">                endPageIndex = 10;</span><br><span class="line">            &#125;</span><br><span class="line">            // 当后面的页码不足5个时，则显示后10个页码</span><br><span class="line">            if (endPageIndex &gt; pageCount) &#123;</span><br><span class="line">                endPageIndex = pageCount;</span><br><span class="line">                beginPageIndex = pageCount - 10 + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //GET、SET方法...</span><br></pre></td></tr></table></figure><p>获取分页数据方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">    /**</span><br><span class="line">     * 获取分页数据</span><br><span class="line">     *</span><br><span class="line">     * @param index</span><br><span class="line">     * @param type</span><br><span class="line">     * @param currentPage</span><br><span class="line">     * @param pageSize</span><br><span class="line">     * @param startTime</span><br><span class="line">     * @param endTime</span><br><span class="line">     * @param fields</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static EsPage getDocsPage(String index, String type, int currentPage, int pageSize, long startTime, long endTime, String fields) throws Exception &#123;</span><br><span class="line">        SearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);</span><br><span class="line">        if (StringUtils.isNotEmpty(type)) &#123;</span><br><span class="line">            searchRequestBuilder.setTypes(type.split(&quot;,&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        searchRequestBuilder.setSearchType(SearchType.QUERY_THEN_FETCH);</span><br><span class="line">        if (StringUtils.isNotEmpty(fields)) &#123;</span><br><span class="line">            searchRequestBuilder.setFetchSource(fields.split(&quot;,&quot;), null);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        BoolQueryBuilder boolQuery = QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.must(</span><br><span class="line">                QueryBuilders.rangeQuery(&quot;processTime&quot;)</span><br><span class="line">                        .format(&quot;epoch_millis&quot;)</span><br><span class="line">                        .from(startTime)</span><br><span class="line">                        .to(endTime)</span><br><span class="line">                        .includeLower(true)</span><br><span class="line">                        .includeUpper(true));</span><br><span class="line"></span><br><span class="line">        searchRequestBuilder.setQuery(QueryBuilders.matchAllQuery());</span><br><span class="line">        searchRequestBuilder.setQuery(boolQuery);</span><br><span class="line"></span><br><span class="line">        // 分页应用</span><br><span class="line">        searchRequestBuilder.setFrom(currentPage).setSize(pageSize);</span><br><span class="line"></span><br><span class="line">        // 设置是否按查询匹配度排序</span><br><span class="line">        searchRequestBuilder.setExplain(true);</span><br><span class="line">        SearchHits searchHits = null;</span><br><span class="line">        ArrayList&lt;Map&lt;String, Object&gt;&gt; sourceList = null;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">//        System.out.println(searchRequestBuilder);</span><br><span class="line">            // 执行搜索,返回搜索响应信息</span><br><span class="line">            SearchResponse response = searchRequestBuilder.execute().actionGet();</span><br><span class="line">            searchHits = response.getHits();</span><br><span class="line">            if (searchHits.totalHits() == 0) return null;</span><br><span class="line"></span><br><span class="line">            // 解析对象</span><br><span class="line">            sourceList = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">            SearchHit[] hits = searchHits.hits();</span><br><span class="line">            for (SearchHit sh : hits) &#123;</span><br><span class="line">                sh.getSource().put(&quot;id&quot;, sh.getId());</span><br><span class="line">                sourceList.add(sh.getSource());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return new EsPage(currentPage, pageSize, (int) searchHits.totalHits(), sourceList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static Long getStartTime() &#123;</span><br><span class="line">        Calendar todayStart = Calendar.getInstance();</span><br><span class="line">        todayStart.set(Calendar.HOUR, 0);</span><br><span class="line">        todayStart.set(Calendar.MINUTE, 0);</span><br><span class="line">        todayStart.set(Calendar.SECOND, 0);</span><br><span class="line">        todayStart.set(Calendar.MILLISECOND, 0);</span><br><span class="line">        return todayStart.getTime().getTime();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="9-es日期直方图分组统计"><a href="#9-es日期直方图分组统计" class="headerlink" title="9.es日期直方图分组统计"></a>9.es日期直方图分组统计</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 日期直方图分组统计</span><br><span class="line">     * @param index</span><br><span class="line">     * @param type</span><br><span class="line">     * @param histogram 间隔时间，格式：1s/1m/1h/1d/1w/1M/1q/1y,详情见 DateHistogramInterval</span><br><span class="line">     * @param groupCol 目前解析只支持四层分组统计结果，可增加</span><br><span class="line">     * @param match 过滤字段，Map格式，可传入多个</span><br><span class="line">     * @param size</span><br><span class="line">     * @param startTime</span><br><span class="line">     * @param endTime</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static List&lt;Map&lt;String, Object&gt;&gt; getHistogramSubCountList(String index, String type, String histogram, String groupCol, Map&lt;String, Object&gt; match, int size, long startTime, long endTime)&#123;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; listMap = new LinkedList&lt;&gt;();</span><br><span class="line">        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">        SearchRequestBuilder searchRequest = client.prepareSearch(index);</span><br><span class="line">        if (StringUtils.isNotEmpty(type)) &#123;</span><br><span class="line">            searchRequest.setTypes(type.split(&quot;,&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();</span><br><span class="line">        boolQueryBuilder.must(</span><br><span class="line">                QueryBuilders.rangeQuery(&quot;@timestamp&quot;)</span><br><span class="line">                        .from(startTime)</span><br><span class="line">                        .to(endTime)</span><br><span class="line">                        .includeLower(true)</span><br><span class="line">                        .includeUpper(true));</span><br><span class="line">        if (match != null) &#123;</span><br><span class="line">            for (Map.Entry&lt;String, Object&gt; entry : match.entrySet()) &#123;</span><br><span class="line">                String key = entry.getKey();</span><br><span class="line">                Object value = entry.getValue();</span><br><span class="line">                if (value != null &amp;&amp; !value.equals(&quot;&quot;))</span><br><span class="line">                    boolQueryBuilder.must(QueryBuilders.termsQuery(key, value));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DateHistogramBuilder db = AggregationBuilders.dateHistogram(&quot;ts&quot;).field(&quot;processTime&quot;).interval(new DateHistogramInterval(histogram));</span><br><span class="line"></span><br><span class="line">        String[] groupCols = groupCol.split(&quot;,&quot;);</span><br><span class="line">        AggregationBuilder tb = null;</span><br><span class="line">        AggregationBuilder stb = null;</span><br><span class="line">        for (int i = 0; i &lt; groupCols.length; i++) &#123;</span><br><span class="line">            if (tb == null) &#123;</span><br><span class="line">                tb = AggregationBuilders.terms(i + &quot;&quot;).field(groupCols[i]).size(size);</span><br><span class="line">                stb = tb;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                AggregationBuilder ntb = AggregationBuilders.terms(i + &quot;&quot;).field(groupCols[i]).size(size);</span><br><span class="line">                stb.subAggregation(ntb);</span><br><span class="line">                stb = ntb;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        db.subAggregation(tb);</span><br><span class="line"></span><br><span class="line">        searchRequest.setQuery(boolQueryBuilder)</span><br><span class="line">                .setSearchType(SearchType.QUERY_THEN_FETCH)</span><br><span class="line">                .addAggregation(db);</span><br><span class="line">        SearchResponse searchResponse = searchRequest.execute().actionGet();</span><br><span class="line">        LOG.debug(&quot;searchRequest = &quot; + searchRequest);</span><br><span class="line">        LOG.debug(&quot;searchResponse = &quot; + searchResponse);</span><br><span class="line">        InternalHistogram ts = searchResponse.getAggregations().get(&quot;ts&quot;);</span><br><span class="line">        List&lt;InternalHistogram.Bucket&gt; buckets = ts.getBuckets();</span><br><span class="line">        for (InternalHistogram.Bucket bt : buckets) &#123;</span><br><span class="line">            String processTime = bt.getKeyAsString();</span><br><span class="line">            Terms terms = bt.getAggregations().get(&quot;0&quot;);</span><br><span class="line">            for (Bucket bucket : terms.getBuckets()) &#123;</span><br><span class="line">                String srcAddress = (String) bucket.getKey();</span><br><span class="line">                if(groupCols.length == 4) &#123;</span><br><span class="line">                    Terms terms1 = bucket.getAggregations().get(&quot;1&quot;);</span><br><span class="line">                    for (Bucket bucket1 : terms1.getBuckets()) &#123;</span><br><span class="line">                        Terms terms2 = bucket1.getAggregations().get(&quot;2&quot;);</span><br><span class="line">                        for (Bucket bucket2 : terms2.getBuckets()) &#123;</span><br><span class="line">                            Terms terms3 = bucket2.getAggregations().get(&quot;3&quot;);</span><br><span class="line">                            for (Bucket bucket3 : terms3.getBuckets()) &#123;</span><br><span class="line">                                Long docCount = bucket3.getDocCount();</span><br><span class="line">                                Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">                                map.put(&quot;processTime&quot;, processTime);</span><br><span class="line">                                map.put(groupCols[0], bucket.getKey());</span><br><span class="line">                                map.put(groupCols[1], bucket1.getKey());</span><br><span class="line">                                map.put(groupCols[2], bucket2.getKey());</span><br><span class="line">                                map.put(groupCols[3], bucket3.getKey());</span><br><span class="line">                                map.put(&quot;docCount&quot;, docCount.intValue());</span><br><span class="line">                                LOG.debug(map.toString());</span><br><span class="line">                                listMap.add(map);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if(groupCols.length == 3) &#123;</span><br><span class="line">                    Terms terms1 = bucket.getAggregations().get(&quot;1&quot;);</span><br><span class="line">                    for (Bucket bucket1 : terms1.getBuckets()) &#123;</span><br><span class="line">                        Terms terms2 = bucket1.getAggregations().get(&quot;2&quot;);</span><br><span class="line">                        for (Bucket bucket2 : terms2.getBuckets()) &#123;</span><br><span class="line">                            Long docCount = bucket2.getDocCount();</span><br><span class="line">                            Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">                            map.put(&quot;processTime&quot;, processTime);</span><br><span class="line">                            map.put(groupCols[0], bucket.getKey());</span><br><span class="line">                            map.put(groupCols[1], bucket1.getKey());</span><br><span class="line">                            map.put(groupCols[2], bucket2.getKey());</span><br><span class="line">                            map.put(&quot;docCount&quot;, docCount.intValue());</span><br><span class="line">                            LOG.debug(map.toString());</span><br><span class="line">                            listMap.add(map);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (groupCols.length == 2) &#123;</span><br><span class="line">                    Terms terms1 = bucket.getAggregations().get(&quot;1&quot;);</span><br><span class="line">                    for (Bucket bucket1 : terms1.getBuckets()) &#123;</span><br><span class="line">                        Long docCount = bucket1.getDocCount();</span><br><span class="line">                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">                        map.put(&quot;processTime&quot;, processTime);</span><br><span class="line">                        map.put(groupCols[0], bucket.getKey());</span><br><span class="line">                        map.put(groupCols[1], bucket1.getKey());</span><br><span class="line">                        map.put(&quot;docCount&quot;, docCount.intValue());</span><br><span class="line">                        LOG.debug(map.toString());</span><br><span class="line">                        listMap.add(map);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    Long docCount = bucket.getDocCount();</span><br><span class="line">                    Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">                    map.put(&quot;processTime&quot;, processTime);</span><br><span class="line">                    map.put(groupCols[0], bucket.getKey());</span><br><span class="line">                    map.put(&quot;docCount&quot;, docCount.intValue());</span><br><span class="line">                    listMap.add(map);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return listMap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java elasticsearch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HashMap里的equals实现</title>
    <link href="/2017/04/20/HashMap%E9%87%8C%E7%9A%84equals%E5%AE%9E%E7%8E%B0/"/>
    <url>/2017/04/20/HashMap%E9%87%8C%E7%9A%84equals%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>今天遇到一个问题，需要对<code>List&lt;Map&gt;</code>对象里的Map去重，然后想到是否可以使用Set去重，试了下是可以的，但是仔细想想，发现明明塞进Set的时候是新创建的Map对象，但是Set却认为是重复的塞不进去，想到应该是HashMap的equals里逻辑，遂看源码。</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> public boolean equals(Object o) &#123;</span><br><span class="line">//1.同一对象，对象相等</span><br><span class="line">        if (o == this)</span><br><span class="line">            return true;</span><br><span class="line">//2.类型不是Map，对象不相等</span><br><span class="line">        if (!(o instanceof Map))</span><br><span class="line">            return false;</span><br><span class="line">        Map&lt;?,?&gt; m = (Map&lt;?,?&gt;) o;</span><br><span class="line">//3.size不等，对象不相等</span><br><span class="line">        if (m.size() != size())</span><br><span class="line">            return false;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            Iterator&lt;Entry&lt;K,V&gt;&gt; i = entrySet().iterator();</span><br><span class="line">            while (i.hasNext()) &#123;</span><br><span class="line">                Entry&lt;K,V&gt; e = i.next();</span><br><span class="line">                K key = e.getKey();</span><br><span class="line">                V value = e.getValue();</span><br><span class="line">//4.如果value为空，对应的对象value不为空或者根本没有这个key，对象不相等</span><br><span class="line">                if (value == null) &#123;</span><br><span class="line">                    if (!(m.get(key)==null &amp;&amp; m.containsKey(key)))</span><br><span class="line">                        return false;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line"> //如果value不为空，对应map相同key的value值是否相等，不等则对象不相等</span><br><span class="line">                    if (!value.equals(m.get(key)))</span><br><span class="line">                        return false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (ClassCastException unused) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125; catch (NullPointerException unused) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>上面我注释了下，总结下：<br>1.同一对象，相等；<br>2.size相等，且对应key的value值完全相同，相等。</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hashmap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>matplotlib使用记录</title>
    <link href="/2017/04/01/matplotlib%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2017/04/01/matplotlib%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>工作中需要使用python的matplotlib包作图，记录了一些需要注意的坑。</p></blockquote><span id="more"></span><h2 id="1-Linux服务器没有GUI的情况下使用matplotlib绘图"><a href="#1-Linux服务器没有GUI的情况下使用matplotlib绘图" class="headerlink" title="1.Linux服务器没有GUI的情况下使用matplotlib绘图"></a>1.Linux服务器没有GUI的情况下使用matplotlib绘图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line">mpl.use(<span class="string">&#x27;Agg&#x27;</span>)</span><br></pre></td></tr></table></figure><p>必须添加在import matplotlib.pyplot之前</p><h2 id="2-解决matplotlib中文乱码"><a href="#2-解决matplotlib中文乱码" class="headerlink" title="2.解决matplotlib中文乱码"></a>2.解决matplotlib中文乱码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimSun&#x27;</span>, <span class="string">&#x27;SimHei&#x27;</span>, <span class="string">&#x27;SimKai&#x27;</span>, <span class="string">&#x27;PingFang SC&#x27;</span>]  </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.serif&#x27;</span>] = [<span class="string">&#x27;SimSun&#x27;</span>, <span class="string">&#x27;SimHei&#x27;</span>, <span class="string">&#x27;SimKai&#x27;</span>, <span class="string">&#x27;PingFang SC&#x27;</span>] </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;sans-serif&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="3-解决matplotlib保存图像是负号’-‘显示为方块的问题"><a href="#3-解决matplotlib保存图像是负号’-‘显示为方块的问题" class="headerlink" title="3.解决matplotlib保存图像是负号’-‘显示为方块的问题"></a>3.解决matplotlib保存图像是负号’-‘显示为方块的问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="4-matplotlib保存图片时不截取图表内容"><a href="#4-matplotlib保存图片时不截取图表内容" class="headerlink" title="4. matplotlib保存图片时不截取图表内容"></a>4. matplotlib保存图片时不截取图表内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(<span class="string">&quot;xxx.png&quot;</span>, <span class="built_in">format</span>=<span class="string">&#x27;png&#x27;</span>, dpi=<span class="number">100</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>bbox_inches&#x3D;’tight’可控制所画图表被完整保存下来，而不被截取掉。</p></blockquote><p>使用前<br><img src="http://ongpr9izg.bkt.clouddn.com/2017-04-01-024436.jpg"><br>使用后<br><img src="http://ongpr9izg.bkt.clouddn.com/2017-04-01-024349.jpg"></p><h2 id="5-matplotlib控制图例位置"><a href="#5-matplotlib控制图例位置" class="headerlink" title="5.matplotlib控制图例位置"></a>5.matplotlib控制图例位置</h2><blockquote><p>plt.legend(bbox_to_anchor&#x3D;(0.9, 0.9), fontsize&#x3D;”x-small”)</p></blockquote><h2 id="6-控制图像边缘留白量"><a href="#6-控制图像边缘留白量" class="headerlink" title="6.控制图像边缘留白量"></a>6.控制图像边缘留白量</h2><blockquote><p>plt.subplots_adjust(top&#x3D;0.9, right&#x3D;0.85)</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python matplotlib</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hive的几种存储引擎，以及hive的SQL优化器</title>
    <link href="/2016/12/28/hive%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%EF%BC%8C%E4%BB%A5%E5%8F%8Ahive%E7%9A%84SQL%E4%BC%98%E5%8C%96%E5%99%A8/"/>
    <url>/2016/12/28/hive%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%EF%BC%8C%E4%BB%A5%E5%8F%8Ahive%E7%9A%84SQL%E4%BC%98%E5%8C%96%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>hive的几种存储引擎，以及hive的SQL优化器？<br>存储方面：textfile、orcfile、rcfile、parquet、sequencefile<br>执行引擎：mr、tez、spark<br>词法解析：  calcite、cbo<br>优化：mapjoin<br>自定义函数：udf<br>sql语法或自带函数<br>新特性：Vectorized Query Execution、Hybrid Hybrid Grace Hash Join、LLAP</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>hive</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>sql 同一列的多行内容拼接成字符串</title>
    <link href="/2016/12/28/sql%20%E5%90%8C%E4%B8%80%E5%88%97%E7%9A%84%E5%A4%9A%E8%A1%8C%E5%86%85%E5%AE%B9%E6%8B%BC%E6%8E%A5%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <url>/2016/12/28/sql%20%E5%90%8C%E4%B8%80%E5%88%97%E7%9A%84%E5%A4%9A%E8%A1%8C%E5%86%85%E5%AE%B9%E6%8B%BC%E6%8E%A5%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">L4.plan_id</span><br><span class="line">,MAX(SUBSTR(L4.分组内容,2)) display_theme</span><br><span class="line">FROM(</span><br><span class="line">        SELECT</span><br><span class="line">        L3.plan_id</span><br><span class="line">        ,SYS_CONNECT_BY_PATH(L3.theme_name,&#x27;；&#x27;) AS 分组内容</span><br><span class="line">        FROM(</span><br><span class="line">                SELECT</span><br><span class="line">                L2.plan_id</span><br><span class="line">                ,L2.theme_name</span><br><span class="line">                ,L2.plan_id||L2.分组内编号 AS 分组字段加编号,L2.plan_id||(L2.分组内编号-1) AS 上级分组字段加编号</span><br><span class="line">                FROM(</span><br><span class="line">                        SELECT</span><br><span class="line">                        L1.plan_id   -- 分组依据</span><br><span class="line">                        ,L1.theme_name    -- 同一列中 要合并的不同行 的值</span><br><span class="line">                        ,ROW_NUMBER() OVER (PARTITION BY L1.plan_id ORDER BY L1.theme_name ASC) 分组内编号</span><br><span class="line">                        FROM t_display_config_theme L1</span><br><span class="line">                ) L2</span><br><span class="line">        ) L3</span><br><span class="line">        START WITH L3.上级分组字段加编号 LIKE &#x27;%0&#x27;</span><br><span class="line">        CONNECT BY PRIOR L3.分组字段加编号=L3.上级分组字段加编号</span><br><span class="line">) L4</span><br><span class="line">GROUP BY L4.plan_id</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>mysql oracle</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>查看mysql 32位64位</title>
    <link href="/2016/12/28/%E6%9F%A5%E7%9C%8Bmysql%2032%E4%BD%8D64%E4%BD%8D/"/>
    <url>/2016/12/28/%E6%9F%A5%E7%9C%8Bmysql%2032%E4%BD%8D64%E4%BD%8D/</url>
    
    <content type="html"><![CDATA[<p>show variables like ‘%version_%’; </p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【oracle】获得两个日期之间的所有日期</title>
    <link href="/2016/12/28/%E3%80%90oracle%E3%80%91%E8%8E%B7%E5%BE%97%E4%B8%A4%E4%B8%AA%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E7%9A%84%E6%89%80%E6%9C%89%E6%97%A5%E6%9C%9F/"/>
    <url>/2016/12/28/%E3%80%90oracle%E3%80%91%E8%8E%B7%E5%BE%97%E4%B8%A4%E4%B8%AA%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E7%9A%84%E6%89%80%E6%9C%89%E6%97%A5%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<p>SELECT A.REMARK_NAME,<br>       A.REMARK_START_DATE,<br>       A.REMARK_END_DATE,<br>       A.REMARK_START_DATE + B.DIS - 1 H<br>  FROM B_REMARK_DETAIL A,<br>       (SELECT ROWNUM DIS<br>          FROM (SELECT MAX(REMARK_END_DATE - REMARK_START_DATE) + 1 GAP<br>                  FROM B_REMARK_DETAIL)<br>        CONNECT BY ROWNUM &lt;&#x3D; GAP) B<br>WHERE A.REMARK_END_DATE &gt;&#x3D; A.REMARK_START_DATE + B.DIS - 1<br>ORDER BY H</p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>在oracle中varchar和varchar2有什么区别？</title>
    <link href="/2016/12/28/%E5%9C%A8oracle%E4%B8%ADvarchar%E5%92%8Cvarchar2%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
    <url>/2016/12/28/%E5%9C%A8oracle%E4%B8%ADvarchar%E5%92%8Cvarchar2%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>1.varchar2把所有字符都占两字节处理(一般情况下)，varchar只对汉字和全角等字符占两字节，数字，英文字符等都是一个字节；<br>2.VARCHAR2把空串等同于null处理，而varchar仍按照空串处理；<br>3.VARCHAR2字符要用几个字节存储，要看数据库使用的字符集，<br>大部分情况下建议使用varchar2类型，可以保证更好的兼容性搜索。</p><span id="more"></span>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Oracle】LGWR</title>
    <link href="/2016/12/28/%E3%80%90Oracle%E3%80%91LGWR/"/>
    <url>/2016/12/28/%E3%80%90Oracle%E3%80%91LGWR/</url>
    
    <content type="html"><![CDATA[<p>LGWR，是Log Writer的缩写，也是一种后台进程。主要负责将日志缓冲内容写到磁盘的在线重做日志文件或组中。DBWn将dirty块写到磁盘之前，所有与buffer修改相关的redo log都需要由LGWR写入磁盘的在线重做日志文件(组)，如果未写完，那么DBWn会等待LGWR，也会产生一些相应的等待事件(例如：log file prarllel write，后面单独作为话题再聊)。总之，这样做的目的就是为了当crash时，可以有恢复之前操作的可能，也是Oracle在保持交易完整性方面的一个机制。</p><span id="more"></span><p>相关知识点：</p><p>1、LGWR写日志是顺序写，这就解释了一个Orace Server只能有一个LGWR进程，不能像DBWR那样可以有多个，否则就无法保证顺序写的机制，而且可能会产生锁的问题。</p><p>2、用户进程每次修改内存数据块时，都会在日志缓冲区(redo buffer)中构造一个相应的重做条目(redo entry)，它记录了被修改数据块修改之前和之后的值。</p><p>3、LGWR将redo entry写入联机日志文件的情况可以概括为两种：后台写和同步写，或者说异步写和同步写。</p><p>后台写的条件：</p><p>(1)、每3秒LGWR启动一次。</p><p>(2)、DBWR启动时如果发现dirty块对应的redo entry还没写入联机日志文件，则DBWR触发LGWR进程并等待LGWR完成后继续。</p><p>(3)、redo entry数量达到整个log buffer的1&#x2F;3时，触发LGWR。</p><p>(4)、redo entry的数量达到1M。</p><p>同步写的条件：</p><p>COMMIT。即执行COMMIT时，必须等待log buffer进行flushing操作(可能产生log file sync等待事件)，写入磁盘中的联机日志文件。但一般上述1&#x2F;3满的条件触发LGWR，几乎强制LGWR实时写，因此当需要执行COMMIT，可能没有任何redo entry需要写入了。</p><p>4、3秒触发LGWR的规则，事实上，这个超时是DBWR的，但是因为LGWR总在DBWR调用之前执行，因此效果上也相当于LGWR的超时是3秒即调用。</p>]]></content>
    
    
    <categories>
      
      <category>oracle</category>
      
    </categories>
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java8下spark-streaming结合kafka编程（spark 2.0 &amp; kafka 0.10）</title>
    <link href="/2016/12/26/java8%E4%B8%8Bspark-streaming%E7%BB%93%E5%90%88kafka%E7%BC%96%E7%A8%8B%EF%BC%88spark%202.0%20&amp;%20kafka%200.10%EF%BC%89/"/>
    <url>/2016/12/26/java8%E4%B8%8Bspark-streaming%E7%BB%93%E5%90%88kafka%E7%BC%96%E7%A8%8B%EF%BC%88spark%202.0%20&amp;%20kafka%200.10%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>前面有说道<a href="http://blog.csdn.net/jacklin929/article/details/53689365">spark-streaming的简单demo</a>，也有说到<a href="http://blog.csdn.net/jacklin929/article/details/53767622">kafka成功跑通的例子</a>，这里就结合二者，也是常用的使用之一。</p><span id="more"></span><p>1.相关组件版本<br>首先确认版本，因为跟之前的版本有些不一样，所以才有必要记录下，另外仍然没有使用scala,使用java8,spark 2.0.0,kafka 0.10。</p><p>2.引入maven包<br>网上找了一些结合的例子，但是跟我当前版本不一样，所以根本就成功不了，所以探究了下，列出引入包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-streaming-kafka-0-10_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>网上能找到的不带kafka版本号的包最新是1.6.3，我试过，已经无法在spark2下成功运行了，所以找到的是对应kafka0.10的版本，注意spark2.0的scala版本已经是2.11，所以包括之前必须后面跟2.11，表示scala版本。</p><p>3.SparkSteamingKafka类<br>需要注意的是引入的包路径是org.apache.spark.streaming.kafka010.xxx，所以这里把import也放进来了。其他直接看注释。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecord;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.common.TopicPartition;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.SparkConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.JavaSparkContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.Durations;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.api.java.JavaInputDStream;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.api.java.JavaPairDStream;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.api.java.JavaStreamingContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.kafka010.ConsumerStrategies;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.kafka010.KafkaUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.kafka010.LocationStrategies;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.Tuple2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SparkSteamingKafka</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">brokers</span> <span class="operator">=</span> <span class="string">&quot;master2:6667&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">topics</span> <span class="operator">=</span> <span class="string">&quot;topic1&quot;</span>;</span><br><span class="line"><span class="type">SparkConf</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SparkConf</span>().setMaster(<span class="string">&quot;local[2]&quot;</span>).setAppName(<span class="string">&quot;streaming word count&quot;</span>);</span><br><span class="line"><span class="type">JavaSparkContext</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JavaSparkContext</span>(conf);</span><br><span class="line">sc.setLogLevel(<span class="string">&quot;WARN&quot;</span>);</span><br><span class="line"><span class="type">JavaStreamingContext</span> <span class="variable">ssc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JavaStreamingContext</span>(sc, Durations.seconds(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; topicsSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(Arrays.asList(topics.split(<span class="string">&quot;,&quot;</span>)));</span><br><span class="line">    <span class="comment">//kafka相关参数，必要！缺了会报错</span></span><br><span class="line">Map&lt;String, Object&gt; kafkaParams = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;metadata.broker.list&quot;</span>, brokers) ;</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;bootstrap.servers&quot;</span>, brokers);</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;group.id&quot;</span>, <span class="string">&quot;group1&quot;</span>);</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;key.serializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;key.deserializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;</span>);</span><br><span class="line">    kafkaParams.put(<span class="string">&quot;value.deserializer&quot;</span>, <span class="string">&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;</span>);</span><br><span class="line">    <span class="comment">//Topic分区</span></span><br><span class="line">    Map&lt;TopicPartition, Long&gt; offsets = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    offsets.put(<span class="keyword">new</span> <span class="title class_">TopicPartition</span>(<span class="string">&quot;topic1&quot;</span>, <span class="number">0</span>), <span class="number">2L</span>); </span><br><span class="line">    <span class="comment">//通过KafkaUtils.createDirectStream(...)获得kafka数据，kafka相关参数由kafkaParams指定</span></span><br><span class="line">    JavaInputDStream&lt;ConsumerRecord&lt;Object,Object&gt;&gt; lines = KafkaUtils.createDirectStream(</span><br><span class="line">            ssc,</span><br><span class="line">            LocationStrategies.PreferConsistent(),</span><br><span class="line">            ConsumerStrategies.Subscribe(topicsSet, kafkaParams, offsets)</span><br><span class="line">        );</span><br><span class="line">    <span class="comment">//这里就跟之前的demo一样了，只是需要注意这边的lines里的参数本身是个ConsumerRecord对象</span></span><br><span class="line">JavaPairDStream&lt;String, Integer&gt; counts = </span><br><span class="line">lines.flatMap(x -&gt; Arrays.asList(x.value().toString().split(<span class="string">&quot; &quot;</span>)).iterator())</span><br><span class="line">.mapToPair(x -&gt; <span class="keyword">new</span> <span class="title class_">Tuple2</span>&lt;String, Integer&gt;(x, <span class="number">1</span>))</span><br><span class="line">.reduceByKey((x, y) -&gt; x + y);</span><br><span class="line">counts.print();</span><br><span class="line"><span class="comment">//可以打印所有信息，看下ConsumerRecord的结构</span></span><br><span class="line"><span class="comment">//    lines.foreachRDD(rdd -&gt; &#123;</span></span><br><span class="line"><span class="comment">//        rdd.foreach(x -&gt; &#123;</span></span><br><span class="line"><span class="comment">//          System.out.println(x);</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"><span class="comment">//      &#125;);</span></span><br><span class="line">ssc.start();</span><br><span class="line">ssc.awaitTermination();</span><br><span class="line">ssc.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.运行测试<br>这里使用上一篇kafka初探里写的producer类，put数据到kafka服务端，我这是master2节点上部署的kafka，本地测试跑spark2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserKafkaProducer producerThread = new UserKafkaProducer(KafkaProperties.topic);</span><br><span class="line">producerThread.start();</span><br></pre></td></tr></table></figure><p>再运行3里的SparkSteamingKafka类，可以看到已经成功。<br><img src="http://img.blog.csdn.net/20161226195407346?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja2xpbjkyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="运行生产者类"><br><img src="http://img.blog.csdn.net/20161226195350341?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja2xpbjkyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="运行spark充当消费者"></p><p><img src="http://img.blog.csdn.net/20161227103155846?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja2xpbjkyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>hadoop spark</category>
      
    </categories>
    
    
    <tags>
      
      <tag>spark kafka java8</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kafka初探 版本0.10 java编程</title>
    <link href="/2016/12/20/kafka%E5%88%9D%E6%8E%A2%20%E7%89%88%E6%9C%AC0.10%20java%E7%BC%96%E7%A8%8B/"/>
    <url>/2016/12/20/kafka%E5%88%9D%E6%8E%A2%20%E7%89%88%E6%9C%AC0.10%20java%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>之前一直有项目用到，不过我并不负责这一块，所以了解不多，这次趁机会学习下。<br>之前对kafka的了解其实仅限于知道它是一个分布式消息系统，这次详细了解了下，知道了一些关键概念(topic主题、broker服务、producers消息发布者、consumer消息订阅者消费者)，具体网上一大堆，这里不赘述，直接开始代码。</p><span id="more"></span><p>###1.引入包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;kafka_2.10&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.10.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>实际上我倒不是以上面方式引入的，因为使用kafka还是为了后面跟spark steaming集成，所以我是引入的spark-streaming-kafka，依赖包自然会被引入，需求相同的话可以像下面这样引入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spark-streaming-kafka-0-10_2.11&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>###2.发布者类Producer<br>这里使用KafkaProducer类,官方已经不建议使用Producer类，实现一个线程类，进行消息发布，实际的代码其实很简单，不过本来也就是要一个demo。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">import org.apache.kafka.clients.producer.KafkaProducer;</span><br><span class="line">import org.apache.kafka.clients.producer.ProducerRecord;</span><br><span class="line"></span><br><span class="line">public class UserKafkaProducer extends Thread</span><br><span class="line">&#123;</span><br><span class="line">    private final KafkaProducer&lt;Integer, String&gt; producer;</span><br><span class="line">    private final String topic;</span><br><span class="line">    private final Properties props = new Properties();</span><br><span class="line">    public UserKafkaProducer(String topic)</span><br><span class="line">    &#123;</span><br><span class="line">        props.put(&quot;metadata.broker.list&quot;, &quot;master2:6667&quot;);</span><br><span class="line">        props.put(&quot;bootstrap.servers&quot;, &quot;master2:6667&quot;);</span><br><span class="line">        props.put(&quot;acks&quot;, &quot;all&quot;);</span><br><span class="line">        props.put(&quot;retries&quot;, 0);</span><br><span class="line">        props.put(&quot;batch.size&quot;, 16384);</span><br><span class="line">        props.put(&quot;linger.ms&quot;, 1);</span><br><span class="line">        props.put(&quot;buffer.memory&quot;, 33554432);</span><br><span class="line">        props.put(&quot;key.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);</span><br><span class="line">        props.put(&quot;value.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);</span><br><span class="line">        producer = new KafkaProducer&lt;Integer, String&gt;(props);</span><br><span class="line">        this.topic = topic;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        int messageNo = 1;</span><br><span class="line">        while (true)</span><br><span class="line">        &#123;</span><br><span class="line">            String messageStr = new String(&quot;Message_&quot; + messageNo);</span><br><span class="line">            System.out.println(&quot;Send:&quot; + messageStr);</span><br><span class="line">            producer.send(new ProducerRecord&lt;Integer, String&gt;(topic, messageStr));</span><br><span class="line">            messageNo++;</span><br><span class="line">            try &#123;</span><br><span class="line">                sleep(3000);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###3.消息消费者类Consumer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">import kafka.consumer.ConsumerConfig;</span><br><span class="line">import kafka.javaapi.consumer.ConsumerConnector;</span><br><span class="line">import kafka.consumer.ConsumerIterator;</span><br><span class="line">import kafka.consumer.KafkaStream;</span><br><span class="line"></span><br><span class="line">public class UserKafkaConsumer extends Thread</span><br><span class="line">&#123;</span><br><span class="line">    private final ConsumerConnector consumer;</span><br><span class="line">    private final String topic;</span><br><span class="line">    public UserKafkaConsumer(String topic)</span><br><span class="line">    &#123;</span><br><span class="line">        consumer = kafka.consumer.Consumer.createJavaConsumerConnector(</span><br><span class="line">                createConsumerConfig());</span><br><span class="line">        this.topic = topic;</span><br><span class="line">    &#125;</span><br><span class="line">    private static ConsumerConfig createConsumerConfig()</span><br><span class="line">    &#123;</span><br><span class="line">        Properties props = new Properties();</span><br><span class="line">        props.put(&quot;zookeeper.connect&quot;, &quot;master1:2181,master2:2181&quot;);</span><br><span class="line">        props.put(&quot;group.id&quot;, &quot;group1&quot;);</span><br><span class="line">        props.put(&quot;zookeeper.session.timeout.ms&quot;, &quot;40000&quot;);</span><br><span class="line">        props.put(&quot;zookeeper.sync.time.ms&quot;, &quot;200&quot;);</span><br><span class="line">        props.put(&quot;auto.commit.interval.ms&quot;, &quot;1000&quot;);</span><br><span class="line">        return new ConsumerConfig(props);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        Map&lt;String, Integer&gt; topicCountMap = new HashMap&lt;String, Integer&gt;();</span><br><span class="line">        topicCountMap.put(topic, new Integer(1));</span><br><span class="line">        Map&lt;String, List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt;&gt; consumerMap = consumer.createMessageStreams(topicCountMap);</span><br><span class="line">        KafkaStream&lt;byte[], byte[]&gt; stream = consumerMap.get(topic).get(0);</span><br><span class="line">        ConsumerIterator&lt;byte[], byte[]&gt; it = stream.iterator();</span><br><span class="line">        while (it.hasNext()) &#123;</span><br><span class="line">            System.out.println(&quot;receive：&quot; + new String(it.next().message()));</span><br><span class="line">            try &#123;</span><br><span class="line">                sleep(3000);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###4.简单示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        UserKafkaProducer producerThread = new UserKafkaProducer(KafkaProperties.topic);</span><br><span class="line">        producerThread.start();</span><br><span class="line">        UserKafkaConsumer consumerThread = new UserKafkaConsumer(KafkaProperties.topic);</span><br><span class="line">        consumerThread.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>azkaban集群多节点模式配置</title>
    <link href="/2016/12/19/azkaban%E9%9B%86%E7%BE%A4%E5%A4%9A%E8%8A%82%E7%82%B9%E6%A8%A1%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
    <url>/2016/12/19/azkaban%E9%9B%86%E7%BE%A4%E5%A4%9A%E8%8A%82%E7%82%B9%E6%A8%A1%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 style="margin:20px 0px 10px; padding:0px; font-weight:500; font-size:24px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51)"><span style="line-height:1.1"><br><br></span><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">配置多节点执行服务器的时候，需要在<span style="line-height:22.4px">AzkabanWebServer的配置文件</span><code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">azkaban.properties</code><span style="line-height:22.4px">里添加</span></p><pre class="code" style="margin-top:0px; margin-bottom:10px; background-color:rgb(245,245,245); font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:13px; white-space:pre-wrap; padding:9.5px; line-height:1.42857; color:rgb(51,51,51); word-break:break-all; word-wrap:break-word; border:1px solid rgb(204,204,204)">azkaban.use.multiple.executors=trueazkaban.executorselector.filters=StaticRemainingFlowSize,MinimumFreeMemory,CpuStatusazkaban.executorselector.comparator.NumberOfAssignedFlowComparator=1azkaban.executorselector.comparator.Memory=1azkaban.executorselector.comparator.LastDispatched=1azkaban.executorselector.comparator.CpuUsage=1</pre><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1">以确认使用的是分布式方式，随后提交的job会根据情况自行选择执行服务器，否则默认只使用本地执行服务器，切记！</div><span id="more"></span><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1">之后需要在mysql的azkaban库中添加各个执行服务器的ip/域名和端口：</div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1"><span style="color:rgb(199,37,78); font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.6px; line-height:20.16px; white-space:nowrap; background-color:rgb(249,242,244)">insert into executors(host,port) values(&quot;EXECUTOR_PORT&quot;,EXECUTOR_PORT);</span></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px"><span style="font-size:12.6px; line-height:20.16px; white-space:nowrap; background-color:rgb(249,242,244)"><span style="font-family:微软雅黑"><span style="font-size:1rem">至此，azkaban的分布式配置才算成功。</span></span></span></div><br></h3><div><span style="line-height:1.1"></span><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">配置多节点执行服务器的时候，需要在<span style="line-height:22.4px">AzkabanWebServer的配置文件</span><code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">azkaban.properties</code><span style="line-height:22.4px">里添加</span></p><pre class="code" style="margin-top:0px; margin-bottom:10px; background-color:rgb(245,245,245); font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:13px; white-space:pre-wrap; padding:9.5px; line-height:1.42857; color:rgb(51,51,51); word-break:break-all; word-wrap:break-word; border:1px solid rgb(204,204,204)">azkaban.use.multiple.executors=trueazkaban.executorselector.filters=StaticRemainingFlowSize,MinimumFreeMemory,CpuStatusazkaban.executorselector.comparator.NumberOfAssignedFlowComparator=1azkaban.executorselector.comparator.Memory=1azkaban.executorselector.comparator.LastDispatched=1azkaban.executorselector.comparator.CpuUsage=1</pre><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1">以确认使用的是分布式方式，随后提交的job会根据情况自行选择执行服务器，否则默认只使用本地执行服务器，切记！</div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1">之后需要在mysql的azkaban库中添加各个执行服务器的ip/域名和端口：</div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1"><span style="color:rgb(199,37,78); font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:12.6px; line-height:20.16px; white-space:nowrap; background-color:rgb(249,242,244)">insert into executors(host,port) values(&quot;EXECUTOR_PORT&quot;,EXECUTOR_PORT);</span></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px"><span style="font-size:12.6px; line-height:20.16px; white-space:nowrap; background-color:rgb(249,242,244)"><span style="font-family:微软雅黑"><span style="font-size:1rem">至此，azkaban的分布式配置才算成功。</span></span></span></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px"><span style="font-size:12.6px; line-height:20.16px; white-space:nowrap; background-color:rgb(249,242,244)"><span style="font-family:微软雅黑"><span style="font-size:1rem"><br></span></span></span></div><br><span style="color:rgb(128,128,128); font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:12.5px; line-height:20px">以下来源官网文档：&nbsp;</span><a target="_blank" target="_blank" href="http://azkaban.github.io/azkaban/docs/latest/" style="font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:12.5px; line-height:20px; widows:1">http://azkaban.github.io/azkaban/docs/latest/</a><br></div><h3 style="margin:20px 0px 10px; padding:0px; font-weight:500; font-size:24px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51)"><span style="line-height:1.1">Configuring AzabanWebServer and AzkabanExecutorServer clients</span><br></h3><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">The Executor server needs to be setup with a port, and the AzabanWebServer will need to know what this port is.</p><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">The following properties need to be set on AzkabanExecutorServer's&nbsp;<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">azkaban.properties</code>.</p><pre class="code" style="margin-top:0px; margin-bottom:10px; font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:13px; white-space:pre-wrap; padding:9.5px; line-height:1.42857; color:rgb(51,51,51); word-break:break-all; word-wrap:break-word; border:1px solid rgb(204,204,204); background-color:rgb(245,245,245)"># Azkaban Executor settingsexecutor.maxThreads=50executor.port=12321executor.flow.threads=30</pre><h4 style="margin:10px 0px; padding:0px; font-weight:500; font-size:18px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51)">Single Executor Mode</h4><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">By default the&nbsp;<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">executor.port</code>&nbsp;is set to&nbsp;<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">12321</code>. The AzkabanWebServer will have to point to this port as well.</p><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">This is done by setting the following property in AzkabanWebServer's&nbsp;<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">azkaban.properties</code>.</p><pre class="code" style="margin-top:0px; margin-bottom:10px; font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:13px; white-space:pre-wrap; padding:9.5px; line-height:1.42857; color:rgb(51,51,51); word-break:break-all; word-wrap:break-word; border:1px solid rgb(204,204,204); background-color:rgb(245,245,245)">executor.port=12321</pre><h4 style="margin:10px 0px; padding:0px; font-weight:500; font-size:18px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51)">Multiple Executor Mode</h4><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">We need to enable multiple executor mode in webserver configuration if we want to run in multiple executor mode. Please verify that you have following properties in azkaban.properties. azkaban.use.multiple.executors and azkaban.executorselector.comparator.* are required properties. Please note that&nbsp;<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">azkaban.use.multiple.executors</code>&nbsp;is not honoured in multiple exeutor mode.</p><pre class="code" style="margin-top:0px; margin-bottom:10px; font-family:Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; font-size:13px; white-space:pre-wrap; padding:9.5px; line-height:1.42857; color:rgb(51,51,51); word-break:break-all; word-wrap:break-word; border:1px solid rgb(204,204,204); background-color:rgb(245,245,245)">azkaban.use.multiple.executors=trueazkaban.executorselector.filters=StaticRemainingFlowSize,MinimumFreeMemory,CpuStatusazkaban.executorselector.comparator.NumberOfAssignedFlowComparator=1azkaban.executorselector.comparator.Memory=1azkaban.executorselector.comparator.LastDispatched=1azkaban.executorselector.comparator.CpuUsage=1</pre><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">These changes are only picked up after restarting the servers.</p><h2 id="multipleExecutors-config" style="margin:20px 0px 10px; padding:0px; font-weight:500; font-size:30px; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; line-height:1.1; color:rgb(51,51,51)">Configure executors for Multiple Executor Mode</h2><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">We don't have a executor management UI at this point of Time. Executors need to be configured in database. For examples:-</p><p style="margin-top:0px; margin-bottom:10px; color:rgb(51,51,51); font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px">Insert all executors into the mysql DB for executor setups. Verify that correct executors are active in executors table.<code style="margin:8px 0px; font-family:Monaco,Menlo,Consolas,'Courier New',monospace; font-size:12.6px; padding:2px 4px; color:rgb(199,37,78); white-space:nowrap; background-color:rgb(249,242,244)">insert into executors(host,port) values(&quot;EXECUTOR_PORT&quot;,EXECUTOR_PORT);</code></p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Spark集群硬件挑选</title>
    <link href="/2016/12/19/Spark%E9%9B%86%E7%BE%A4%E7%A1%AC%E4%BB%B6%E6%8C%91%E9%80%89/"/>
    <url>/2016/12/19/Spark%E9%9B%86%E7%BE%A4%E7%A1%AC%E4%BB%B6%E6%8C%91%E9%80%89/</url>
    
    <content type="html"><![CDATA[<div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px"><strong>Spark</strong>&nbsp;开发者都会反应一个常见问题，如何为&nbsp;<strong>Spark</strong>&nbsp;配置硬件。然而正确的硬件配置取决于使用的场景，我们提出以下建议。</p></div></div></div><span id="more"></span><div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><h2 id="id-硬件挑选-存储系统" style="margin:0px; padding:0px; font-size:20px; font-weight:normal; line-height:1.5; border-bottom-color:rgb(204,204,204)">存储系统</h2><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">因为大多数&nbsp;<strong>Spark</strong>&nbsp;作业都很可能必须从外部存储系统(例如&nbsp;<strong>Hadoop</strong>&nbsp;文件系统或者&nbsp;<strong>HBase</strong>&nbsp;)读取输入的数据，所以部署&nbsp;<strong>Spark</strong>&nbsp;时<span style="color:rgb(0,0,0)"><strong>尽可能靠近这些系统</strong></span>是很重要的。我们建议如下:</p><ul style="margin:10px 0px 0px"><li>如果可以，在&nbsp;<strong>HDFS</strong>&nbsp;相同的节点上运行&nbsp;<strong>Spark</strong>&nbsp;。最简单的方法是在相同节点上设置&nbsp;<strong>Spark</strong>&nbsp;<a target="_blank" href="http://spark.apache.org/docs/latest/spark-standalone.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">独立模式集群</a>，并且配置&nbsp;<strong>Spark</strong>&nbsp;和&nbsp;<strong>Hadoop</strong>&nbsp;的内存和&nbsp;<strong>CPU</strong>&nbsp;的使用以避免干扰(&nbsp;<strong>Hadoop</strong>&nbsp;的相关选项为: 设置每个任务内存大小的选项&nbsp;<span style="color:rgb(128,128,128)"><code><em><strong>mapred.child.java.opts</strong></em>&nbsp;<span style="color:rgb(51,51,51)">以及设置任务数量的选项&nbsp;</span><span style="color:rgb(0,0,0)"><span style="color:rgb(128,128,128)"><em><strong>mapred.tasktracker.map.tasks.maximum</strong></em>&nbsp;</span><span style="color:rgb(51,51,51)">和&nbsp;</span><span style="color:rgb(128,128,128)"><em><strong>mapred.tasktracker.reduce.tasks.maximum</strong></em>&nbsp;</span></span></code></span>)<span style="color:rgb(0,0,0)"><span style="color:rgb(51,51,51)">。当然你也可以在常用的集群管理器(比如&nbsp;</span><a target="_blank" href="http://spark.apache.org/docs/latest/running-on-mesos.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">Mesos</a>&nbsp;<span style="color:rgb(51,51,51)">或者&nbsp;</span><a target="_blank" href="http://spark.apache.org/docs/latest/running-on-yarn.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">Hadoop YARN</a>&nbsp;<span style="color:rgb(51,51,51)">)上运行 &nbsp;<strong>Hadoop</strong>&nbsp;和&nbsp;<strong>Spark</strong>。</span></span></li><li>如果不可以在相同的节点上运行，建议在与&nbsp;<strong>HDFS</strong>&nbsp;相同的局域网中的不同节点上运行&nbsp;<strong>Spark</strong>&nbsp;。</li><li>对于像&nbsp;<strong>HBase</strong>&nbsp;这样的低延时数据存储系统，在与这些存储系统不同的节点上运行计算作业来可能更有利于避免干扰。</li></ul></div></div></div><div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><h2 id="id-硬件挑选-本地磁盘" style="margin:0px; padding:0px; font-size:20px; font-weight:normal; line-height:1.5; border-bottom-color:rgb(204,204,204)">本地磁盘</h2><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">虽然&nbsp;<strong>Spark</strong>&nbsp;可以在内存中执行大量计算，但是他仍然使用本地磁盘来存储不适合内存存储的数据以及各个阶段的中间结果。我们建议每个节点配置<strong>4-8个磁盘，并且</strong>不使用&nbsp;<strong>RAID</strong>&nbsp;配置(只作为单独挂载点)。在&nbsp;<strong>Linux</strong>&nbsp;中,使用&nbsp;<a target="_blank" href="https://www.centos.org/docs/5/html/Global_File_System/s2-manage-mountnoatime.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">noatime选项</a>&nbsp;挂载磁盘以减少不必要的写入。在&nbsp;<strong>Spark</strong>&nbsp;中，<a target="_blank" href="http://spark.apache.org/docs/latest/configuration.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">配置</a>&nbsp;<span style="color:rgb(0,0,0)"><span style="color:rgb(128,128,128)"><em><strong>spark.local.dir</strong></em><span style="color:rgb(51,51,51)">&nbsp;</span></span><span style="color:rgb(51,51,51)">变量为逗号分隔的本地磁盘列表。如果你正在运行&nbsp;<strong>HDFS</strong>，可以使用与&nbsp;<strong>HDFS&nbsp;</strong>相同的磁盘。</span></span></p></div></div></div><div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><h2 id="id-硬件挑选-内存" style="margin:0px; padding:0px; font-size:20px; font-weight:normal; line-height:1.5; border-bottom-color:rgb(204,204,204)">内存</h2><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">一般来说，<strong>Spark</strong>&nbsp;可以在每台机器<span style="color:rgb(0,0,0)"><strong>8GB到数百GB内存</strong></span>的任何地方正常运行。在所有情况下，我们建议只为&nbsp;<strong>Spark</strong>&nbsp;分配最多75%的内存；其余部分供操作系统和缓存区高速缓存存储器使用。</p><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">您需要多少内存取决于你的应用程序。如果你需要确定的应用程序中某个特定数据集占用内存的大小，你可以把这个数据集加载到一个&nbsp;<strong>Spark&nbsp;RDD</strong>中，然后在&nbsp;<strong>Spark</strong>&nbsp;监控<strong>UI</strong>页面(<em><strong><span style="color:rgb(128,128,128)">http://&lt;driver-node&gt;:4040</span></strong></em>)<span style="color:rgb(0,0,0)"><span style="color:rgb(51,51,51)">中的&nbsp;</span><span style="color:rgb(29,31,34)"><span style="color:rgb(51,51,51)"><strong>Storage</strong>&nbsp;选项卡下查看它在内存中的大小。需要注意的是，存储级别和序列化&#26684;式对内存使用量有很大的影响 - 如何减少内存使用量的建议，请参阅</span><a target="_blank" href="http://spark.apache.org/docs/latest/tuning.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none">调优指南</a>。</span></span></p><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">最后,需要注意的是&nbsp;<strong>Java</strong>&nbsp;虚拟机在超过200GB的&nbsp;<strong>RAM</strong>&nbsp;时表现得并不好。如果你购置的机器有比这更多的&nbsp;<strong>RAM</strong>&nbsp;，你可以在每个节点上运行<em>多个</em><strong>Worker</strong><em>&nbsp;的&nbsp;</em><strong>JVM</strong><em>&nbsp;实例</em>。在&nbsp;<strong>Spark&nbsp;</strong>的<a target="_blank" href="http://spark.apache.org/docs/latest/spark-standalone.html" class="external-link" rel="nofollow" style="color:rgb(53,114,176); text-decoration:none"><span style="color:rgb(51,51,51)">独立模式</span></a>下,你可以通过&nbsp;<em><strong>conf/spark-env.sh</strong></em>&nbsp;中的&nbsp;<span style="color:rgb(128,128,128)"><em><strong>SPARK_WORKER_INSTANCES</strong></em>&nbsp;</span>和&nbsp;<span style="color:rgb(128,128,128)"><em><strong>SPARK_WORKER_CORES</strong></em>&nbsp;</span>两个参数来分别设置每个节点的&nbsp;<strong>Worker</strong>&nbsp;数量和每个&nbsp;<strong>Worker</strong>&nbsp;使用的核心数量。</p></div></div></div><div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><h2 id="id-硬件挑选-网络" style="margin:0px; padding:0px; font-size:20px; font-weight:normal; line-height:1.5; border-bottom-color:rgb(204,204,204)">网络</h2><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">根据我们的经验，当数据在内存中时，很多&nbsp;<strong>Spark</strong>&nbsp;应用程序跟网络有密切的关系。使用<strong>10千兆位以太网</strong>或者更快的网络是让这些应用程序变快的最佳方式。这对于“&nbsp;<em><strong>distributed reduce</strong></em>&nbsp;”类的应用程序来说尤其如此,例如 group-by 、reduce-by 和 SQL join 。任何程序都可以在应用程序监控UI页面(<em><strong><span style="color:rgb(128,128,128)">http://&lt;driver-node&gt;:4040</span></strong></em>)中查看&nbsp;<strong>Spark</strong>&nbsp;通过网络传输的数据量。</p></div></div></div><p></p><div class="columnLayout single" style="margin:0px 0px 8px; padding:0px; display:table; table-layout:fixed; width:951px; color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px"><div class="cell normal" style="margin:8px 0px; padding:0px 15px; word-wrap:break-word; display:table-cell; vertical-align:top"><div class="innerCell" style="margin:0px; padding:0px; overflow-x:auto"><h2 id="id-硬件挑选-CPUCore数量" style="margin:0px; padding:0px; font-size:20px; font-weight:normal; line-height:1.5; border-bottom-color:rgb(204,204,204)">CPU Core 数量</h2><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">因为&nbsp;<strong>Spark</strong>&nbsp;实行线程之间的最小共享，所以&nbsp;<strong>Spark</strong>&nbsp;可以很好地在每台机器上扩展数十个&nbsp;<strong>CPU</strong>&nbsp;核心。你应该为每台机器至少配置<strong>8-16个核心</strong>。根据你工作负载的&nbsp;<strong>CPU</strong>&nbsp;成本，你可能还需要更多：当数据都在内存中时，大多数应用程序就只跟&nbsp;<strong>CPU</strong>&nbsp;或者网络有关了。</p><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px"><br></p><p style="margin-top:10px; margin-bottom:0px; padding-top:0px; padding-bottom:0px">http://www.apache.wiki/pages/viewpage.action?pageId=2887869<br></p></div></div></div><p></p>]]></content>
    
    
    <categories>
      
      <category>hadoop spark</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop 集群如何选择合适的硬件</title>
    <link href="/2016/12/19/Hadoop%20%E9%9B%86%E7%BE%A4%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%A1%AC%E4%BB%B6/"/>
    <url>/2016/12/19/Hadoop%20%E9%9B%86%E7%BE%A4%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%A1%AC%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p style="margin-top:0px; margin-bottom:0px; word-wrap:break-word; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px; line-height:22px"><span style="word-wrap:break-word; color:rgb(0,0,0)"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">随着Apache Hadoop的起步，云客户的增多面临的首要问题就是如何为他们新的的Hadoop集群选择合适的硬件。</span></span></p><span id="more"></span><p style="margin-top:0px; margin-bottom:0px; word-wrap:break-word; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px; line-height:22px"><span style="word-wrap:break-word; color:rgb(0,0,0)"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">尽管Hadoop被设计为运行在行业标准的硬件上，提出一个理想的集群配置不想提供硬件规&#26684;列表那么简单。 选择硬件，为给定的负载在性能和经济性提供最佳平衡是需要测试和验证其有效性。（比如，IO密集型工作负载的用户将会为每个核心主轴投资更多）。</span></span></p><p style="margin-top:0px; margin-bottom:0px; word-wrap:break-word; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px; line-height:22px"><span style="word-wrap:break-word; color:rgb(0,0,0)"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">在这个博客帖子中，你将会学到一些工作负载评估的原则和它在硬件选择中起着至关重要的作用。在这个过程中，你也将学到Hadoop管理员应该考虑到各种因素。</span></span></p><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="word-wrap:break-word; font-weight:700">结合存储和计算</span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">过去的十年，IT组织已经标准化了刀片服务器和存储区域网(SAN)来满足联网和处理密集型的工作负载。尽管这个模型对于一些方面的标准程序是有相当意义 的，比如网站服务器，程序服务器，小型结构化数据库，数据移动等，但随着数据数量和用户数的增长，对于基础设施的要求也已经改变。网站服务器现在有了缓存 层；数据库需要本地硬盘支持大规模地并行；数据迁移量也超过了本地可处理的数量。</span></span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"></span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word"><span style="word-wrap:break-word; font-weight:700">大部分的团队还没有弄清楚实际工作负载需求就开始搭建他们的Hadoop集群。</span></span></span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">硬 件提供商已经生产了创新性的产品系统来应对这些需求，包括存储刀片服务器，串行SCSI交换机，外部SATA磁盘阵列和大容量的机架单元。然 而，Hadoop是基于新的实现方法，来存储和处理复杂数据，并伴随着数据迁移的减少。 相对于依赖SAN来满足大容量存储和可靠性，Hadoop在软件层次处理大数据和可靠性。Hadoop在一簇平衡的节点间分派数据并使用同步复制来保证数据可用性和容错性。因为数据被分发到有计算能力的节点，数据的处理可以被直接发送到存储有数据的节点。由于Hadoop集群中的每一台节点都存储并处理数据，这些节点都需要配置来满足数据存储和运算的要求。</span></span><br style="word-wrap:break-word"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word"><span style="word-wrap:break-word; font-weight:700">工作负载很重要吗？</span></span></span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word"><br style="word-wrap:break-word"></span></span></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">在几乎所有情形下，MapReduce要么会在从硬盘或者网络读取数据时遇到瓶颈（称为IO受限的应用），要么在处理数据时遇到瓶颈（CPU受限）。排序是一个IO受限的例子，它需要很少的CPU处理（仅仅是简单的比较操作），但是需要大量的从硬盘读写数据。模式分类是一个CPU受限的例子，它对数据进行复杂的处理，用来判定本体。下面是更多IO受限的工作负载的例子：</span></span><ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">索引</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">分组</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">数据导入导出</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">数据移动和转换<br style="word-wrap:break-word"></li></ul>下面是更多CPU受限的工作负载的例子：<ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">聚类/分类</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">复杂文本挖掘</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">自然语言处理</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">特征提取<br style="word-wrap:break-word"></li></ul>Cloudera的客户需要完全理解他们的工作负载，这样才能选择最优的Hadoop硬件，而这好像是一个鸡生蛋蛋生鸡的问题。大多数工作组在没有彻底剖析他们的工作负载时，就已经搭建好了Hadoop集群，通常Hadoop运行的工作负载随着他们的精通程度的提高而完全不同。而且，某些工作负载可能会被一些未预料的原因受限。例如，某些理论上是IO受限的工作负载却最终成为了CPU受限，这是可能是因为用户选择了不同的压缩算法，或者算法的不同实现改变了MapReduce任务的约束方式。基于这些原因，当工作组还不熟悉要运行任务的类型时，深入剖析它才是构建平衡的Hadoop集群之前需要做的最合理的工作。<br style="word-wrap:break-word"><br style="word-wrap:break-word"><span style="color:#000; word-wrap:break-word"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word">接下来需要在集群上运行MapReduce基准测试任务，分析它们是如何受限的。完成这个目标最直接的方法是在运行中的工作负载中的适当位置添加监视器来检测瓶颈。我们推荐在Hadoop集群上安装Cloudera Manager，它可以提供CPU，硬盘和网络负载的实时统计信息。（Cloudera Manager是Cloudera 标准版和企业版的一个组件，其中企业版还支持滚动升级）Cloudera Manager安装之后，Hadoop管理员就可以运行MapReduce任务并且查看Cloudera Manager的仪表盘，用来监测每台机器的工作情况。</span></span><br style="word-wrap:break-word"></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="word-wrap:break-word; font-weight:700">第一步是弄清楚你的作业组已经拥有了哪些硬件</span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">在为你的工作负载构建合适的集群之外，我们建议客户和它们的硬件提供商合作确定电力和冷却方面的预算。由于Hadoop会运行在数十台，数百台到数千台节点上。通过使用高性能功耗比的硬件，作业组可以节省一大笔资金。硬件提供商通常都会提供监测功耗和冷却方面的工具和建议。</div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"></div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="word-wrap:break-word; font-weight:700"><span style="word-wrap:break-word">为你的CDH(</span><span style="word-wrap:break-word"><span style="word-wrap:break-word"><span style="word-wrap:break-word">Cloudera</span>&nbsp;<span style="word-wrap:break-word">distribution</span>&nbsp;<span style="word-wrap:break-word">for</span></span>&nbsp;</span><span style="word-wrap:break-word"><span style="word-wrap:break-word">Hadoop</span></span><span style="word-wrap:break-word">) Cluster选择硬件</span></span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">选择机器配置类型的第一步就是理解你的运维团队已经在管理的硬件类型。在购买新的硬件设备时，运维团队经常根据一定的观点或者强制需求来选择，并且他们倾向于工作在自己业已熟悉的平台类型上。Hadoop不是唯一的从规模效率上获益的系统。再一次强调，作为更通用的建议，如果集群是新建立的或者你并不能准确的预估你的极限工作负载，我们建议你选择均衡的硬件类型。Hadoop集群有四种基本任务角色:名称节点（包括备用名称节点），工作追踪节点，任务执行节点，和数据节点。节点是执行某一特定功能的工作站。大部分你的集群内的节点需要执行两个角色的任务，作为数据节点（数据存储）和任务执行节点（数据处理）。这是在一个平衡Hadoop集群中，为数据节点/任务追踪器提供的推荐规&#26684;：<ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">在一个磁盘阵列中要有12到24个1~4TB硬盘</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">2个频率为2~2.5GHz的四核、六核或八核CPU</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">64~512GB的内存</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">有保障的千兆或万兆以太网（存储密度越大，需要的网络吞吐量越高）<br style="word-wrap:break-word"></li></ul>名字节点角色负责协调集群上的数据存储，作业追踪器协调数据处理（备用的名字节点不应与集群中的名字节点共存，并且运行在与之相同的硬件环境上。）。Cloudera推荐客户购买在RAID1或10配置上有足够功率和企业级磁盘数的商用机器来运行名字节点和作业追踪器。NameNode也会直接需要与群集中的数据块的数量成比列的RAM。一个好的但不精确的规则是对于存储在分布式文件系统里面的每一个1百万的数据块，分配1GB的NameNode内存。于在一个群集里面的100个DataNodes而言，NameNode上的64GB的RAM提供了足够的空间来保证群集的增长。我们也推荐把HA同时配置在NameNode和JobTracker上，这里就是为NameNode／JobTracker／Standby NameNode节点群推荐的技术细节。驱动器的数量或多或少，将取决于冗余数量的需要。<ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">4–6 1TB 硬盘驱动器 采用 一个&nbsp;&nbsp;JBOD 配置 (1个用于OS, 2个用于文件系统映像[RAID 1], 1个用于Apache ZooKeeper, 1个用于Journal节点)</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">2 4-/16-/8-核心 CPUs, 至少运行于 2-2.5GHz</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">64-128GB 随机存储器</li><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">Bonded Gigabit 以太网卡 or 10Gigabit 以太网卡<br style="word-wrap:break-word"></li></ul><span style="word-wrap:break-word; font-weight:700"><br style="word-wrap:break-word">记住, 在思想上，Hadoop 体系设计为用于一种并行环境。</span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">如果你希望Hadoop集群扩展到20台机器以上，那么我们推荐最初配置的集群应分布在两个机架，而且每个机架都有一个位于机架顶部的10G的以太网交换。当这个集群跨越多个机架的时候，你将需要添加核心交换机使用40G的以太网来连接位于机架顶部的交换机。两个逻辑上分离的机架可以让维护团队更好地理解机架内部和机架间通信对网络需求。Hadoop集群安装好后，维护团队就可以开始确定工作负载，并准备对这些工作负载进行基准测试以确定硬件瓶颈。经过一段时间的基准测试和监视，维护团队将会明白如何配置添加的机器。异构的Hadoop集群是很常见的，尤其是在集群中用户机器的容量和数量不断增长的时候更常见-因此为你的工作负载所配置的“不理想”开始时的那组机器不是在浪费时间。Cloudera管理器提供了允许分组管理不同硬件配置的模板，通过这些模板你就可以简单地管理异构集群了。下面是针对不同的工作负载所采用对应的各种硬件配置的列表，包括我们最初推荐的“负载均衡”的配置：<ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">轻量处理方式的配置(1U的机器）:两个16核的CPU，24-64GB的内存以及8张硬盘（每张1TB或者2TB)。<br style="word-wrap:break-word"></li></ul><ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">负载均衡方式的配置(1U的机器）:两个16核的CPU，48-128GB的内存以及由主板控制器直接连接的12-16张硬盘（每张1TB或者2TB)。通常在一个2U的柜子里使用2个主板和24张硬盘实现相互备份。<br style="word-wrap:break-word"></li></ul><ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">超大存储方式的配置(2U的机器）:两个16核的CPU，48-96GB的内存以及16-26张硬盘（每张2TB-4TB)。这种配置在多个节点/机架失效时会产生大量的网络流量。<br style="word-wrap:break-word"></li></ul><ul style="margin:0px 0px 0px 14px; padding:0px; word-wrap:break-word"><li style="margin:0px 0px 0px 2em; word-wrap:break-word; padding:0px; list-style:disc">强力运算方式的配置(2U的机器）:两个16核的CPU，64-512GB的内存以及4-8张硬盘（每张1TB或者2TB)。<br style="word-wrap:break-word"></li></ul>（注意Cloudera期望你配置它可以使用的2x8,2x10和2x12核心CPU的配置。)下图向你展示了如何根据工作负载来配置一台机器：&nbsp;<img id="aimg_1979" src="file:///C:/Users/delin/Documents/My%20Knowledge/temp/fd3a6e75-d719-4855-b9fd-2dee0a624c27/4/index_files/0.15311841038055718.png" class="zoom" width="500" alt="" style="border:0px; max-width:100%; margin:2px 0px; height:auto!important; word-wrap:break-word"></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="word-wrap:break-word; font-weight:700">其他要考虑的</span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">记住Hadoop生态系统的设计是考虑了并行环境这点非常重要。当购买处理器时，我们不建议购买最高频率(GHZ)的芯片，这些芯片都有很高的功耗（130瓦以上）。这么做会产生两个问题：电量消耗会更高和热量散发会更大。处在中间型号的CPU在频率、价&#26684;和核心数方面性价比是最好的。当我们碰到生成大量中间数据的应用时-也就是说输出数据的量和读入数据的量相等的情况-我们推荐在单个以太网接口卡上启用两个端口，或者捆绑两个以太网卡，让每台机器提供2Gbps的传输速率。绑定2Gbps的节点最多可容纳的数据量是12TB。一旦你传输的数据超过12TB，你将需要使用传输速率为捆绑方式实现的4Gbps(4x1Gbps)。另外，对哪些已经使用10Gb带宽的以太网或者无线网络用户来说，这样的方案可以用来按照网络带宽实现工作负载的分配。如果你正在考虑切换到10GB的以太网络上，那么请确认操作系统和BIOS是否兼容这样的功能。当计算需要多少内存的时候，记住Java本身要使用高达10%的内存来管理虚拟机。我们建议把Hadoop配置为只使用堆，这样就可以避免内存与磁盘之间的切换。切换大大地降低MapReduce任务的性能，并且可以通过给机器配置更多的内存以及给大多数Linux发布版以适当的内核设置就可以避免这种切换。优化内存的通道宽度也是非常重要的。例如，当我们使用双通道内存时，每台机器就应当配置成对内存模块（DIMM）。当我们使用三通道的内存时，每台机器都应当使用三的倍数个内存模块（DIMM）。类&#20284;地，四通道的内存模块（DIMM)就应当按四来分组使用内存。</div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="word-wrap:break-word; font-weight:700">超越MapReduce</span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">Hadoop不仅仅是HDFS和MapReduce；它是一个无所不包的数据平台。因此CDH包含许多不同的生态系统产品（实际上很少仅仅做为MapReduce使用）。当你在为集群选型的时候，需要考虑的附加软件组件包括Apache HBase、Cloudera Impala和Cloudera Search。它们应该都运行在DataNode中来维护数据局部性。</div><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><span style="font-family:微软雅黑,Verdana,sans-serif,宋体; word-wrap:break-word"><span style="font-size:18px; word-wrap:break-word"><span style="color:#000000; word-wrap:break-word"><span style="word-wrap:break-word; font-weight:700">关注资源管理是你成功的关键。</span></span></span></span></div><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px"><div align="left" style="margin:0px; word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,&quot;Microsoft Yahei&quot;,Simsun; font-size:14px">HBase是一个可靠的列数据存储系统，它提供一致性、低延迟和随机读写。Cloudera Search解决了CDH中存储内容的全文本搜索的需求，为新类型用户简化了访问，但是也为Hadoop中新类型数据存储提供了机会。Cloudera Search基于Apache Lucene/Solr Cloud和Apache Tika，并且为与CDH广泛集成的搜索扩展了有价&#20540;的功能和灵活性。基于Apache协议的Impala项目为Hadoop带来了可扩展的并行数据库技术，使得用户可以向HDFS和HBase中存储的数据发起低延迟的SQL查询，而且不需要数据移动或转换。由于垃圾回收器（GC）的超时，HBase的用户应该留意堆的大小的限制。别的JVM列存储也面临这个问题。因此，我们推荐每一个区域服务器的堆最大不超过16GB。HBase不需要太多别的资源而运行于Hadoop之上，但是维护一个实时的SLAs，你应该使用多个调度器，比如使用fair and capacity 调度器，并协同Linux Cgroups使用。Impala使用内存以完成其大多数的功能，在默认的配置下，将最多使用80％的可用RAM资源，所以我们推荐，最少每一个节点使用96GB的RAM。与MapReduce一起使用Impala的用户，可以参考我们的建议 －&nbsp;<span style="color:#3e62a6; word-wrap:break-word"><a target="_blank" href="http://blog.cloudera.com/blog/2013/06/configuring-impala-and-mapreduce-for-multi-tenant-performance/" target="_blank" style="word-wrap:break-word; color:rgb(51,102,153)">“Configuring Impala and MapReduce for Multi-tenant Performance.”</a></span>&nbsp;也可以为Impala指定特定进程所需的内存或者特定查询所需的内存。 搜索是最有趣的订制大小的组件。推荐的订制大小的实践操作是购买一个节点，安装Solr和Lucene，然后载入你的文档群。一旦文档群被以期望的方式来索引和搜索，可伸缩性将开始作用。持续不断的载入文档群，直到索引和查询的延迟，对于项目而言超出了必要的数&#20540; － 此时，这让你得到了在可用的资源上每一个节点所能处理的最大文档数目的基数，以及不包括欲期的集群复制此因素的节点的数量总计基数。<span style="word-wrap:break-word; font-weight:700">结论</span>购买合适的硬件，对于一个Hapdoop群集而言，需要性能测试和细心的计划，从而全面理解工作负荷。然而，Hadoop群集通常是一个形态变化的系统，而Cloudera建议，在开始的时候，使用负载均衡的技术文档来部署启动的硬件。重要的是，记住，当使用多种体系组件的时候，资源的使用将会是多样的，而专注与资源管理将会是你成功的关键。我们鼓励你在留言中，加入你关于配置Hadoop生产群集服务器的经验！Kevin O‘Dell 是一个工作于Cloudera的系统工程师。<br style="word-wrap:break-word"></div><br style="font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1"><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:1; color:gray"><small>来源：&nbsp;<a target="_blank" href="http://www.aboutyun.com/thread-6549-1-1.html">http://www.aboutyun.com/thread-6549-1-1.html</a></small></div>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>java8实现spark streaming的wordcount</title>
    <link href="/2016/12/16/java8%E5%AE%9E%E7%8E%B0spark%20streaming%E7%9A%84wordcount/"/>
    <url>/2016/12/16/java8%E5%AE%9E%E7%8E%B0spark%20streaming%E7%9A%84wordcount/</url>
    
    <content type="html"><![CDATA[<p>概念这里就不说了，从案例开始，惯例，hellowrod，哦不，wordcount。</p><span id="more"></span><p>要计算从一个监听 TCP socket 的数据服务器接收到的文本数据（text data）中的字数。<br>主体代码部分跟spark相差不大，毕竟DStream是RDD产生的模板（或者说类）。</p><p>1.导入了 Spark Streaming 类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spark-streaming_2.11&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>2.代码示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//注意本地调试，master必须为local[n],n&gt;1,表示一个线程接收数据，n-1个线程处理数据</span><br><span class="line">SparkConf conf = new SparkConf().setMaster(&quot;local[2]&quot;).setAppName(&quot;streaming word count&quot;);</span><br><span class="line">JavaSparkContext sc = new JavaSparkContext(conf);</span><br><span class="line">//设置日志运行级别</span><br><span class="line">sc.setLogLevel(&quot;WARN&quot;);</span><br><span class="line">JavaStreamingContext ssc = new JavaStreamingContext(sc, Durations.seconds(1));</span><br><span class="line">//创建一个将要连接到hostname:port 的离散流</span><br><span class="line">JavaReceiverInputDStream&lt;String&gt; lines = </span><br><span class="line">ssc.socketTextStream(&quot;master1&quot;, 9999);</span><br><span class="line">JavaPairDStream&lt;String, Integer&gt; counts = </span><br><span class="line">lines.flatMap(x-&gt;Arrays.asList(x.split(&quot; &quot;)).iterator())</span><br><span class="line">.mapToPair(x -&gt; new Tuple2&lt;String, Integer&gt;(x, 1))</span><br><span class="line">.reduceByKey((x, y) -&gt; x + y);</span><br><span class="line"></span><br><span class="line">// 在控制台打印出在这个离散流（DStream）中生成的每个 RDD 的前十个元素</span><br><span class="line">counts.print();</span><br><span class="line">// 启动计算</span><br><span class="line">ssc.start();</span><br><span class="line">ssc.awaitTermination();</span><br></pre></td></tr></table></figure><p>3.建立服务端<br>找台linux服务器，运行netcat小工具：<br><code>nc -lk 9999</code><br>也就是上面代码里socketTextStream的参数.</p><p>4.运行测试<br>本地启动java代码后，控制台会循环打印时间戳。<br>在nc那边随意输入，本地即可实时看到统计结果。<br><img src="http://img.blog.csdn.net/20161216095839430?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja2xpbjkyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>spark</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java8实现spark wordcount并且按照value排序输出</title>
    <link href="/2016/12/14/java8%E5%AE%9E%E7%8E%B0spark%20wordcount%E5%B9%B6%E4%B8%94%E6%8C%89%E7%85%A7value%E6%8E%92%E5%BA%8F%E8%BE%93%E5%87%BA/"/>
    <url>/2016/12/14/java8%E5%AE%9E%E7%8E%B0spark%20wordcount%E5%B9%B6%E4%B8%94%E6%8C%89%E7%85%A7value%E6%8E%92%E5%BA%8F%E8%BE%93%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<p>   最近在学习spark，本来应该是使用scala编程，但是无奈scala没接触过，还得学，就先使用java的spark api练练手，其实发现java8的函数式编程跟scala很多地方异曲同工啊，搞定spark的java api后面学scala应该事半功倍！<br>最开始当然是万年不变的wordcount，加了个排序输出，具体看注释(^o^)&#x2F;</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">SparkConf conf = new SparkConf().setMaster(&quot;local&quot;).setAppName(&quot;word count&quot;);</span><br><span class="line">JavaSparkContext sc = new JavaSparkContext(conf);</span><br><span class="line">JavaRDD&lt;String&gt; lines = sc.textFile(&quot;xxx.txt&quot;);</span><br><span class="line">//使用java8提供的lambda表达式</span><br><span class="line">//一句可以完成wordcount</span><br><span class="line">JavaPairRDD&lt;String, Integer&gt; counts = </span><br><span class="line">lines</span><br><span class="line">//根据&#x27;\001&#x27;分割来源行</span><br><span class="line">.flatMap(line -&gt; Arrays.asList(line.split(&quot;\\001&quot;)).iterator())</span><br><span class="line">//map输出 (单词,1)</span><br><span class="line">.mapToPair(w -&gt; new Tuple2&lt;String, Integer&gt;(w, 1)) </span><br><span class="line">//通过reduce相同key，value值相加</span><br><span class="line">.reduceByKey((x, y) -&gt; x + y); </span><br><span class="line"></span><br><span class="line">//根据得到的value值排序而不是key，默认只提供了根据key排序</span><br><span class="line">//那么想到的思路是，交换key、value，进行key排序，交换回来，完成value排序</span><br><span class="line">counts</span><br><span class="line">//交换key-value，注意类型</span><br><span class="line">.mapToPair(s -&gt; new Tuple2&lt;Integer, String&gt;(s._2, s._1))</span><br><span class="line">//倒序</span><br><span class="line">.sortByKey(false)</span><br><span class="line">//交换key-value，注意类型</span><br><span class="line">.mapToPair(s -&gt; new Tuple2&lt;String, Integer&gt;(s._2, s._1))</span><br><span class="line">//转成集合</span><br><span class="line">.collect()</span><br><span class="line">//输出</span><br><span class="line">.forEach(tuple -&gt; System.out.println(tuple._1() + &quot;: &quot; + tuple._2()));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hadoop java spark</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java spark lambda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>判断文件是否存在，通配符文件匹配发生错误 binary operator expected</title>
    <link href="/2016/11/14/%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%EF%BC%8C%E9%80%9A%E9%85%8D%E7%AC%A6%E6%96%87%E4%BB%B6%E5%8C%B9%E9%85%8D%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%20binary%20operator%20expected/"/>
    <url>/2016/11/14/%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%EF%BC%8C%E9%80%9A%E9%85%8D%E7%AC%A6%E6%96%87%E4%BB%B6%E5%8C%B9%E9%85%8D%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%20binary%20operator%20expected/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">time1=$(date -d &quot;$currentTime&quot; +%s)</span><br><span class="line">time2=$(($time1-24*3600))</span><br><span class="line">filepath=/root/g01/g_01_api_*_$time2.txt</span><br><span class="line">if [ -f $filepath ];</span><br><span class="line">then</span><br><span class="line">echo &#x27;找到匹配的文件&#x27;</span><br><span class="line">for i in $filepath</span><br><span class="line">do</span><br><span class="line">   echo $i</span><br><span class="line">done</span><br><span class="line">echo &quot;执行hive load语句&quot;</span><br><span class="line">hive -e &#x27;load data local inpath &quot;$filepath&quot; into table notify_portal.t_g01 PARTITION(pt=&quot;INIT&quot;);&#x27;</span><br><span class="line">else</span><br><span class="line">echo &quot;文件不存在或者您输入的路径有误$filepath&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><span id="more"></span><p><code>if [ -f $filepath ];</code>这句报错<code>-bash: [: /root/g01/g_01_api_shenzhen_1478966400.txt: binary operator expected</code><br>找了半天错误，最后发现，-f后面根本是不能跟通配符，或者说可以跟通配符，但是除非只有一个文件被匹配上。<br>遂使用<code>if [ -n &quot;ls $filepath&quot; ];</code>来判断，意思是ls命令列出通配符匹配的文件，存在返回true，这个在文件存在的时候是没问题，但是如果不存在，就会报错而不是返回<code>false:No such file or directory</code><br>然后去查，发现有人遇到过一个一样的问题， 解决办法是把标准错误重定向到正确输出，使用<br><code>if [ -n &quot;ls $filepath &gt;/dev/null 2&gt;&amp;1&quot; ];</code>解决。</p><blockquote><p>linux启动后，会默认打开3个文件描述符，分别是：<br>标准输入standard input 0,<br>正确输出standard output 1,<br>错误输出error output 2。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Encryption raised an exception</title>
    <link href="/2016/11/14/Encryption%20raised%20an%20exception/"/>
    <url>/2016/11/14/Encryption%20raised%20an%20exception/</url>
    
    <content type="html"><![CDATA[<p>script-test:<br>     [echo] Testing encrypt.sh<br>     [exec] Exception in thread “main” org.jasypt.exceptions.EncryptionOperationNotPossibleException: Encryption raised an exception. A possible cause is you are using strong encryption algorithms and you have not installed the Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files in this Java Virtual Machine<br>     [exec]     at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.handleInvalidKeyException(StandardPBEByteEncryptor.java:1073)<br>     [exec]     at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.encrypt(StandardPBEByteEncryptor.java:924)<br>     [exec]     at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.encrypt(StandardPBEStringEncryptor.java:642)<br>     [exec]     at azkaban.crypto.CryptoV1_1.encrypt(CryptoV1_1.java:42)<br>     [exec]     at azkaban.crypto.Crypto.encrypt(Crypto.java:49)<br>     [exec]     at azkaban.crypto.EncryptionCLI.main(EncryptionCLI.java:58)</p><p>发现错误是因为jdk没有带jce，遂安装。</p><span id="more"></span><p>How to Install JCE</p><p>Go to the Oracle Java SE download page <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br>Scroll down … Under “Additional Resources” section you will find “Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy File”<br>Download the version that matches your installed JVM E.g. UnlimitedJCEPolicyJDK7.zip<br>Unzip the downloaded zip<br>Copy local_policy.jar and US_export_policy.jar to the $JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;security (Note: these jars will be already there so you have to overwrite them)<br>Then restart your application to get rid of this exception.</p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html">http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html</a></p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hive常用优化方法</title>
    <link href="/2016/10/20/Hive%E5%B8%B8%E7%94%A8%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
    <url>/2016/10/20/Hive%E5%B8%B8%E7%94%A8%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>1、join连接时的优化：当三个或多个以上的表进行join操作时，如果每个on使用相同的字段连接时只会产生一个mapreduce。</p><span id="more"></span><p>2、join连接时的优化：当多个表进行查询时，从左到右表的大小顺序应该是从小到大。原因：hive在对每行记录操作时会把其他表先缓存起来，直到扫描最后的表进行计算<br>3、在where字句中增加分区过滤器。<br>4、当可以使用left semi join 语法时不要使用inner join，前者效率更高。原因：对于左表中指定的一条记录，一旦在右表中找到立即停止扫描。<br>5、如果所有表中有一张表足够小，则可置于内存中，这样在和其他表进行连接的时候就能完成匹配，省略掉reduce 过程。设置属性即可实现，set hive.auto.covert.join&#x3D;true; 用户可以配置希望被优化的小表的大小 set hive.mapjoin.smalltable.size&#x3D;2500000; 如果需要使用这两个配置可置入$HOME&#x2F;.hiverc文件中。<br>6、同一种数据的多种处理：从一个数据源产生的多个数据聚合，无需每次聚合都需要重新扫描一次。<br>例如：insert overwrite table student select *　from employee; insert overwrite table person select * from employee;<br>可以优化成：from employee insert overwrite table student select * insert overwrite table person select *<br>7、limit调优：limit语句通常是执行整个语句后返回部分结果。set hive.limit.optimize.enable&#x3D;true;<br>8、开启并发执行。某个job任务中可能包含众多的阶段，其中某些阶段没有依赖关系可以并发执行，开启并发执行后job任务可以更快的完成。设置属性：set hive.exec.parallel&#x3D;true;<br>9、hive提供的严格模式，禁止3种情况下的查询模式。<br>a：当表为分区表时，where字句后没有分区字段和限制时，不允许执行。<br>b：当使用order by语句时，必须使用limit字段，因为order by 只会产生一个reduce任务。<br>c：限制笛卡尔积的查询。<br>10、合理的设置map和reduce数量。<br>11、jvm重用。可在hadoop的mapred-site.xml中设置jvm被重用的次数。</p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos下wget无法解析主机地址</title>
    <link href="/2016/10/20/centos%E4%B8%8Bwget!%20%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80/"/>
    <url>/2016/10/20/centos%E4%B8%8Bwget!%20%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80/</url>
    
    <content type="html"><![CDATA[<p>wget -4<br>强制使用ipv4</p><span id="more"></span>]]></content>
    
    
    
    <tags>
      
      <tag>centos ipv4</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ambari坑记录</title>
    <link href="/2016/10/14/ambari%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2016/10/14/ambari%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>问题一：<br>此问题是在安装注册主机时遇到的</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(&#x27;ERROR 2015-02-06 20:09:43,441 NetUtil.py:56 - [Errno 1] _ssl.c:492: error:100AE081:elliptic curve routines:EC_GROUP_new_by_curve_name:unknown group</span><br><span class="line">ERROR 2015-02-06 20:09:43,442 NetUtil.py:58 - SSLError: Failed to connect. Please check openssl library versions. </span><br><span class="line">Refer to: https://bugzilla.redhat.com/show_bug.cgi?id=1022468 for more details.</span><br><span class="line">INFO 2015-02-06 20:09:43,442 NetUtil.py:81 - Server at https://Master.domain.dev:8440 is not reachable, sleeping for 10 seconds...</span><br><span class="line">INFO 2015-02-06 20:09:45,343 main.py:83 - loglevel=logging.INFO</span><br><span class="line">INFO 2015-02-06 20:09:45,343 main.py:55 - signal received, exiting.</span><br><span class="line">INFO 2015-02-06 20:09:45,343 ProcessHelper.py:39 - Removing pid file</span><br><span class="line">INFO 2015-02-06 20:09:45,344 ProcessHelper.py:46 - Removing temp files</span><br><span class="line">INFO 2015-02-06 20:10:19,815 main.py:83 - loglevel=logging.INFO</span><br><span class="line">INFO 2015-02-06 20:10:19,816 DataCleaner.py:36 - Data cleanup thread started</span><br><span class="line">INFO 2015-02-06 20:10:19,816 DataCleaner.py:71 - Data cleanup started</span><br><span class="line">INFO 2015-02-06 20:10:19,816 DataCleaner.py:73 - Data cleanup finished</span><br><span class="line">INFO 2015-02-06 20:10:19,973 PingPortListener.py:51 - Ping port listener started on port: 8670</span><br><span class="line">INFO 2015-02-06 20:10:19,973 main.py:227 - Connecting to the server at: https://Master.domain.dev:8440</span><br><span class="line">INFO 2015-02-06 20:10:19,974 NetUtil.py:72 - DEBUG: Trying to connect to the server at https://Master.domain.dev:8440</span><br><span class="line">INFO 2015-02-06 20:10:19,974 NetUtil.py:42 - Connecting to the following url https://Master.domain.dev:8440/cert/ca</span><br><span class="line">ERROR 2015-02-06 20:10:20,023 NetUtil.py:56 - [Errno 1] _ssl.c:492: error:100AE081:elliptic curve routines:EC_GROUP_new_by_curve_name:unknown group</span><br><span class="line">ERROR 2015-02-06 20:10:20,023 NetUtil.py:58 - SSLError: Failed to connect. Please check openssl library versions. </span><br><span class="line">Refer to: https://bugzilla.redhat.com/show_bug.cgi?id=1022468 for more details.</span><br><span class="line">INFO 2015-02-06 20:10:20,023 NetUtil.py:81 - Server at https://Master.domain.dev:8440 is not reachable, sleeping for 10 seconds...</span><br><span class="line">&#x27;, None)</span><br><span class="line"></span><br><span class="line">Connection to Slave5.domain.dev closed.</span><br><span class="line">SSH command execution finished</span><br><span class="line">host=Slave5.domain.dev, exitcode=0</span><br><span class="line">Command end time 2015-02-06 12:07:47</span><br><span class="line"></span><br><span class="line">Registering with the server...</span><br><span class="line">Registration with the server failed.</span><br></pre></td></tr></table></figure><p>解决方法：<br>一下是官方论坛中给出的方法，很好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Platforms:</span><br><span class="line"></span><br><span class="line">RHEL / CentOS 6.5</span><br><span class="line">Ambari 1.4 or later</span><br><span class="line">Root Cause: The OpenSSL library available and installed by default on RHEL/CentOS 6.5 has a bug. Refer to https://bugzilla.redhat.com/show_bug.cgi?id=1025598 for detailed information on the bug.</span><br><span class="line"></span><br><span class="line">Remedy:</span><br><span class="line"></span><br><span class="line">Check the OpenSSL library version installed on your host(s):</span><br><span class="line">rpm -qa | grep openssl</span><br><span class="line"></span><br><span class="line">openssl-1.0.1e-15.el6.x86_64</span><br><span class="line"></span><br><span class="line">If the output says openssl-1.0.1e-15.x86_64 (1.0.1 build 15) you will need to upgrade the OpenSSL library by running the following command:</span><br><span class="line">yum upgrade openssl</span><br><span class="line"></span><br><span class="line">Verify you have the newer version of OpenSSL (1.0.1 build 16):</span><br><span class="line">rpm -qa | grep openssl</span><br><span class="line"></span><br><span class="line">openssl-1.0.1e-16.el6.x86_64</span><br><span class="line"></span><br><span class="line">Restart Ambari Agent(s) and Click Retry Failed�0�9 on the Wizard</span><br></pre></td></tr></table></figure><p>问题二</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.hadoop.security.AccessControlException: org.apache.hadoop.security.AccessControlException: Permission denied: user=Administrator, access=WRITE, inode=&quot;hadoop&quot;: hadoop:supergroup:rwxr-xr-x</span><br></pre></td></tr></table></figure><p>其实这个错误的原因很容易看出来，用户Administator在hadoop上执行写操作时被权限系统拒绝.<br>dfs.permissions修改为False</p><p>问题三<br>启动namenode报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/var/lib/ambari-agent/cache/stacks/HDP/2.0.6/services/HDFS/package/scripts/namenode.py&quot;, line 134, in &lt;module&gt;</span><br><span class="line">    NameNode().execute()</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/libraries/script/script.py&quot;, line 123, in execute</span><br><span class="line">    method(env)</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/libraries/script/script.py&quot;, line 233, in restart</span><br><span class="line">    self.start(env)</span><br><span class="line">  File &quot;/var/lib/ambari-agent/cache/stacks/HDP/2.0.6/services/HDFS/package/scripts/namenode.py&quot;, line 46, in start</span><br><span class="line">    namenode(action=&quot;start&quot;)</span><br><span class="line">  File &quot;/var/lib/ambari-agent/cache/stacks/HDP/2.0.6/services/HDFS/package/scripts/hdfs_namenode.py&quot;, line 60, in namenode</span><br><span class="line">    only_if=dfs_check_nn_status_cmd #skip when HA not active</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/base.py&quot;, line 148, in __init__</span><br><span class="line">    self.env.run()</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/environment.py&quot;, line 149, in run</span><br><span class="line">    self.run_action(resource, action)</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/environment.py&quot;, line 115, in run_action</span><br><span class="line">    provider_action()</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/providers/system.py&quot;, line 237, in action_run</span><br><span class="line">    path=self.resource.path)</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/shell.py&quot;, line 36, in checked_call</span><br><span class="line">    return _call(command, logoutput, True, cwd, env, preexec_fn, user, wait_for_finish, timeout, path)</span><br><span class="line">  File &quot;/usr/lib/python2.6/site-packages/resource_management/core/shell.py&quot;, line 101, in _call</span><br><span class="line">    err_msg = Logger.get_protected_text((&quot;Execution of &#x27;%s&#x27; returned %d. %s&quot;) % (command, code, out))</span><br><span class="line">UnicodeDecodeError: &#x27;ascii&#x27; codec can&#x27;t decode byte 0xe6 in position 116: ordinal not in range(128)</span><br></pre></td></tr></table></figure><p>在你python的安装目录下的Lib目录,找到site.py,<br>修改def setencoding()方法 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def setencoding():</span><br><span class="line"> ..... .... if 0:</span><br><span class="line"> #Enabletosupportlocaleawaredefaultstringencodings. </span><br></pre></td></tr></table></figure><p> 把那个if 0改为if 1</p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ambari离线安装以及hadoop环境搭建详细过程</title>
    <link href="/2016/10/14/ambari%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Ahadoop%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B/"/>
    <url>/2016/10/14/ambari%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Ahadoop%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>一、安装环境<br>六台相同配置的虚拟机</p><span id="more"></span><p>OS:CentOS release 6.5 (Final)(x86_64)<br>Cores (CPU):8 (8)<br>Disk:50GB<br>Memory:8GB</p><p>最好先安装自己的jdk，配置好环境变量。</p><p>二、安装包下载<br>安装包过大(最大的hdp包3GB)，虚拟机环境外网网络不稳定，在线安装太耗时，只能用制作离线源方式进行安装，so，先下载以下安装包，备用。<br><a href="http://public-repo-1.hortonworks.com/ambari/centos6/ambari-1.7.0-centos6.tar.gz">http://public-repo-1.hortonworks.com/ambari/centos6/ambari-1.7.0-centos6.tar.gz</a><br><a href="http://public-repo-1.hortonworks.com/HDP/centos6/HDP-2.2.0.0-centos6-rpm.tar.gz">http://public-repo-1.hortonworks.com/HDP/centos6/HDP-2.2.0.0-centos6-rpm.tar.gz</a><br><a href="http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.20/repos/centos6/HDP-UTILS-1.1.0.20-centos6.tar.gz">http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.20/repos/centos6/HDP-UTILS-1.1.0.20-centos6.tar.gz</a></p><p>三、配置hostname以及hosts<br>以便节点间通讯，hadoop集群管理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network ，修改 HOSTNAME=master1</span><br><span class="line"></span><br><span class="line">vi /etc/hosts</span><br><span class="line">172.16.1.137 master1</span><br><span class="line">172.16.1.138 master2</span><br><span class="line">172.16.1.139 slave1</span><br><span class="line">172.16.1.140 slave2</span><br><span class="line">172.16.1.149 slave3</span><br><span class="line">172.16.1.136 slave4</span><br></pre></td></tr></table></figure><p>以master1节点为例，其他同理。</p><p>四、关闭iptables，关闭SELinux<br>避免节点间通讯问题，关闭iptables&amp;SELinux。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>五、安装ntp服务<br>节点间需要时间同步，否则会失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp</span><br><span class="line">service ntpd start</span><br></pre></td></tr></table></figure><p>六、ssh无密码登陆配置<br>只需设置ambari安装节点（这里选取slave4为安装节点）到其他节点的无密码登陆即可。<br>在slave4上依次执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">chmod 700 ~/.ssh  </span><br><span class="line">chmod 600 ~/.ssh/authorized_keys </span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>至此，本机ssh无密码登陆配置成功，可以ssh slave4尝试下是否成功，接下来将生成的authorized_keys复制到其他节点对应位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/authorized_keys root@master1:/root/.ssh/authorized_keys</span><br><span class="line">scp ~/.ssh/authorized_keys root@master2:/root/.ssh/authorized_keys</span><br><span class="line">scp ~/.ssh/authorized_keys root@slave1:/root/.ssh/authorized_keys</span><br><span class="line">scp ~/.ssh/authorized_keys root@slave2:/root/.ssh/authorized_keys</span><br><span class="line">scp ~/.ssh/authorized_keys root@slave3:/root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>至此，slave4对其他节点ssh无密码登陆配置成功，可以ssh下对应节点尝试是否成功。</p><p>七、制作离线安装源<br>选一台机器，作为离线源服务器，这里同样是slave4（ps.为什么都是slave4，主要是之前其他机子都有点问题，手动苦笑ing）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br><span class="line">service httpd start</span><br></pre></td></tr></table></figure><p>访问slave4的80端口</p><p>启动成功，<br>接着，创建两个目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir  /var/www/html/ambari</span><br><span class="line">mkdir  /var/www/html/hdp</span><br></pre></td></tr></table></figure><p>解压ambari-1.7.0-centos6.tar.gz 和HDP-UTILS-1.1.0.20-centos6.tar.gz 到目录 &#x2F;var&#x2F;www&#x2F;html&#x2F;ambari<br>命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar  zxvf  ambari-1.7.0-centos6.tar.gz  -C /var/www/html/ambari</span><br><span class="line">tar  zxvf  HDP-UTILS-1.1.0.20-centos6.tar.gz  -C /var/www/html/ambari</span><br></pre></td></tr></table></figure><p>进入&#x2F;var&#x2F;www&#x2F;html&#x2F;ambari 目录，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createrepo  ./ </span><br></pre></td></tr></table></figure><p>ambari本地源制作完成</p><p>解压HDP-2.2.0.0-centos6-rpm.tar.gz 到目录 &#x2F;var&#x2F;www&#x2F;html&#x2F;hdp<br>命令：<code>tar  zxvf  HDP-2.2.0.0-centos6-rpm.tar.gz  -C /var/www/html/hdp</code><br>进入&#x2F;var&#x2F;www&#x2F;html&#x2F;hdp 目录，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createrepo  ./ </span><br></pre></td></tr></table></figure><p>hadoop本地源制作完成</p><p>进入<a href="http://slave4/ambari/">http://slave4/ambari/</a></p><p>以及<a href="http://slave4/hdp/">http://slave4/hdp/</a></p><p>至此，离线源制作部分成功。</p><p>八、安装ambari<br>vim  &#x2F;etc&#x2F;yum.repos.d&#x2F;ambari.repo  添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[ambari-1.7]</span><br><span class="line">name=Ambari 1.7</span><br><span class="line">baseurl=http://slave4/ambari/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[HDP-UTILS-1.1.0.20]</span><br><span class="line">name=Hortonworks Data Platform Utils Version - HDP-UTILS-1.1.0.20</span><br><span class="line">baseurl=http://slave4/ambari/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>slave4为上一步制作离线源的主机。<br>执行安装ambari 命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ambari-server</span><br></pre></td></tr></table></figure><p>开始配置ambari 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server setup</span><br></pre></td></tr></table></figure><p>最好选择3，jdk提前自己安装，只需要设置JAVA_HOME的路径即可，否则选择1、2的话，需要通过网络下载，速度很慢。<br>Success后，可以启动了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server start</span><br></pre></td></tr></table></figure><p>九、给ambari配置本地hadoop<br>进入目录：&#x2F;var&#x2F;lib&#x2F;ambari-server&#x2F;resources&#x2F;stacks&#x2F;HDP&#x2F;2.2&#x2F;repos</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vi repoinfo.xml</span><br><span class="line">&lt;os type=&quot;redhat6&quot;&gt;</span><br><span class="line">    &lt;repo&gt;</span><br><span class="line">      &lt;baseurl&gt;http://slave4/hdp&lt;/baseurl&gt;</span><br><span class="line">      &lt;repoid&gt;HDP-2.2&lt;/repoid&gt;</span><br><span class="line">      &lt;reponame&gt;HDP&lt;/reponame&gt;</span><br><span class="line">    &lt;/repo&gt;</span><br><span class="line">    &lt;repo&gt;</span><br><span class="line">      &lt;baseurl&gt;http://slave4/ambari&lt;/baseurl&gt;</span><br><span class="line">      &lt;repoid&gt;HDP-UTILS-1.1.0.20&lt;/repoid&gt;</span><br><span class="line">      &lt;reponame&gt;HDP-UTILS&lt;/reponame&gt;</span><br><span class="line">    &lt;/repo&gt;</span><br><span class="line">  &lt;/os&gt;</span><br></pre></td></tr></table></figure><p>修改redhat6中的配置，node3为ambari安装的节点，根据自己安装的实际节点配置<br>这样在ambari执行hadoop安装时，会将本地源地址配置到所有主机上，在为所有主机安装ambari-agent时，会将ambari节点下的&#x2F;etc&#x2F;yum.repo&#x2F;ambari.repo文件复制到所有主机源地址。</p><p>十、安装hadoop集群环境以及各组件<br>浏览器进入<a href="http://slave4:8080/">http://slave4:8080/</a><br>账户：admin 密码：admin<br>接下来一步步按提示即可，有一些要注意的点：<br>第三步手动设置下redhat6的源地址为之前做的离线源：<br>redhat6 (HDP-2.2):<br><a href="http://slave4/hdp/HDP/centos6/2.x/GA/2.2.0.0/">http://slave4/hdp/HDP/centos6/2.x/GA/2.2.0.0/</a></p><p>redhat6 (HDP-UTILS-1.1.0.20):<br><a href="http://slave4/ambari/HDP-UTILS-1.1.0.20/repos/centos6/">http://slave4/ambari/HDP-UTILS-1.1.0.20/repos/centos6/</a></p><p>第四步INSTALL OPTION<br>配置hosts里的节点hostname<br>把slave4下生成的私钥导入</p><p>然后第五步会检查是否可以跟各节点通讯，可能会失败，查看详情，但无非是防火墙没禁，ntp服务没装之类的，warm尽量全部解决掉，要不然可能会影响后面的安装。</p><p>最后第二步，会开始到个节点安装各组件，此处出现问题可能性最大，有两个很明显的问题<br>①遇到的关于yum的错误(异常当时忘记记录了orz)，无法连接映像地址等，解决办法：<br>清空&amp;重建yum缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean</span><br><span class="line">yummakecache</span><br></pre></td></tr></table></figure><p>②(‘ERROR 2015-02-06 20:09:43,441 NetUtil.py:56 - [Errno 1] _ssl.c:492: error:100AE081:elliptic curve routines:EC_GROUP_new_by_curve_name:unknown group<br>ERROR 2015-02-06 20:09:43,442 NetUtil.py:58 - SSLError: Failed to connect. Please check openssl library versions.<br>这是openssl版本导致的错误<br>解决办法：<code>yum upgrade openssl</code></p><p>Bingo</p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hadoop ambari</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql 身份证明号码 正则表达式</title>
    <link href="/2016/09/12/mysql%20%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%98%8E%E5%8F%B7%E7%A0%81%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2016/09/12/mysql%20%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%98%8E%E5%8F%B7%E7%A0%81%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>匹配15和18位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from sfzmhm_table where sfzmhm regexp &#x27;^[1-9][[:digit:]]&#123;7&#125;((0[[:digit:]])|(1[0-2]))(([0|1|2][[:digit:]])|3[0-1])[[:digit:]]&#123;3&#125;$|^[1-9][[:digit:]]&#123;5&#125;[1-9][[:digit:]]&#123;3&#125;((0[[:digit:]])|(1[0-2]))(([0|1|2][[:digit:]])|3[0-1])[[:digit:]]&#123;3&#125;([0-9]|X)$&#x27;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则表达式 mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>建模交流学习</title>
    <link href="/2016/08/11/%E5%BB%BA%E6%A8%A1%E4%BA%A4%E6%B5%81%E5%AD%A6%E4%B9%A0/"/>
    <url>/2016/08/11/%E5%BB%BA%E6%A8%A1%E4%BA%A4%E6%B5%81%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>以下是今天（20160811）跟阿里的同学交流的关于建模方面的心得。</p><span id="more"></span><p>1.规则-经验-机器学习<br>有的时候规则其实更简单，只不过这是人为的经验成分<br>机器学习其实是想通过大数据学习这种人为经验</p><p>2.模型是注重性能还是可解释性？<br>（1）如果可解释性要强的话就要牺牲性能（预测的结果好坏），如果只追求性能的话可以用一些非线性（gbdt，dnn等）<br>（2）如果要求可解释性最好用一些线性的模型（最简单的最常用的也就是LR逻辑回归）</p><p>3.特征筛选<br>不管什么模型，特征的筛选和数据预处理都很重要！<br>woe简单的反应了一个特征跟label之间的强弱关系<br>但是有的时候特征是相关的，比如判断一个人的经济能力（特征1：他有房，特征二： 他有存款） ，这2个特征某种程度上是相关的，一起放进来会有影响的。我们正常理解的是有房个数越多越有钱，存款越多越有钱，但是实际可能出来 有房是正的，存款是负的，这种不合常理的情况&#x3D;&#x3D;》结果显示存款越多越没有钱，这种就是相关导致的，如果2个特征的相关系统超过0.8了，就可以去掉一个了，结果影响倒不会太大，但是你的模型肯定性不好。</p><p>4.数据的预处理，简单的说归一化离散化<br>一般来说离散化比归一化性能要好<br>因为离散化数据更碎，一定程度上可以模拟出非线性的关系</p><p>5.iv<br>iv 是 看特征跟label的关系，一般iv比较强的，优先加入特征队列，能看出特征的重要程度。</p><p>6.关于pai的使用<br>数据可以拿训练出来的模型直接预测<br>预测有2个输入：一个是模型，一个是预测数据<br>评估的输入是预测的输出</p><p>7.关于计算auc<br>auc要看训练集（得出模型的数据集）、验证集（验证模型是否正确的数据集）、测试集上的值<br>训练集和验证集不要过拟合忒严重</p><p>8.模型调优实例<br>根据baseline验证当前模型性能<br>把数据根据用户和时间维度划分一下<br>用你第一次的结果当做baseline，然后后面逐步优化<br>比如要预测违章，label是近三个月是否有违章记录（有1，无0），那么划分维度为就是时间，label定义三个月，那时间就是3个月的间隔，好比用1-3月的数据作为训练数据，那么一般我们把4-6月的数据作为预测数据，而1-3月份里的用户可以在用户维度拆分为训练集和验证集。<br>以上都是数据预处理的部分。</p><p>9.建模理解<br>其实建模真正耗费的时间是分析数据上，第一要清洗数据，第二选择特征，pai无非就是根据你选择的特征 跑出一个模型，训练集与特征的好坏是pai不能选择的，好比，你都选择的是无关痛痒的特征，模型肯定不会好。<br>还有脏数据也要记得处理，对模型结果有影响。</p><p>10.训练集和验证集<br>训练集、验证集比例一般分为7：3。<br>数据的处理很重要，直接决定模型的结果，至于用什么，其实差别不大，训练集得出的模型，在验证集上看看，如果验证集的性能比训练集的好太多，那就说明模型过拟合了（99%成功），一般情况下，验证集跟训练集结果差不多就可以了。<br>预测一般是预测相对于训练而言未来的事件<br>验证集可以看出模型的稳定性<br>训练集和验证集最好随机拆分</p><p>11.关于特征<br>建模其实是个蛮精细的活，特征多我们需要根据特征重要程度剔除特征，有得时候特征少，我们需要创建特征。<br>常见的就是特征相乘，这个就是指数级别的增长，比如你有100个特征，两两相乘就是10000个特征，比如是否有车是一个特征，然后是否有稳定的工作也是一个特征，这2个特征交叉相乘就是 有车并且是否有稳定工作，特征意义就不一样了，类似的方法很多。</p><p>14.关于指标加重权值<br>好比你有30w的数据，但是里面label&#x3D;1的只有100个，占比忒少，模型基本训练不出来好的结果，可以适当的让label&#x3D;1的样本多点，最简单的办法就是复制样本（但是要防止过拟合，举个最极端的例子，label&#x3D;1的只有一条数据，这个人是个男的，把这个人的样本复制100w份，导致过拟合，模型结果就会显示性别&#x3D;男的更容易出事故，但是事实并不是这样），但是复制需要适量。<br>比如一个正样本有效特征忒少，好比你有100个特征，但是这条正样本只有性别为男这一个特征，其他的特征都是空，你复制了100分，就会增加性别这个特征的权重，你复制正样本会导致无效特征权重增加。<br>比如酒驾对应与发生事故，模型计算出来，我们发现酒驾权重很小或vi值很小，但是我们认为醉酒这个特征权重应该是比较大的，这就是实际结果与预期的差异。但是我们需要加重酒驾的权重，这个时候就可以固定这个特征的权重，比如逻辑回归就是简单的加权求和，我这个特征我就给1.5。<br>就是每个特征 会有个自己的计算公式，100个特征每个都有一个，固定住了酒驾，相当于你先设定好,你原来要求解100个特征的权重值,现在我固定住一个了 他就是x&#x3D;1.5，有多少个特征，不就是求解多少个变量的权重值么，只不过是矩阵计算的，利用梯度求解最优解，只是你现在固定一个值，偷懒的做法就是：酒驾的特征不放进去，先训练99的特征 ，然后把你固定的酒驾特征权重加到模型输出里，但是这样结果不一定好，如果你的样本质量很高的话，这样没啥问题。</p><p>真正建模得出一个好模型需要的时间很久的，不断的尝试不断的提升。</p>]]></content>
    
    
    <categories>
      
      <category>阿里云 建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大数据 机器学习 经验 预测 性能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xx省驾驶员信用评分模型</title>
    <link href="/2016/08/05/xx%E7%9C%81%E9%A9%BE%E9%A9%B6%E5%91%98%E4%BF%A1%E7%94%A8%E8%AF%84%E5%88%86%E6%A8%A1%E5%9E%8B/"/>
    <url>/2016/08/05/xx%E7%9C%81%E9%A9%BE%E9%A9%B6%E5%91%98%E4%BF%A1%E7%94%A8%E8%AF%84%E5%88%86%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<p><span class="token md md-gt" style="font-family:&quot;microsoft yahei&quot;; font-size:18px; line-height:29.7px; white-space:pre-wrap; outline:none!important">&gt;</span><span style="color:rgb(128,128,128); font-family:&quot;microsoft yahei&quot;; font-size:18px; line-height:29.7px; white-space:pre-wrap">公安项目有签订保密协议，敏感字段和与技术无关字段我已删减</span></p><p><span style="font-family:microsoft yahei; color:#808080"><span style="font-size:18px; line-height:29.7px; white-space:pre-wrap">&nbsp;采用的是&nbsp;信用评分卡模型，计算WOE&#20540;获得最终评分。</span></span></p><p><span style="font-family:microsoft yahei; color:#808080"><span style="font-size:18px; line-height:29.7px; white-space:pre-wrap">所有计算过程在ODPS中完成！</span></span></p><p><span style="color:rgb(128,128,128); font-family:&quot;microsoft yahei&quot;; font-size:18px; line-height:29.7px; white-space:pre-wrap"></span></p><h3>1.“Y”变量定义</h3><p></p><p>为了综合评估普通驾驶员的道路交通能力，此次建模的目标为驾驶员是否有发生事故，若有则为坏样本，整体的坏样本率为1.314%，通过统计可以发现：</p><span id="more"></span><table border="0" cellspacing="0" cellpadding="0" width="197"><tbody><tr><td nowrap="nowrap" style="background:#BFBFBF"><p align="left">是否发生事故</p></td><td nowrap="nowrap" style="background:#BFBFBF"><p align="left">计数</p></td></tr><tr><td nowrap="nowrap"><p align="left">0</p></td><td nowrap="nowrap"><p align="right">296058</p></td></tr><tr><td nowrap="nowrap"><p align="left">1</p></td><td nowrap="nowrap"><p align="right">3942</p></td></tr><tr><td nowrap="nowrap" style="background:#DCE6F1"><p align="left"><strong>总计</strong></p></td><td nowrap="nowrap" style="background:#DCE6F1"><p align="right"><strong>300000</strong></p></td></tr></tbody></table><br><p><span style="color:rgb(128,128,128); font-family:&quot;microsoft yahei&quot;; font-size:18px; line-height:29.7px; white-space:pre-wrap"></span></p><h3>2.建模算法</h3><p></p><p>现在采用的是WOE变量方式建模进行驾驶员评分,首先是获得各指标woe&#20540;，公式：</p><p><img src="" alt=""><img src="https://img-blog.csdn.net/20160806135813967" alt=""><br></p><p><img src="" alt="" style="color:rgb(128,128,128); font-family:&quot;microsoft yahei&quot;; font-size:18px; line-height:29.7px; white-space:pre-wrap"></p><p>(b­<sub>i</sub>：指标i纬度坏样本数，b<sub>c</sub>：总坏样本数，g­<sub>i</sub>：指标i纬度好样本数，g<sub>c</sub>：总好样本数)；</p><p>然后获得初始分数(0-1之间)：</p><p><img src="" alt=""><img src="" alt=""><img src="https://img-blog.csdn.net/20160806135831694" alt=""><br></p><p>(woe<sub>j</sub>：j指标woe&#20540;)</p><p>根据讨论结果，最低分取30分，做相应线性变换，得到真实分数：</p><p><img src="" alt=""><img src="" alt=""><img src="https://img-blog.csdn.net/20160806135840655" alt=""><br></p><p><br></p><p></p><h3>3.单字段性能—IV指标</h3><p></p><p>进一步验证各字段的IV&#20540;：<span style="line-height:29.7px"> </span></p><p>得到结果如下：</p><p><table border="0" cellpadding="0" cellspacing="0" width="144" style="border-collapse:collapse; width:108pt"><colgroup><col width="72" span="2" style="width:54pt"></colgroup><tbody><tr height="23" style="height:17.25pt"><td height="23" class="xl67" width="72" style="height:17.25pt; width:54pt">序号</td><td class="xl65" width="72" style="width:54pt"><span lang="EN-US">IV&#20540;</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">1</td><td class="xl66"><span lang="EN-US">0.31722</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">2</td><td class="xl66"><span lang="EN-US">0.27158</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">3</td><td class="xl66"><span lang="EN-US">0.25169</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">4</td><td class="xl66"><span lang="EN-US">0.19057</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">5</td><td class="xl66"><span lang="EN-US">0.13439</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">6</td><td class="xl66"><span lang="EN-US">0.09315</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">7</td><td class="xl66"><span lang="EN-US">0.09128</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">8</td><td class="xl66"><span lang="EN-US">0.08199</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">9</td><td class="xl66"><span lang="EN-US">0.07267</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">10</td><td class="xl66"><span lang="EN-US">0.0669</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">11</td><td class="xl66"><span lang="EN-US">0.04222</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">12</td><td class="xl66"><span lang="EN-US">0.02809</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">13</td><td class="xl66"><span lang="EN-US">0.02797</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">14</td><td class="xl66"><span lang="EN-US">0.02783</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">15</td><td class="xl66"><span lang="EN-US">0.02665</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">16</td><td class="xl66"><span lang="EN-US">0.02352</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">17</td><td class="xl66"><span lang="EN-US">0.02059</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">18</td><td class="xl66"><span lang="EN-US">0.01752</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">19</td><td class="xl66"><span lang="EN-US">0.01541</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">20</td><td class="xl66"><span lang="EN-US">0.01458</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">21</td><td class="xl66"><span lang="EN-US">0.01439</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">22</td><td class="xl66"><span lang="EN-US">0.01439</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">23</td><td class="xl66"><span lang="EN-US">0.01439</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">24</td><td class="xl66"><span lang="EN-US">0.01439</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">25</td><td class="xl66"><span lang="EN-US">0.0134</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">26</td><td class="xl66"><span lang="EN-US">0.00827</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">27</td><td class="xl66"><span lang="EN-US">0.00383</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">28</td><td class="xl66"><span lang="EN-US">0.00139</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">29</td><td class="xl66"><span lang="EN-US">0.00132</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">30</td><td class="xl66"><span lang="EN-US">0.00044</span></td></tr><tr height="23" style="height:17.25pt"><td height="23" class="xl67" style="height:17.25pt">31</td><td class="xl66"><span lang="EN-US">0.00025</span></td></tr></tbody></table></p><p><span style="line-height:29.7px">IV是全称InformationValue，是衡量单自变量对于应变量显著程度的指标，通常IV&#20540;越高，变量的显著性越强；</span></p><p>此模型变量中IV&#20540;大于0.05以上的变量超过10个。</p><h3>4.模型整体性能--KS指标</h3><p>通过整体的评估，模型整体的KS指标如下：</p><p>KS = 0.303768</p><p><img src="https://img-blog.csdn.net/20160806140102398?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p><p><img src="" alt=""></p><p>注：KS指标衡量的是好样本和坏样本的累计分布比例之间具体最大的差距。好样本和坏样本之间的距离越大，KS指标范围在0%-100%之间，KS指标越高，模型的区分能力越强；</p><p>该模型的KS达到30%&#43;，性能OK。</p><p>&nbsp;</p><h3>5.模型整体性能—ROC指标</h3><p>经计算：</p><p>AUC=0.703637</p><p><img src="" alt=""></p><p><img src="https://img-blog.csdn.net/20160806140145508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p><p>注：ROC曲线及AUC系数为评估模型对客户进行正确区分的指标。ROC曲线描述了在一定累计好客户比例下的累计坏客户的比例， ROC曲线越往左上角靠近，模型的分别能力越强。AUC系数为ROC曲线下方的面积，数&#20540;范围在0.5-1之间，AUC系数越高，模型的区分能力越强。</p>该模型的AUC&gt;=0.7，性能较好。]]></content>
    
    
    
    <tags>
      
      <tag>信用卡评分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>吐槽阿里云PAI</title>
    <link href="/2016/08/05/%E5%90%90%E6%A7%BD%E9%98%BF%E9%87%8C%E4%BA%91PAI/"/>
    <url>/2016/08/05/%E5%90%90%E6%A7%BD%E9%98%BF%E9%87%8C%E4%BA%91PAI/</url>
    
    <content type="html"><![CDATA[<p>之前在杭州培训的时候有接触过PAI，说实话是挺好用的。<br>直接接入ODPS数据，使用ODPS的引擎做机器学习，训练模型，体验还是不错的，基本的算法都有，满足基本预测挖掘数据的要求。</p><span id="more"></span><p>一个完整的建模步骤包括以下6个步骤：<br>step1：数据准备<br>step2：数据预处理<br>step3：数据可视化<br>step4：算法建模<br>step5：多模型评估<br>step6：数据存储<br>PAI全部可以完成上述步骤，就我测试来说，得到的模型效果不错。</p><p>然而，以上说的都是公网版本的PAI…<br>到了现在私有云的开发，PAI完全没办法干活，配合阿里PAI那边的技术人员，先是修复了跑不起来的情况，然后各种调参数，最终还是没跑起来，原因以下几点：<br>1.ODPS对应PAI的版本过低，造成各种参数不支持，毕竟PAI还是基于ODPS的；<br>2.PAI本身版本过低，造成很多公有云上有的组件，私有云上没有，诸如选项卡这类处理非数值型的组件没有。<br>然后就OVER了，只能自己默默建模，计算…</p><p>详情见下一篇，评分模型建立…</p>]]></content>
    
    
    <categories>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云 PAI 机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些分布式计算框架</title>
    <link href="/2016/06/14/%E4%B8%80%E4%BA%9B%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E6%A1%86%E6%9E%B6/"/>
    <url>/2016/06/14/%E4%B8%80%E4%BA%9B%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E6%A1%86%E6%9E%B6/</url>
    
    <content type="html"><![CDATA[<p>1） MapReduce:  这个框架人人皆知，它是一种离线计算框架，将一个算法抽象成Map和Reduce两个阶段进行处理，非常适合数据密集型计算。</p><span id="more"></span><p>2） Spark:  我们知道，MapReduce计算框架不适合（不是不能做，是不适合，效率太低）迭代计算（常见于machine learning领域，比如PageRank）和交互式计算（data mining领域，比如SQL查询），MapReduce是一种磁盘计算框架，而Spark则是一种内存计算框架，它将数据尽可能放到内存中以提高迭代应用和交互式应用的计算效率。官方首页：<a href="http://spark-project.org/">http://spark-project.org/</a><br>3） Storm:  MapReduce也不适合进行流式计算、实时分析，比如广告点击计算等，而Storm则更擅长这种计算、它在实时性要远远好于MapReduce计算框架。官方首页：<a href="http://storm-project.net/">http://storm-project.net/</a><br>4） S4: Yahoo开发的流式计算框架，与Storm较为类似。官方首页：<a href="http://incubator.apache.org/s4/">http://incubator.apache.org/s4/</a><br>5） Open MPI: 非常经典的消息处理框架，非常适合高性能计算，现在仍被广泛使用。<br>6） HAMA:  基于BSP（bulk-synchronous parallel model）模型的分布式计算框架，与Google的Pregel类似，可用于大规模科学计算，如矩阵，图算法，网络算法等，官方首页：<a href="http://hama.apache.org/%E3%80%82">http://hama.apache.org/。</a><br>7） Cloudera Impala&#x2F; Apache Drill: 基于Hadoop的更快的SQL查询引擎（比Hive快得多），Google Dremel的模仿者。Cloudera Impala官方首页：<a href="https://github.com/cloudera/impala%EF%BC%8CApache">https://github.com/cloudera/impala，Apache</a> Drill官方首页：<a href="http://incubator.apache.org/drill/">http://incubator.apache.org/drill/</a><br>8） Giraph：图算法处理框架，采用BSP模型，可用于计算pagerank，shared connections, personalization-based popularity等迭代类算法。官方首页：<a href="http://giraph.apache.org/">http://giraph.apache.org/</a></p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>分布式计算 mapreduce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hbase安装</title>
    <link href="/2016/05/25/Hbase%E5%AE%89%E8%A3%85/"/>
    <url>/2016/05/25/Hbase%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>hbase安装<br></p><span id="more"></span><p>export HBASE_HOME&#x3D;&#x2F;home&#x2F;hadoop&#x2F;hbase-1.0.1<br><br>export PATH&#x3D;$PATH:$HBASE_HOME&#x2F;bin<br><br><br><br><br><br>vi conf&#x2F;hbase-env.sh<br><br>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.7.0_65<br><br>export HBASE_MANAGES_ZK&#x3D;true<br><br><br><br><br><br>vi hbase-site.xml&amp;nbsp;<br><br>&lt;configuration&gt;<br><br>&amp;nbsp; &amp;nbsp; &lt;property&gt;<br><br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;name&gt;hbase.rootdir&lt;&#x2F;name&gt;<br><br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;value&gt;hdfs:&#x2F;&#x2F;hadoop:8020&#x2F;hbase&lt;&#x2F;value&gt;<br><br>&amp;nbsp; &amp;nbsp; &lt;&#x2F;property&gt;<br><br>&amp;nbsp; &amp;nbsp; &lt;property&gt;<br><br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;name&gt;hbase.cluster.distributed&lt;&#x2F;name&gt;<br><br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;value&gt;true&lt;&#x2F;value&gt;<br><br>&amp;nbsp; &amp;nbsp; &lt;&#x2F;property&gt;<br><br>&lt;&#x2F;configuration&gt;</p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>启动hive报错：[ERROR] Terminal initialization failed; falling back to unsupported</title>
    <link href="/2016/05/12/%E5%90%AF%E5%8A%A8hive%E6%8A%A5%E9%94%99%EF%BC%9A%5BERROR%5D%20Terminal%20initialization%20failed;%20falling%20back%20to%20unsupported/"/>
    <url>/2016/05/12/%E5%90%AF%E5%8A%A8hive%E6%8A%A5%E9%94%99%EF%BC%9A%5BERROR%5D%20Terminal%20initialization%20failed;%20falling%20back%20to%20unsupported/</url>
    
    <content type="html"><![CDATA[<p>﻿﻿[ERROR] Terminal initialization failed; falling back to unsupported</p><span id="more"></span><p>java.lang.IncompatibleClassChangeError: Found class jline.Terminal, but interface was expected<br>at jline.TerminalFactory.create(TerminalFactory.java:101)<br>at jline.TerminalFactory.get(TerminalFactory.java:158)<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:229)<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:221)<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:209)<br>at org.apache.hadoop.hive.cli.CliDriver.getConsoleReader(CliDriver.java:773)<br>at org.apache.hadoop.hive.cli.CliDriver.executeDriver(CliDriver.java:715)<br>at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:675)<br>at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:615)<br>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br>at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>at java.lang.reflect.Method.invoke(Method.java:606)<br>at org.apache.hadoop.util.RunJar.run(RunJar.java:221)<br>at org.apache.hadoop.util.RunJar.main(RunJar.java:136)</p><p>Exception in thread “main” java.lang.IncompatibleClassChangeError: Found class jline.Terminal, but interface<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:230)<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:221)<br>at jline.console.ConsoleReader.<init>(ConsoleReader.java:209)<br>at org.apache.hadoop.hive.cli.CliDriver.getConsoleReader(CliDriver.java:773)<br>at org.apache.hadoop.hive.cli.CliDriver.executeDriver(CliDriver.java:715)<br>at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:675)<br>at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:615)<br>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br>at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>at java.lang.reflect.Method.invoke(Method.java:606)<br>at org.apache.hadoop.util.RunJar.run(RunJar.java:221)<br>at org.apache.hadoop.util.RunJar.main(RunJar.java:136)[ERROR] Terminal initialization failed; falling back to unsupported<br>java.lang.IncompatibleClassChangeError: Found class jline.Terminal, but interface was expected<br> at jline.TerminalFactory.create(TerminalFactory.java:101)<br> at jline.TerminalFactory.get(TerminalFactory.java:158)<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:229)<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:221)<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:209)<br> at org.apache.hadoop.hive.cli.CliDriver.getConsoleReader(CliDriver.java:773)<br> at org.apache.hadoop.hive.cli.CliDriver.executeDriver(CliDriver.java:715)<br> at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:675)<br> at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:615)<br> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br> at java.lang.reflect.Method.invoke(Method.java:606)<br> at org.apache.hadoop.util.RunJar.run(RunJar.java:221)<br> at org.apache.hadoop.util.RunJar.main(RunJar.java:136)</p><p>Exception in thread “main” java.lang.IncompatibleClassChangeError: Found class jline.Terminal, but interface<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:230)<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:221)<br> at jline.console.ConsoleReader.<init>(ConsoleReader.java:209)<br> at org.apache.hadoop.hive.cli.CliDriver.getConsoleReader(CliDriver.java:773)<br> at org.apache.hadoop.hive.cli.CliDriver.executeDriver(CliDriver.java:715)<br> at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:675)<br> at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:615)<br> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br> at java.lang.reflect.Method.invoke(Method.java:606)<br> at org.apache.hadoop.util.RunJar.run(RunJar.java:221)<br> at org.apache.hadoop.util.RunJar.main(RunJar.java:136)</p><p>是因为jline版本太低造成，复制hive下的jline jar包到Hadoop下即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp /home/hadoop/apache-hive-1.1.0-bin/lib/jline-2.12.jar /home/hadoop/hadoop-2.6.0/share/hadoop/yarn/lib</span><br><span class="line">stop-dfs.sh</span><br><span class="line">stop-yarn.sh</span><br><span class="line">start-dfs.sh</span><br><span class="line">start-yarn.sh</span><br><span class="line">hive</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hadoop hive</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hadoop hive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hadoop伪分布式环境搭建记录</title>
    <link href="/2016/05/12/hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <url>/2016/05/12/hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<div style="top:0px">&#65279;&#65279;Hadoop快3个月没接触了，这阶段全是阿里云的东西，乘着领导让我给同事讲讲Hadoop的机会，复习下Hadoop的知识。</div><p>hadoop伪分布式环境搭建记录20160511<br><span id="more"></span>1.解压hadoop、jdk压缩包<br></p><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_1_7823312"  name="code" class="html">tar -xvzf hadoop-2.6.0.tar.gztar -xvzf jdk-7u79-linux-x64.tar.gz</pre><br><p></p><p>2.环境变量添加<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_2_9905672"  name="code" class="html">vi ~/.bash_profileexport JAVA_HOME=/home/hadoop/jdk1.7.0_79export PATH=$PATH:$JAVA_HOME/binexport HADOOP_HOME=/home/hadoop/hadoop-2.6.0export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HADOOP_HOME/libexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</pre><br><br></p><p>修改完成，生效配置文件<br>source ~/.bash_profile</p><p>检查是否成功<br>java -version<br>hadoop version</p><p>3.修改hadoop配置文件</p><p><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_3_6067234"  name="code" class="html">&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!-- core-site.xml --&gt;&lt;configuration&gt; &lt;property&gt;  &lt;name&gt;fs.default.name&lt;/name&gt;  &lt;value&gt;hdfs://127.0.0.1/&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!-- hdfs-site.xml --&gt;&lt;configuration&gt; &lt;property&gt;  &lt;name&gt;dfs.replication&lt;/name&gt;  &lt;value&gt;1&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!-- mapred-site.xml --&gt;&lt;configuration&gt; &lt;property&gt;  &lt;name&gt;mapred.job.tracker&lt;/name&gt;  &lt;value&gt;127.0.0.1:8021&lt;/value&gt; &lt;/property&gt;&lt;property&gt;  &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;   &lt;value&gt;127.0.0.1:10020&lt;/value&gt; &lt;/property&gt; &lt;property&gt;   &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;   &lt;value&gt;127.0.0.1:19888&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!-- yarn-site.xml --&gt;&lt;configuration&gt; &lt;property&gt;  &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  &lt;value&gt;127.0.0.1:8032&lt;/value&gt; &lt;/property&gt; &lt;property&gt;  &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  &lt;value&gt;mapreduce.shuffle&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;</pre><br><br></p><p>4.安装ssh并配置免密码登录<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_4_799554"  name="code" class="html">yum install ssh#或者apt-get install sshssh-keygen -t rsa -P '' -f ~/.ssh/id_rsacat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keysssh localhost</pre><br></p><p>5.&#26684;式化hdfs<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_5_1180455"  name="code" class="html">hadoop namenode -format#此处遇到报错：java.net.UnknownHostException#修改vi /etc/sysconfig/network#HOSTNAME修改为localhost(随自己喜好，我这里设置的是Hadoop,确认/etc/hosts 里有对应的host配置就行)#重启reboot</pre><br><br></p><p>6.启动hadoop<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_6_6785609"  name="code" class="html">#start-all.sh 不推荐使用，用这个nodemanager总是起不起来start-dfs.shstart-yarn.sh</pre><br></p><p>此处遇到报错：<br>localhost: Error: JAVA_HOME is not set and could not be found.<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_7_9326101"  name="code" class="html">#修改/etc/hadoop/hadoop-env.sh中设JAVA_HOMEsource  hadoop-env.sh</pre><br><br></p><p>重新执行，此处依旧报错：<br>Cannot find configuration directory: /etc/hadoop <br>在hadoop-env.sh 配置一条hadoop配置文件所在目录：<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_8_7962898"  name="code" class="html">export HADOOP_CONF_DIR=/home/hadoop/hadoop-2.6.0/etc/hadoopsource  hadoop-env.sh</pre><br><br></p><p>7.访问web<br><a target="_blank" target="_blank" href="http://hadoop:8088/">http://hadoop:8088/</a><br><a target="_blank" target="_blank" href="http://hadoop:50070/">http://hadoop:50070/</a><br>如果无法访问，关闭防火墙<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_9_187746"  name="code" class="html">service iptables stop</pre><br></p><p>8.执行hdfs语句<br><pre code_snippet_id="2029847" snippet_file_name="blog_20161205_10_8965463"  name="code" class="html">hdfs dfs -ls</pre><br><br></p><p>至此hadoop环境搭建完毕!</p>]]></content>
    
    
    <categories>
      
      <category>hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10 驱动无法安装 系统找不到指定文件</title>
    <link href="/2016/04/27/win10%20%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%20%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6/"/>
    <url>/2016/04/27/win10%20%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%20%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>明明指定了下载的驱动文件夹，但是报错，“系统找不到指定文件”，<br>然后查看C:\Windows\INF\setupapi.dev.log文件，这是驱动安装的日志，查看信息发现：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;  [Device Install (DiShowUpdateDevice) - USB\VID_18D1&amp;PID_4EE2&amp;MI_01\6&amp;28F58FF&amp;0&amp;0001]</span><br><span class="line">&gt;&gt;&gt;  Section start 2016/04/27 10:10:28.324</span><br><span class="line">      cmd: &quot;C:\WINDOWS\system32\mmc.exe&quot; &quot;C:\WINDOWS\system32\compmgmt.msc&quot; /s</span><br><span class="line">     dvi: &#123;DIF_UPDATEDRIVER_UI&#125; 10:10:28.328</span><br><span class="line">     dvi:      Default installer: Enter 10:10:28.332</span><br><span class="line">     dvi:      Default installer: Exit</span><br><span class="line">     dvi: &#123;DIF_UPDATEDRIVER_UI - exit(0xe000020e)&#125; 10:10:28.339</span><br><span class="line">     ndv: &#123;Update Driver Software Wizard for USB\VID_18D1&amp;PID_4EE2&amp;MI_01\6&amp;28F58FF&amp;0&amp;0001&#125;</span><br><span class="line">     ndv:      Driver package &#x27;c:\users\dl\desktop\usb_driver\android_winusb.inf&#x27; exists under &#x27;C:\WINDOWS\System32\DriverStore\FileRepository\android_winusb.inf_amd64_bd75d06c56998078\android_winusb.inf&#x27; (oem87.inf).</span><br><span class="line">     dvi:      Searching for hardware ID(s):</span><br><span class="line">     dvi:           usb\vid_18d1&amp;pid_4ee2&amp;rev_0310&amp;mi_01</span><br><span class="line">     dvi:           usb\vid_18d1&amp;pid_4ee2&amp;mi_01</span><br><span class="line">     dvi:      Searching for compatible ID(s):</span><br><span class="line">     dvi:           usb\class_ff&amp;subclass_42&amp;prot_01</span><br><span class="line">     dvi:           usb\class_ff&amp;subclass_42</span><br><span class="line">     dvi:           usb\class_ff</span><br><span class="line">     dvi:      Class GUID of device changed to: &#123;3f966bd9-fa04-4ec5-991c-d326973b5128&#125;.</span><br><span class="line">     dvi:      &#123;Plug and Play Service: Device Install for USB\VID_18D1&amp;PID_4EE2&amp;MI_01\6&amp;28F58FF&amp;0&amp;0001&#125;</span><br><span class="line">     ndv:           Driver INF Path: C:\WINDOWS\INF\oem87.inf</span><br><span class="line">     ndv:           Driver Node Name: android_winusb.inf:e5735744df83a689:USB_Install:11.0.0.0:usb\vid_18d1&amp;pid_4ee2&amp;mi_01</span><br><span class="line">     ndv:           Driver Store Path: C:\WINDOWS\System32\DriverStore\FileRepository\android_winusb.inf_amd64_bd75d06c56998078\android_winusb.inf</span><br><span class="line">     dvi:           Searching for hardware ID(s):</span><br><span class="line">     dvi:                usb\vid_18d1&amp;pid_4ee2&amp;rev_0310&amp;mi_01</span><br><span class="line">     dvi:                usb\vid_18d1&amp;pid_4ee2&amp;mi_01</span><br><span class="line">     dvi:           Searching for compatible ID(s):</span><br><span class="line">     dvi:                usb\class_ff&amp;subclass_42&amp;prot_01</span><br><span class="line">     dvi:                usb\class_ff&amp;subclass_42</span><br><span class="line">     dvi:                usb\class_ff</span><br><span class="line">     dvi:           Class GUID of device changed to: &#123;3f966bd9-fa04-4ec5-991c-d326973b5128&#125;.</span><br><span class="line">     ndv:           &#123;Core Device Install&#125; 10:10:31.409</span><br><span class="line">     ndv:                &#123;Install Device - USB\VID_18D1&amp;PID_4EE2&amp;MI_01\6&amp;28F58FF&amp;0&amp;0001&#125; 10:10:31.412</span><br><span class="line">     ndv:                     Parent device: USB\VID_18D1&amp;PID_4EE2\ENU7N15A20008134</span><br><span class="line">!    ndv:                     Device class &#123;3f966bd9-fa04-4ec5-991c-d326973b5128&#125; is not configurable.</span><br><span class="line">     dvi:                     &#123;DIF_ALLOW_INSTALL&#125; 10:10:31.420</span><br><span class="line">!!!  dvi:                          Loading module &#x27;C:\WINDOWS\system32\USBCoInstaller.dll&#x27; failed.</span><br><span class="line">!!!  dvi:                          Error 193: %1 is not a valid Win32 application.</span><br><span class="line">!!!  dvi:                          Error 193 loading CoInstaller(USBCoInstaller.dll,Zoom2_CoInstaller)</span><br><span class="line">!!!  dvi:                          Error 193: %1 is not a valid Win32 application.</span><br><span class="line">     dvi:                          Default installer: Enter 10:10:31.425</span><br><span class="line">     dvi:                          Default installer: Exit</span><br><span class="line">     dvi:                     &#123;DIF_ALLOW_INSTALL - exit(0xe000020e)&#125; 10:10:31.427</span><br><span class="line">     dvi:                     &#123;DIF_INSTALLDEVICEFILES&#125; 10:10:31.428</span><br><span class="line">     dvi:                          Default installer: Enter 10:10:31.429</span><br><span class="line">     dvi:                          Default installer: Exit</span><br><span class="line">     dvi:                     &#123;DIF_INSTALLDEVICEFILES - exit(0x00000000)&#125; 10:10:31.436</span><br><span class="line">     flq:                     File &#x27;C:\WINDOWS\system32\WinUSBCoInstaller2.dll&#x27; pruned from copy.</span><br><span class="line">     flq:                     File &#x27;C:\WINDOWS\system32\WdfCoInstaller01009.dll&#x27; pruned from copy.</span><br><span class="line">!!!  flq:                     *Source Media: SPFQOPERATION_ABORT (C:\WINDOWS\System32\DriverStore\FileRepository\winusb.inf_amd64_1921d43d747bdc1c\winusb.sys).*</span><br><span class="line">!!!  flq:                     Error 2: The system cannot find the file specified.</span><br><span class="line">!!!  flq:                     FileQueueCommit aborting!</span><br><span class="line">!!!  flq:                     Error 2: The system cannot find the file specified.</span><br><span class="line">!    ndv:                     Queueing up error report since device installation failed...</span><br><span class="line">     ndv:                &#123;Install Device - exit(0x00000002)&#125; 10:10:31.589</span><br><span class="line">     ndv:           &#123;Core Device Install - exit(0x00000002)&#125; 10:10:31.589</span><br><span class="line">     ump:      &#123;Plug and Play Service: Device Install exit(00000002)&#125;</span><br><span class="line">!!!  ndv:      Device install failed for device.</span><br><span class="line">!!!  ndv:      Error 2: The system cannot find the file specified.</span><br><span class="line">     ndv:      Installing NULL driver.</span><br><span class="line">     dvi:      &#123;Plug and Play Service: Device Install for USB\VID_18D1&amp;PID_4EE2&amp;MI_01\6&amp;28F58FF&amp;0&amp;0001&#125;</span><br><span class="line">!    ndv:           Installing NULL driver!</span><br><span class="line">     dvi:           &#123;DIF_ALLOW_INSTALL&#125; 10:10:31.705</span><br><span class="line">     dvi:                Default installer: Enter 10:10:31.706</span><br><span class="line">     dvi:                Default installer: Exit</span><br><span class="line">     dvi:           &#123;DIF_ALLOW_INSTALL - exit(0xe000020e)&#125; 10:10:31.708</span><br><span class="line">     dvi:           &#123;DIF_REGISTER_COINSTALLERS&#125; 10:10:31.709</span><br><span class="line">     dvi:                Default installer: Enter 10:10:31.710</span><br><span class="line">     dvi:                Default installer: Exit</span><br><span class="line">     dvi:           &#123;DIF_REGISTER_COINSTALLERS - exit(0x00000000)&#125; 10:10:31.711</span><br><span class="line">     dvi:           &#123;DIF_INSTALLDEVICE&#125; 10:10:31.712</span><br><span class="line">     dvi:                Default installer: Enter 10:10:31.713</span><br><span class="line">!    dvi:                     Installing NULL driver!</span><br><span class="line">     dvi:                     Install Null Driver: Removing device sub-tree. 10:10:31.718</span><br><span class="line">     dvi:                     Install Null Driver: Removing device sub-tree completed. 10:10:31.762</span><br><span class="line">     dvi:                     Install Null Driver: Restarting device. 10:10:31.777</span><br><span class="line">     dvi:                     Install Null Driver: Restarting device completed. 10:10:31.800</span><br><span class="line">     dvi:                     Install Device: Starting device. 10:10:31.805</span><br><span class="line">     dvi:                     Install Device: Starting device completed. 10:10:31.916</span><br><span class="line">     dvi:                Default installer: Exit</span><br><span class="line">     dvi:           &#123;DIF_INSTALLDEVICE - exit(0x00000000)&#125; 10:10:31.918</span><br><span class="line">     ump:      &#123;Plug and Play Service: Device Install exit(00000000)&#125;</span><br><span class="line">     ndv: &#123;Update Driver Software Wizard exit(00000002)&#125;</span><br><span class="line">&lt;&lt;&lt;  Section end 2016/04/27 10:10:33.104</span><br><span class="line">&lt;&lt;&lt;  [Exit status: FAILURE(0x00000002)]</span><br></pre></td></tr></table></figure><p>关注这段：<br> !!!  flq:                     <em><strong>Source Media: SPFQOPERATION_ABORT (C:\WINDOWS\System32\DriverStore\FileRepository\winusb.inf_amd64_1921d43d747bdc1c\winusb.sys).</strong></em><br>!!!  flq:                     Error 2: The system cannot find the file specified.<br>!!!  flq:                     FileQueueCommit aborting!<br>!!!  flq:                     Error 2: The system cannot find the file specified.</p><p>C:\WINDOWS\System32\DriverStore\FileRepository\winusb.inf_amd64_1921d43d747bdc1c\winusb.sys<br>报错指这个文件找不到，然后去找了下，果然没有，连winusb.inf_amd64_XXX文件夹都没有，不过找到个类似的，只是后面的XXX部分不同，然后修改FileRepository文件夹权限，改为管理员可写可修改，原本是只读，然后到FileRepository文件夹下复制存在的winusb.inf_amd64_XXX增加一个副本，改名为报错的不存在的那个文件夹名。<br>再试着装下驱动，是不是就ok了？<br>本质上所有报此类错误的驱动安装不上的问题都可以这样解决，如果找不到报错里描述的类似文件夹，可以到其他计算机上copy过来再重命名</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿里分析型数据库ads学习记录</title>
    <link href="/2016/04/25/%E9%98%BF%E9%87%8C%E5%88%86%E6%9E%90%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93ads%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <url>/2016/04/25/%E9%98%BF%E9%87%8C%E5%88%86%E6%9E%90%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93ads%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p><span style="font-family:Helvetica,'Hiragino Sans GB',微软雅黑,'Microsoft YaHei UI',SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:auto"></span></p><div style="margin:0px; font-family:Helvetica,'Hiragino Sans GB',微软雅黑,'Microsoft YaHei UI',SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:auto"></div><p style="margin:0px; font-size:15px; line-height:24px; widows:auto"><span style="widows:auto"><span style="font-family:Microsoft YaHei">1.ads中非分区表关联问题</span></span></p><div style="margin:0px; font-size:15px; line-height:24px; widows:auto"><span style="font-family:Microsoft YaHei">无法关联或关联出结果不对，主要因为ads目前的非分区表之间的关联仅支持分区列，且分区数相同，<span style="line-height:1.6">主因为ads关联首先根据分区对应，所以所关联的表与当前表分区字段必须一致，分区数也必须一致，否则得到的结果会跟你想象中差很多。而与分区表关联则不受此限制。</span><br style="line-height:1.6"><span style="line-height:1.6">使用ads中的维度表</span></span></div><div style="margin:0px; font-size:15px; line-height:24px; widows:auto"><span style="font-family:Microsoft YaHei"><span style="line-height:1.6">可以与任意表关联，无需对应分区，无需相同分区数。</span><br><span style="line-height:1.6">实际上数据量不大的表优先考虑建成维度表，特别是需要与其他表要关联的表。</span><br></span><div style="margin:0px"><span style="font-family:Microsoft YaHei">维度表的劣势：查询性能不随着扩容提升，浪费更多存储空间，但是对于数据量不大的情况下都不是问题。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><span id="more"></span><p style="margin:0px"><span style="font-family:Microsoft YaHei">2.ads不支持带偏移量的limit</span></p><div style="margin:0px"><span style="font-family:Microsoft YaHei">实际上无法做成真实分页，而且最多只能取出前1w条数据。可以使用dump方式解决，但是不建议那么做，ads主要关注快速获得查询结果，并不适用此场景。</span></div><p style="margin:0px"><span style="font-family:Microsoft YaHei"><br>3.ads支持count(distinct columnName)<br>需修改后台配置，<br>/global/config/query --&gt;新增enableUdfSysGroupDistinctConcat&nbsp;<span style="line-height:1.6">bool类型，&#20540;false，然后count distinct可以即时生效</span></span></p><p style="margin:0px"><span style="font-family:Microsoft YaHei"><br>4.UNION无法使用或结果错误</span></p><div style="margin:0px"><span style="font-family:Microsoft YaHei">目前仅支持分区列UNION，所以带group by的聚合函数结果或查询出的非分区列结果都不可以使用union。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">注：以上基于0.8.18版本，后续版本有所更新，会另写文详解。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">之后更新会说明版本。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">=====20160805更新===========</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">版本0.9.10</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">ads性能优化</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"></span><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px"><span style="line-height:1.6">1.</span><span style="line-height:1.6">注意过滤条件加上表别名</span><br></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px">2.<span style="line-height:1.6">打平关联语句</span><span style="line-height:1.6">（采用直接关联表而非关联子查询的方式）</span></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px">3.将关联条件设置为表聚集列</div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px"><br></div><div style="margin:0px; font-family:Helvetica,&quot;Hiragino Sans GB&quot;,微软雅黑,&quot;Microsoft YaHei UI&quot;,SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px">为什么打平（直接关联表而不采用关联子查询的方式）会比子查询快，这里面涉及什么原理？<div style="margin:0px">打平之后，关联的维度表成为右表，join的时候走索引，所以很快；而子查询情况下，维度表就只能作为左表（子查询会自动将其处理为左表），实时表成为右表。实时部分的数据因为没有强大的索引，所以只能走扫描，这样就慢了。</div></div><br></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">遇到一个坑！！！强调下！！！</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">select ... a join b where xrsj&gt;....&nbsp;</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">（a为大表，上百亿数据，b为维度表，上万数据）</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">这种语句执行的时候，当xrsj这个字段只有a或者b表的时候是完全没问题的，碰巧就是a、b表都有xrsj这个字段的时候，按常理来说，应该报错的！怎么都应该报错才对，然后秀逗了，居然没有报错，还欢快地跑起来了，以至于我一个月都没找到为什么语句那么慢！</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">所以优化第一句就是过滤条件要加上表别名。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">这个bug已经提交给ads开发经理了，不过回复我优先级不会很高，什么时候修复再说。</span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><br></span></div><div style="margin:0px"><span style="font-family:Microsoft YaHei"><span style="font-family:&quot;Microsoft YaHei&quot;; font-size:15px; line-height:24px">=====201608011更新===========</span></span></div><div style="margin:0px"><br></div><div style="margin:0px"><span style="font-family:Microsoft YaHei">分区表与Group-By、Order-By查询<br></span><ul><li>Group-By条件包含分区列，则应该放到第一列，此时结果是精确的且查询性能很好</li><li>Group-By表达式如果不包含分区列（或第一列不是分区列），则分组数量在范围内（&lt;5000），结果是精确的，但性能随分组数量增加而降低</li><li>Group-By表达式如果不包含分区列（或第一列不是分区列），且分组数量不在范围内（&gt;=5000），此时结果是不精确的且性能随分组数量增加而降低</li><li>如果Group-By表达式第一列不是按分区列，则Having语句不支持</li><li>全局分组TOP(N)：Group-By表达式包含分区列，则应该放到第一列，同时包含Order-By表达式，如果分组数量在范围内（&lt;1000），结果是精确的，但性能随分组数量增加而较大降低</li><li>全局模糊分组TOP(N)：Group-By表达式第一列如果不是分区列且包含Order-By表达式，而且分组</li><li>数量不在范围内（&gt;=1000），此时结果是不精确的且性能随分组数量增加而较大降低</li><li>全数据排序：Order-By表达式第一列如果不是分区列，性能会随排序列或表达式取&#20540;增加而较大降</li></ul><div><span style="font-family:&quot;Microsoft YaHei&quot;; font-size:15px; line-height:24px">使用新引擎不受限制，我估计以后的问题，新引擎都不受限制，毕竟就是为了最大化兼容sql，但是效率较低，最重要的是我现在私有云没有新引擎：)</span><br></div><div><span style="font-family:&quot;Microsoft YaHei&quot;; font-size:15px; line-height:24px"><br></span></div></div><div style="margin:0px"><span style="font-family:&quot;Microsoft YaHei&quot;">持续更新中...</span></div></div><div style="margin:0px; font-family:Helvetica,'Hiragino Sans GB',微软雅黑,'Microsoft YaHei UI',SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:auto"><div style="margin:0px"></div></div><div style="margin:0px; font-family:Helvetica,'Hiragino Sans GB',微软雅黑,'Microsoft YaHei UI',SimSun,SimHei,arial,sans-serif; font-size:15px; line-height:24px; widows:auto"></div>]]></content>
    
    
    <categories>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里ads ads 分析型数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分析型数据库 ADS 报错 Query misses join index</title>
    <link href="/2016/04/05/%E5%88%86%E6%9E%90%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%20ADS%20%E6%8A%A5%E9%94%99%20Query%20misses%20join%20index/"/>
    <url>/2016/04/05/%E5%88%86%E6%9E%90%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%20ADS%20%E6%8A%A5%E9%94%99%20Query%20misses%20join%20index/</url>
    
    <content type="html"><![CDATA[<div>查询了下，看到阿里官网解释的是</div><div>【目前分析型数据库中使用JOIN时若一方是物理表，那么物理表参与JOIN的列必须是分区列并且已建立HASH索引】</div><div>然后就按照要求把索引改为HASH索引，继续执行JOIN，但是还是报相同错误，遂问了下阿里的技术人员，得到答案：</div><div><strong>确认表是实时更新表还是批量表，如果是批量表的话，是否在新增索引后有重新加载数据，如果是实时更新表是否已经做过表分析optimize table &lt;tablename&gt;;&nbsp;</strong></div><div><strong>到控制台导入导出的地方看一下记录，看表分析是否已经结束了。表分析需要一定的时间。目前在表分析的时候，会产生一条导入记录。那个记录是成功了，才是分析好了。</strong>&nbsp;</div><div></div><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>阿里云</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>python实现windows ie代理切换</title>
    <link href="/2015/11/15/python%E5%AE%9E%E7%8E%B0windows%20ie%E4%BB%A3%E7%90%86%E5%88%87%E6%8D%A2/"/>
    <url>/2015/11/15/python%E5%AE%9E%E7%8E%B0windows%20ie%E4%BB%A3%E7%90%86%E5%88%87%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<p>以前在杭州公司是需要设代理才可以连接外网，忽然一天不需要了，就没怎么想过这个问题。</p><p>这次来无锡出差，天天需要设置代理，如果不...就会这样:</p><p>回宿舍还得把代理取消。</p><p>遂偷懒...考虑了下...是否可以写个程序运行完成...<br><span id="more"></span></p><p>首先查询到，windows的ie代理实际上是修改注册表项的相关内容参数完成的。</p><p>这下就简单多了，只需修改注册表里的项内容就行。</p><pre class="brush:python;toolbar:false">import io, sys, time, re, osimport winreg#表项路径xpath = &quot;Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;<p>#设定代理,enable:是否开启,proxyIp:代理服务器ip及端口,IgnoreIp:忽略代理的ip或网址<br>def setProxy(enable,proxyIp,IgnoreIp):<br>    try:<br>        key &#x3D; winreg.OpenKey(winreg.HKEY_CURRENT_USER, xpath, 0, winreg.KEY_WRITE)<br>        winreg.SetValueEx(key, &quot;ProxyEnable&quot;, 0, winreg.REG_DWORD, enable)<br>        winreg.SetValueEx(key, &quot;ProxyServer&quot;, 0, winreg.REG_SZ, proxyIp)<br>        winreg.SetValueEx(key, &quot;ProxyOverride&quot;, 0, winreg.REG_SZ, IgnoreIp)<br>    except Exception as e:<br>        print(&quot;ERROR: &quot; &amp;#43; str(e.args))<br>    finally:<br>        None</p><p>#开启，定义代理服务器ip及端口，忽略ip内容(分号分割)<br>def enableProxy():<br>    proxyIP &#x3D; &quot;172.21.18.21:8080&quot;<br>    IgnoreIp &#x3D; &quot;172.<em>;192.</em>;&quot;<br>    print(&quot; Setting proxy&quot;)<br>    setProxy(1,proxyIP,IgnoreIp)<br>    print(&quot; Setting success&quot;)</p><p>#关闭清空代理<br>def disableProxy():<br>    print(&quot; Empty proxy&quot;)<br>    setProxy(0,&quot;&quot;,&quot;&quot;)<br>    print(&quot; Empty success&quot;)</p><p>def main():<br>    place &#x3D; input(&quot;where are you?(home or ls)\n&quot;)<br>    try:<br>        if place&#x3D;&#x3D;&quot;home&quot;:<br>            disableProxy()<br>        elif place&#x3D;&#x3D;&quot;ls&quot;:<br>            enableProxy()<br>        else:<br>            print(&quot;please input ‘home’ or ‘ls’(longshine)!&quot;)<br>            main()<br>    except Exception as e:<br>        print(&quot;ERROR: &quot; &amp;#43; str(e.args))<br>    finally:<br>        pass</p><p>if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘:<br>    main()<br></pre></p><p>完成...其实后来想想用批处理也可以解决...反正就是修改注册表项。</p><pre class="brush:bash;toolbar:false">@echo offtitle 设置代理服务器echo 正在设置代理服务器……reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyEnable /t REG_DWORD /d 1 /freg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyServer /d &quot;172.21.18.21:8080&quot; /freg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyOverride /t REG_SZ /d &quot;172.*;192.*;&quot; /fecho 设置完毕</pre><pre class="brush:bash;toolbar:false">@echo offtitle 清空代理服务器 没有代理echo 正在清空代理服务器设置……reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyEnable /t REG_DWORD /d 0 /freg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyServer /d &quot;&quot; /fecho 代理服务器设置已经清空</pre>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python 代理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>The following classes could not be instantiated- android.support.v7.widget.Toolbar 解决方法</title>
    <link href="/2015/09/04/The%20following%20classes%20could%20not%20be%20instantiated!%20-%20android.support.v7.widget.Toolbar%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2015/09/04/The%20following%20classes%20could%20not%20be%20instantiated!%20-%20android.support.v7.widget.Toolbar%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px"></p><p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px">初学安卓，找了半天，各种方法不行，这个解决了。</p><span id="more"></span><p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px">原网址（http://stackoverflow.com/questions/26575815/the-following-classes-could-not-be-instantiated-android-support-v7-widget-too）</p><p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px">I changed the res/values/styles.xml file from this:</p><pre style="margin-top:0px; margin-bottom:1em; padding:5px; border:0px; font-size:13px; overflow:auto; width:auto; max-height:600px; font-family:Consolas,Menlo,Monaco,'Lucida Console','Liberation Mono','DejaVu Sans Mono','Bitstream Vera Sans Mono','Courier New',monospace,sans-serif; word-wrap:normal; color:rgb(34,34,34); background-color:rgb(238,238,238)"><code style="margin:0px; padding:0px; border:0px; font-family:Consolas,Menlo,Monaco,'Lucida Console','Liberation Mono','DejaVu Sans Mono','Bitstream Vera Sans Mono','Courier New',monospace,sans-serif; white-space:inherit">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</code></pre><p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px">to this:</p><pre style="margin-top:0px; margin-bottom:1em; padding:5px; border:0px; font-size:13px; overflow:auto; width:auto; max-height:600px; font-family:Consolas,Menlo,Monaco,'Lucida Console','Liberation Mono','DejaVu Sans Mono','Bitstream Vera Sans Mono','Courier New',monospace,sans-serif; word-wrap:normal; color:rgb(34,34,34); background-color:rgb(238,238,238)"><code style="margin:0px; padding:0px; border:0px; font-family:Consolas,Menlo,Monaco,'Lucida Console','Liberation Mono','DejaVu Sans Mono','Bitstream Vera Sans Mono','Courier New',monospace,sans-serif; white-space:inherit">&lt;style name=&quot;AppTheme&quot; parent=&quot;Base.Theme.AppCompat.Light.DarkActionBar&quot;&gt;</code></pre><p style="margin-top:0px; margin-bottom:1em; padding-top:0px; padding-bottom:0px; border:0px; font-size:15px; clear:both; color:rgb(34,34,34); font-family:'Helvetica Neue',Helvetica,Arial,sans-serif; line-height:19.5px">and that solved the problem.</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>python3+BeautifulSoup+tkinter 爬虫 获取学校成绩</title>
    <link href="/2015/03/10/python3+BeautifulSoup+tkinter%20%E7%88%AC%E8%99%AB%20%E8%8E%B7%E5%8F%96%E5%AD%A6%E6%A0%A1%E6%88%90%E7%BB%A9/"/>
    <url>/2015/03/10/python3+BeautifulSoup+tkinter%20%E7%88%AC%E8%99%AB%20%E8%8E%B7%E5%8F%96%E5%AD%A6%E6%A0%A1%E6%88%90%E7%BB%A9/</url>
    
    <content type="html"><![CDATA[<p>写的是一个小爬虫，有界面，爬取学校成绩</p><span id="more"></span><p>从最开始只用python3&#43;正则表达式</p><p>然后加界面用tkinter</p><p>到最后加了BeautifulSoup</p><p>现在看起来和谐多了</p><pre name="code" class="python">&lt;pre name=&quot;code&quot; class=&quot;python&quot;&gt;#获取学校成绩</pre><pre></pre><pre name="code" class="python">import re,string,urllib.parse,urllib.requestfrom tkinter import *from tkinter import ttkfrom bs4 import BeautifulSoupclass AhutScore:    def __init__(self):        print(&#39;已经启动安工大成绩查询爬虫，咔嚓咔嚓&#39;)<pre><code>def getAhutScore(self,stuNo,idCard,xn,xq):    #通过HttpWatch抓包的当前网站的形式    postdata=urllib.parse.urlencode(&#123;        &amp;#39;__EVENTVALIDATION&amp;#39;:&amp;#39;/wEWIQLH/uyCBwLs0bLrBgLs0fbZDALWrMSACwKEx5fABgKFx/uABQKax7/ABwKax6OABgKbx6OABgKYx+dBAsKF4K8GAs2FiJQIAsqF5O0IAsOF8PcLAsCFjO0JAvGV4pUFAv/6yPsJAv76yPsJAvbLmuYBAq7k2jACzqvD4A4CrvycrAcCi+uC+wwCn/nbgQ0C4d349AoC9PbF/AwCrZj0xQsCrZiIoQQC0sqYtwoC6MqwtAcC1srwtQoChobTsw4C1orq2A/lc4cMuGz9/vf0WzeaMjk2B63pi/yD0c3bh6AkZ2usTA==&amp;#39;,        &amp;#39;__VIEWSTATE&amp;#39;:&amp;#39;/wEPDwUKLTc5MTY3NzY2OA9kFgICAw9kFg4CBQ8QZBAVDA09Peivt+mAieaLqT09CTIwMTQtMjAxNQkyMDEzLTIwMTQJMjAxMi0yMDEzCTIwMTEtMjAxMwkyMDExLTIwMTIJMjAxMC0yMDExCTIwMDktMjAxMAkyMDA4LTIwMDkJMjAwNy0yMDA4CTIwMDYtMjAwNwkyMDA1LTIwMDYVDAAJMjAxNC0yMDE1CTIwMTMtMjAxNAkyMDEyLTIwMTMJMjAxMS0yMDEzCTIwMTEtMjAxMgkyMDEwLTIwMTEJMjAwOS0yMDEwCTIwMDgtMjAwOQkyMDA3LTIwMDgJMjAwNi0yMDA3CTIwMDUtMjAwNhQrAwxnZ2dnZ2dnZ2dnZ2dkZAIHDxBkEBUDDT096K+36YCJ5oupPT0BMgExFQMAATIBMRQrAwNnZ2dkZAIdD2QWAgIFDzwrABEAZAIfD2QWAgIBDzwrABEAZAIjD2QWAgIJDzwrABEAZAIlD2QWAgIDDxBkZBYBZmQCJw9kFgICAQ88KwARAQEQFgAWABYAZBgEBQlHcmlkVmlldzMPZ2QFCUdyaWRWaWV3MQ9nZAUMR3JpZFZpZXdfY2owD2dkBQtHcmlkVmlld19jag9nZJ3osNiaHFKtpB351twVA++gU7GdyOdYypVlNUYHNaNo&amp;#39;,        &amp;#39;__VIEWSTATEGENERATOR&amp;#39;:&amp;#39;DCA2160B&amp;#39;,        &amp;#39;Button_cjcx&amp;#39;:&amp;#39;查询&amp;#39;,          &amp;#39;drop_type&amp;#39;:&amp;#39;全部成绩&amp;#39;,          &amp;#39;drop_xn&amp;#39;:xn,          &amp;#39;drop_xq&amp;#39;:xq,          &amp;#39;hid_dqszj&amp;#39;:&amp;#39;&amp;#39;,        &amp;#39;TextBox1&amp;#39;:stuNo,        &amp;#39;TextBox2&amp;#39;:idCard    &#125;).encode(encoding=&amp;#39;utf-8&amp;#39;)    #伪装消息头，伪装用户访问    headers = &#123;          &amp;#39;User-Agent&amp;#39;:&amp;#39;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;#39;      &#125;    #创建请求对象    req = urllib.request.Request(        url = &amp;#39;http://211.70.149.134:8080/stud_score/brow_stud_score.aspx&amp;#39;,          data = postdata,        headers = headers    )    #接收结果对象    result = urllib.request.urlopen(req)    #读取并解码    unicodePage = result.read().decode(&amp;#39;utf-8&amp;#39;)    soup = BeautifulSoup(unicodePage)    #print(soup.prettify())    stuMsg = soup.find(&amp;#39;span&amp;#39;,id=&amp;#39;Label1&amp;#39;).string    #stuMsg = soup.html(&amp;#39;span&amp;#39;,attrs=&#123;&amp;quot;id&amp;quot;: &amp;quot;Label1&amp;quot;&#125;)[0].string    #scoreMsg = re.findall(&amp;#39;&amp;lt;tr align=&amp;quot;left&amp;quot; onmouseover=&amp;quot;c=this.style.backgroundColor;this.style.backgroundColor=&amp;#39;#EEC470&amp;#39;&amp;quot; onmouseout=&amp;quot;this.style.backgroundColor=c&amp;quot; style=&amp;quot;.*?&amp;quot;&amp;gt;(.*?)&amp;lt;/tr&amp;gt;&amp;#39;,unicodePage,re.S)    # &amp;lt;tr class=&amp;quot;Freezing&amp;quot; style=&amp;quot;color:White;background-color:#006699;border-color:#6666FF;font-weight:bold;height:25px;&amp;quot;&amp;gt;&amp;lt;th&amp;gt;*n&amp;lt;/tr&amp;gt;    #&amp;lt;span id=&amp;quot;Label_SHOW&amp;quot; style=&amp;quot;font-size:Small;color: #003300; font-family: 微软雅黑;&amp;quot;&amp;gt;共找到4条记录!&amp;lt;/span&amp;gt;    items = []    labelShow = soup.find(&amp;#39;span&amp;#39;,id=&amp;#39;Label_SHOW&amp;#39;).string    if labelShow == &amp;#39;没有返回记录!&amp;#39;:        return items,stuMsg,labelShow    scoreTitle = soup.find(&amp;#39;tr&amp;#39;,class_=&amp;#39;Freezing&amp;#39;)(&amp;#39;th&amp;#39;)    scoreMsg = soup(&amp;#39;tr&amp;#39;,align=&amp;#39;left&amp;#39;,onmouseout=&amp;quot;this.style.backgroundColor=c&amp;quot;)        for itemMsg in scoreMsg:        #itemScore = re.findall(&amp;#39;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td style=&amp;quot;.*?&amp;quot;&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&amp;#39;,itemMsg,re.S)        itemScore = itemMsg(&amp;#39;td&amp;#39;)        dicts =&#123;&#125;        for i in range(15):            dicts[scoreTitle[i].string] = itemScore[i].string.replace(&amp;#39;\xa0&amp;#39;,&amp;#39;&amp;#39;)        items.append(dicts)    print(items)    return items,stuMsg,labelShowdef getGUI(self):    def test():        result = self.getAhutScore(stuNo.get(),idCard.get(),xn.get(),xq.get())        rstk = Tk()        rstk.title(&amp;#39;成绩查询结果&amp;#39;)        rstk.resizable(width=False, height=False)        t=Text(rstk)        t.insert(1.0,result[1]+&amp;#39;\n&amp;#39;)        t.insert(2.0,&amp;#39;-&amp;#39;*32+result[2]+&amp;#39;-&amp;#39;*32+&amp;#39;\n&amp;#39;)        if result[0]!=[]:            for item in result[0]:                t.insert(3.0,item[&amp;#39;课程名&amp;#39;]+&amp;#39;:&amp;#39;+item[&amp;#39;总评成绩&amp;#39;]+&amp;#39;\n&amp;#39;)        else:            t.insert(3.0,&amp;#39;暂无信息!\n&amp;#39;)        t.grid(row=5, column=0,columnspan=4)    root = Tk()    root.geometry()    root.resizable(width=False, height=False)    root.title(&amp;#39;ahut成绩查询&amp;#39;)    Label(root,text=&amp;#39;学号:&amp;#39;).grid(row=0, column=0,sticky=W)    Label(root,text=&amp;#39;身份证号:&amp;#39;).grid(row=0, column=2,sticky=W)    Label(root,text=&amp;#39;学年:&amp;#39;).grid(row=1, column=0,sticky=W)    Label(root,text=&amp;#39;学期:&amp;#39;).grid(row=1, column=2,sticky=W)    stuNo = StringVar()    idCard = StringVar()    xn = StringVar()    xq = StringVar()    #Entry(root, textvariable=e, state=&amp;quot;readonly&amp;quot;, show=&amp;quot;*&amp;quot;)    Entry(root,textvariable = stuNo).grid(row=0, column=1)    Entry(root,textvariable = idCard).grid(row=0, column=3)    stuNo.set(&amp;#39;11908***&amp;#39;)    idCard.set(&amp;#39;34082*************&amp;#39;)    xnBox = ttk.Combobox(root,textvariable=xn,state=&amp;#39;readonly&amp;#39;)    xnBox[&amp;#39;values&amp;#39;] = (&amp;#39;&amp;#39;,&amp;#39;2010-2011&amp;#39;, &amp;#39;2011-2012&amp;#39;, &amp;#39;2012-2013&amp;#39;,&amp;#39;2013-2014&amp;#39;, &amp;#39;2014-2015&amp;#39;)    xnBox.set(&amp;#39;2014-2015&amp;#39;)    xnBox.grid(row=1, column=1)    xqBox = ttk.Combobox(root,textvariable=xq,state=&amp;#39;readonly&amp;#39;)    xqBox[&amp;#39;values&amp;#39;] = (&amp;#39;&amp;#39;,&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;)    xqBox.set(&amp;#39;1&amp;#39;)    xqBox.grid(row=1, column=3)    b = Button(root,text=&amp;#39;查询&amp;#39;,command=test).grid(row=4, columnspan=4)    #label = Label(root,text=&amp;#39;&amp;#169; F8&amp;#39;).grid()    root.mainloop()</code></pre><p>ahutScore &#x3D; AhutScore()<br>ahutScore.getGUI()<br></pre></p><p></p><div><img src="https://img-blog.csdn.net/20150310134454603" alt=""><img src="https://img-blog.csdn.net/20150310134629559" alt=""><br></div><br><p></p>]]></content>
    
    
    
    <tags>
      
      <tag>python BeautifulSoup tkinter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js伪分页</title>
    <link href="/2014/12/04/js%E4%BC%AA%E5%88%86%E9%A1%B5/"/>
    <url>/2014/12/04/js%E4%BC%AA%E5%88%86%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px">挑战杯的一个项目，大部分同学在做，然后需要分页的功能，为了不影响同学服务端代码，干脆js分页了，效果还好，当然如果你的数据量不小，千万不要用这个方法....</p><span id="more"></span><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px">jsp的列表数据&nbsp;以及&nbsp;分页&nbsp;页号、上下页&nbsp;链接生成</p><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px"><img src="http://imglf0.ph.126.net/URRZxNbYcFKg3bp9p7sk-Q==/6608524478795013801.png" border="0" hspace="0" vspace="0" alt="" style="border:0px; max-width:100%; margin-bottom:20px; vertical-align:middle"></p><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px">引入分页paging.js,之前需要定义好，size、项目行数、总页数</p><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px"><img src="http://imglf0.ph.126.net/hFYL_ZomEtZHYkuUfqI0Cw==/3242310256830594336.png" border="0" hspace="0" vspace="0" alt="" style="border:0px; max-width:100%; margin-bottom:20px; vertical-align:middle"><br><br>paging.js</p><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px"><img src="http://imglf1.ph.126.net/A0uVqkMUxSuDUW9QWWCjIg==/6599289680634484369.png" border="0" hspace="0" vspace="0" alt="" style="border:0px; max-width:100%; margin-bottom:20px; vertical-align:middle"><br></p><p style="margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; color:rgb(102,102,102); font-family:'Hiragino Sans GB','Microsoft YaHei',微软雅黑,tahoma,arial,simsun,宋体; line-height:24px">同步发布在lofter&nbsp;http://delin.ml/post/327197_416976a</p>]]></content>
    
    
    
    <tags>
      
      <tag>js分页 分页 js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2000/10/10/hello-world/"/>
    <url>/2000/10/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
